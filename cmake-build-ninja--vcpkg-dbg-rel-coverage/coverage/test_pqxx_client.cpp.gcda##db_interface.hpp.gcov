        -:    0:Source:/home/neo/MedicamentLibrary/common/db/interface/db_interface.hpp
        -:    0:Graph:/home/neo/MedicamentLibrary/cmake-build-ninja--vcpkg-dbg-rel-coverage/tests/CMakeFiles/DrugLib_Tests_Unit_PqxxClient.dir/unit_tests/pqxx_client/test_pqxx_client.cpp.gcno
        -:    0:Data:/home/neo/MedicamentLibrary/cmake-build-ninja--vcpkg-dbg-rel-coverage/tests/CMakeFiles/DrugLib_Tests_Unit_PqxxClient.dir/unit_tests/pqxx_client/test_pqxx_client.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#pragma once
        -:    2:
        -:    3:#include <memory>
        -:    4:#include <string_view>
        -:    5:#include <type_traits>
        -:    6:#include <vector>
        -:    7:
        -:    8:#include "db_conditions.hpp"
        -:    9:#include "db_field.hpp"
        -:   10:#include "db_record.hpp"
        -:   11:
        -:   12:namespace drug_lib::common::database::interfaces
        -:   13:{
        -:   14:    using namespace drug_lib::common::database;
        -:   15:    template <typename T>
        -:   16:    concept RecordContainer = std::is_same_v<std::remove_cvref_t<T>, std::vector<Record>>;
        -:   17:    template <typename T>
        -:   18:    concept FieldBaseVector = std::is_same_v<std::remove_cvref_t<T>, std::vector<std::unique_ptr<FieldBase>>>;
        -:   19:
        -:   20:    class DbInterface
        -:   21:    {
        -:   22:    public:
function _ZN8drug_lib6common8database10interfaces11DbInterfaceD2Ev called 20 returned 100% blocks executed 100%
       20:   23:        virtual ~DbInterface() = default;
       20:   23-block  0
        -:   24:
        -:   25:        // Transaction Methods
        -:   26:        virtual void start_transaction() = 0;
        -:   27:        virtual void commit_transaction() = 0;
        -:   28:        virtual void rollback_transaction() = 0;
        -:   29:
        -:   30:        virtual void drop_connect() = 0;
        -:   31:        // Table Management
        -:   32:        virtual void create_table(std::string_view table_name, const Record& field_list) = 0;
        -:   33:        virtual void remove_table(std::string_view table_name) = 0;
        -:   34:        [[nodiscard]] virtual bool check_table(std::string_view table_name) = 0;
        -:   35:
        -:   36:        virtual void make_unique_constraint(std::string_view table_name,
        -:   37:                                            std::vector<std::shared_ptr<FieldBase>> conflict_fields) = 0;
        -:   38:        virtual void setup_fts_index(std::string_view table_name,
        -:   39:                                     std::vector<std::shared_ptr<FieldBase>> fields) = 0;
        -:   40:        /// @brief Drop index, but doesn't remove fts fields from this client. Allows to restore it(reindex) using restore_full_text_search method
        -:   41:        virtual void drop_fts_index(std::string_view table_name) const = 0;
        -:   42:
        -:   43:        /// @brief Drop index + remove fields from this client. For using fts further setup_fulltext_search should be called again
        -:   44:        virtual void remove_fts_index(std::string_view table_name) = 0;
        -:   45:
        -:   46:        /// @brief Restore index + reindex. Use previous declared fts fields
        -:   47:        virtual void restore_fts_index(std::string_view table_name) const = 0;
        -:   48:        // Data Manipulation using Perfect Forwarding
        -:   49:        template <RecordContainer Rows>
function _ZN8drug_lib6common8database10interfaces11DbInterface6insertITkNS2_15RecordContainerERSt6vectorINS1_6RecordESaIS6_EEEEvSt17basic_string_viewIcSt11char_traitsIcEEOT_ called 12 returned 100% blocks executed 100%
function _ZN8drug_lib6common8database10interfaces11DbInterface6insertITkNS2_15RecordContainerESt6vectorINS1_6RecordESaIS6_EEEEvSt17basic_string_viewIcSt11char_traitsIcEEOT_ called 100052 returned 100% blocks executed 100%
   100064:   50:        void insert(std::string_view table_name, Rows&& rows)
        -:   51:        {
   100064:   52:            insert_implementation(table_name, std::forward<Rows>(rows));
   100064:   53:        }
       12:   53-block  0
   100052:   53-block  1
        -:   54:
        -:   55:        // Upsert Data using Perfect Forwarding
        -:   56:        template <RecordContainer Rows>
function _ZN8drug_lib6common8database10interfaces11DbInterface6upsertITkNS2_15RecordContainerERSt6vectorINS1_6RecordESaIS6_EEEEvSt17basic_string_viewIcSt11char_traitsIcEEOT_RKS5_ISt10shared_ptrINS1_9FieldBaseEESaISI_EE called 2 returned 100% blocks executed 100%
        2:   57:        void upsert(std::string_view table_name,
        -:   58:                    Rows&& rows,
        -:   59:                    const std::vector<std::shared_ptr<FieldBase>>& replace_fields)
        -:   60:        {
        2:   61:            upsert_implementation(table_name, std::forward<Rows>(rows), replace_fields);
        2:   62:        }
        2:   62-block  0
        -:   63:
        -:   64:        // Data Retrieval
        -:   65:        [[nodiscard]] virtual std::vector<Record> select(
        -:   66:            std::string_view table_name) const = 0;
        -:   67:        // Data Retrieval
        -:   68:        [[nodiscard]] virtual std::vector<Record> select(
        -:   69:            std::string_view table_name,
        -:   70:            const Conditions& conditions) const = 0;
        -:   71:        [[nodiscard]] virtual std::vector<std::unique_ptr<ViewRecord>> view(
        -:   72:            std::string_view table_name,
        -:   73:            const Conditions& conditions) const = 0;
        -:   74:        [[nodiscard]] virtual std::vector<std::unique_ptr<ViewRecord>> view(std::string_view table_name) const = 0;
        -:   75:        // Remove Data
        -:   76:        virtual void remove(
        -:   77:            std::string_view table_name,
        -:   78:            const Conditions& conditions) = 0;
        -:   79:        virtual void truncate_table(std::string_view table_name) = 0;
        -:   80:        [[nodiscard]] virtual uint32_t count(std::string_view table_name,
        -:   81:                                             const Conditions& conditions) const = 0;
        -:   82:        [[nodiscard]] virtual uint32_t count(std::string_view table_name) const = 0;
        -:   83:
        -:   84:    protected:
        -:   85:        // Implementation Methods for Data Manipulation
        -:   86:        virtual void insert_implementation(std::string_view table_name, const std::vector<Record>& rows) = 0;
        -:   87:        virtual void insert_implementation(std::string_view table_name, std::vector<Record>&& rows) = 0;
        -:   88:
        -:   89:        virtual void upsert_implementation(std::string_view table_name,
        -:   90:                                           const std::vector<Record>& rows,
        -:   91:                                           const std::vector<std::shared_ptr<FieldBase>>& replace_fields) = 0;
        -:   92:
        -:   93:        virtual void upsert_implementation(std::string_view table_name,
        -:   94:                                           std::vector<Record>&& rows,
        -:   95:                                           const std::vector<std::shared_ptr<FieldBase>>& replace_fields) = 0;
        -:   96:    };
        -:   97:}
