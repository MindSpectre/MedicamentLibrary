        -:    0:Source:/home/neo/MedicamentLibrary/data/objects/properties/patients/include/patient_properties/current_diseases.hpp
        -:    0:Graph:/home/neo/MedicamentLibrary/cmake-build-ninja--vcpkg-dbg-rel-coverage/tests/unit_tests/objects/CMakeFiles/DrugLib_Tests_Unit_Objects_Patient_Properties.dir/patient/properties/properties_test.cpp.gcno
        -:    0:Data:/home/neo/MedicamentLibrary/cmake-build-ninja--vcpkg-dbg-rel-coverage/tests/unit_tests/objects/CMakeFiles/DrugLib_Tests_Unit_Objects_Patient_Properties.dir/patient/properties/properties_test.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#pragma once
        -:    2:
        -:    3:#include <ostream>
        -:    4:
        -:    5:#include "patients/source/properties_definition.hpp"
        -:    6:
        -:    7:namespace drug_lib::data::objects::patients
        -:    8:{
        -:    9:    class CurrentDiseases final : public DataProperty
        -:   10:    {
        -:   11:    public:
function _ZN8drug_lib4data7objects8patients15CurrentDiseasesC2Ev called 4 returned 100% blocks executed 100%
        4:   12:        CurrentDiseases() = default;
        4:   12-block  0
        -:   13:
function _ZN8drug_lib4data7objects8patients15CurrentDiseasesC2ERKN4Json5ValueE called 2 returned 100% blocks executed 50%
        4:   14:        explicit CurrentDiseases(const Json::Value& properties)
        2:   15:        {
        2:   16:            this->set_info(properties);
        2:   16-block  0
branch  0 taken 2
branch  1 taken 0
        2:   17:        }
        2:   17-block  0
    $$$$$:   17-block  1
    $$$$$:   17-block  2
        -:   18:
function _ZN8drug_lib4data7objects8patients15CurrentDiseasesC2ESt6vectorIiSaIiEE called 4 returned 100% blocks executed 100%
        4:   19:        explicit CurrentDiseases(std::vector<int32_t> current_diseases)
        4:   20:            : current_diseases_(std::move(current_diseases))
        4:   21:        {
        4:   22:        }
        4:   22-block  0
        -:   23:
function _ZN8drug_lib4data7objects8patients15CurrentDiseasesD2Ev called 10 returned 100% blocks executed 100%
function _ZN8drug_lib4data7objects8patients15CurrentDiseasesD0Ev called 0 returned 0% blocks executed 0%
       10:   24:        ~CurrentDiseases() override = default;
       10:   24-block  0
    $$$$$:   24-block  1
        -:   25:
        -:   26:        [[nodiscard]] const std::vector<int32_t>& get_current_diseases() const
        -:   27:        {
        -:   28:            return current_diseases_;
        -:   29:        }
        -:   30:
        -:   31:        void set_current_diseases(std::vector<int32_t> symptoms)
        -:   32:        {
        -:   33:            current_diseases_ = std::move(symptoms);
        -:   34:        }
        -:   35:
        -:   36:        template <typename... Args>
        -:   37:        CurrentDiseases& emplace_back(Args&&... args)
        -:   38:        {
        -:   39:            current_diseases_.emplace_back(std::forward<Args>(args)...);
        -:   40:            return *this;
        -:   41:        }
        -:   42:
        -:   43:        void push_back(const int32_t disease_id)
        -:   44:        {
        -:   45:            current_diseases_.push_back(disease_id);
        -:   46:        }
        -:   47:
        -:   48:        void pop_back()
        -:   49:        {
        -:   50:            current_diseases_.pop_back();
        -:   51:        }
        -:   52:
        -:   53:        int32_t operator[](const std::size_t index) const
        -:   54:        {
        -:   55:            if (index >= current_diseases_.size())
        -:   56:            {
        -:   57:                throw std::out_of_range("index out of range");
        -:   58:            }
        -:   59:            return current_diseases_[index];
        -:   60:        }
        -:   61:
        -:   62:        int32_t& operator[](const std::size_t index)
        -:   63:        {
        -:   64:            return current_diseases_[index];
        -:   65:        }
        -:   66:
function _ZNK8drug_lib4data7objects8patients15CurrentDiseases8get_infoEv called 6 returned 100% blocks executed 61%
        6:   67:        [[nodiscard]] Json::Value get_info() const override
        -:   68:        {
        6:   69:            Json::Value result(Json::arrayValue);
       24:   70:            for (const auto& ids : current_diseases_)
        6:   70-block  0
       24:   70-block  1
branch  0 taken 6
branch  1 taken 18
       18:   70-block  2
       18:   70-block  3
        -:   71:            {
       18:   72:                result.append(ids);
       18:   72-block  0
branch  0 taken 18
branch  1 taken 0
       18:   72-block  1
branch  2 taken 18
branch  3 taken 0
    $$$$$:   72-block  2
        -:   73:            }
        6:   74:            return result;
        6:   75:        }
    $$$$$:   75-block  0
        6:   75-block  1
branch  0 taken 6
branch  1 taken 0
    $$$$$:   75-block  2
        6:   75-block  3
    $$$$$:   75-block  4
    $$$$$:   75-block  5
        -:   76:
function _ZN8drug_lib4data7objects8patients15CurrentDiseases8set_infoERKN4Json5ValueE called 4 returned 100% blocks executed 80%
        4:   77:        void set_info(const Json::Value& property) override
        -:   78:        {
        4:   79:            if (!property.isArray())
        4:   79-block  0
branch  0 taken 3
branch  1 taken 1
        -:   80:            {
        1:   81:                throw std::invalid_argument("Property is not an array");
        1:   81-block  0
branch  0 taken 1
branch  1 taken 0
        1:   81-block  1
    $$$$$:   81-block  2
    $$$$$:   81-block  3
        -:   82:            }
        3:   83:            current_diseases_.reserve(property.size());
        8:   84:            for (const auto& it : property)
        3:   84-block  0
        8:   84-block  1
branch  0 taken 5
branch  1 taken 3
        5:   84-block  2
        5:   84-block  3
        5:   84-block  4
        -:   85:            {
        5:   86:                current_diseases_.push_back(it.asInt());
        -:   87:            }
        3:   88:        }
        3:   88-block  0
        -:   89:
function _ZNK8drug_lib4data7objects8patients15CurrentDiseases8get_nameB5cxx11Ev called 6 returned 100% blocks executed 50%
        6:   90:        [[nodiscard]] std::string get_name() const override
        -:   91:        {
        6:   92:            return properties::current_diseases;
        6:   92-block  0
branch  0 taken 6
branch  1 taken 0
        6:   92-block  1
    $$$$$:   92-block  2
    $$$$$:   92-block  3
    #####:   93:        }
        -:   94:
        -:   95:        friend std::ostream& operator<<(std::ostream& os, const CurrentDiseases& obj)
        -:   96:        {
        -:   97:            os << "[";
        -:   98:            for (std::size_t idx = 0; idx < obj.current_diseases_.size(); ++idx)
        -:   99:            {
        -:  100:                os << obj.current_diseases_[idx];
        -:  101:                if (idx < obj.current_diseases_.size() - 1)
        -:  102:                {
        -:  103:                    os << ", ";
        -:  104:                }
        -:  105:            }
        -:  106:            os << "]";
        -:  107:            return os;
        -:  108:        }
        -:  109:
        -:  110:    private:
        -:  111:        std::vector<int32_t> current_diseases_;
        -:  112:    };
        -:  113:}
