        -:    0:Source:/home/neo/MedicamentLibrary/tests/unit_tests/pqxx_client/test_pqxx_client.cpp
        -:    0:Graph:/home/neo/MedicamentLibrary/cmake-build-ninja--vcpkg-dbg-rel-coverage/tests/CMakeFiles/DrugLib_Tests_Unit_PqxxClient.dir/unit_tests/pqxx_client/test_pqxx_client.cpp.gcno
        -:    0:Data:/home/neo/MedicamentLibrary/cmake-build-ninja--vcpkg-dbg-rel-coverage/tests/CMakeFiles/DrugLib_Tests_Unit_PqxxClient.dir/unit_tests/pqxx_client/test_pqxx_client.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// pqxx_client_test.cpp
        -:    2:
        -:    3:#include <barrier>
        -:    4:#include <chrono>
        -:    5:#include <db_interface_factory.hpp>
        -:    6:#include <functional>
        -:    7:#include <gtest/gtest.h>
        -:    8:
        -:    9:#include "db_conditions.hpp"
        -:   10:#include "db_field.hpp"
        -:   11:#include "db_record.hpp"
        -:   12:#include "pqxx_client.hpp"
        -:   13:#include "pqxx_utilities.hpp"
        -:   14:#include "stopwatch.hpp"
        -:   15:using namespace drug_lib::common::database;
        -:   16:
function _ZN14PqxxClientTestC2Ev called 20 returned 100% blocks executed 50%
function _ZN14PqxxClientTestD2Ev called 20 returned 100% blocks executed 100%
function _ZN14PqxxClientTestD0Ev called 0 returned 0% blocks executed 0%
       20:   17:class PqxxClientTest : public testing::Test
       20:   17-block  0
    $$$$$:   17-block  1
    $$$$$:   17-block  2
    $$$$$:   17-block  3
        -:   18:{
        -:   19:protected:
        -:   20:    // Database connection parameters
        -:   21:    //
       20:   22:    uint32_t port = 5432;
       20:   23:    const std::string_view host = "localhost";
       20:   24:    const std::string_view db_name = "test_db";
       20:   25:    const std::string_view username = "postgres";
       20:   26:    const std::string_view password = "postgres"; // Replace with your actual password
        -:   27:
        -:   28:    // Pointer to the PqxxClient
        -:   29:    std::shared_ptr<interfaces::DbInterface> db_client;
        -:   30:
        -:   31:    // Test table name
       20:   32:    std::string test_table = "test_table";
       20:   32-block  0
branch  0 taken 20
branch  1 taken 0
        -:   33:
        -:   34:    // SetUp and TearDown methods
function _ZN14PqxxClientTest5SetUpEv called 20 returned 100% blocks executed 41%
       20:   35:    void SetUp() override
        -:   36:    {
        -:   37:        // Initialize the database client
       20:   38:        db_client = creational::DbInterfaceFactory::create_pqxx_client({host, port, db_name, username, password});
        -:   39:
        -:   40:        // Ensure the test table does not exist before starting
       20:   41:        if (db_client->check_table(test_table))
       20:   41-block  0
branch  0 taken 20
branch  1 taken 0
        -:   42:        {
    #####:   43:            db_client->remove_table(test_table);
    #####:   44:        }
    $$$$$:   44-block  0
        -:   45:
        -:   46:        // Create a test table
       20:   47:        Record fields;
       20:   48:        fields.push_back(std::make_unique<Field<int>>("id", 0));
       20:   48-block  0
branch  0 taken 20
branch  1 taken 0
       20:   48-block  1
branch  2 taken 20
branch  3 taken 0
    $$$$$:   48-block  2
       20:   49:        fields.push_back(std::make_unique<Field<std::string>>("name", ""));
       20:   49-block  0
branch  0 taken 20
branch  1 taken 0
       20:   49-block  1
branch  2 taken 20
branch  3 taken 0
    $$$$$:   49-block  2
       20:   50:        fields.push_back(std::make_unique<Field<std::string>>("description", ""));
       20:   50-block  0
branch  0 taken 20
branch  1 taken 0
       20:   50-block  1
branch  2 taken 20
branch  3 taken 0
    $$$$$:   50-block  2
       20:   51:        db_client->create_table(test_table, fields);
       20:   51-block  0
branch  0 taken 20
branch  1 taken 0
        -:   52:
       20:   53:        db_client->make_unique_constraint(test_table, {std::make_shared<Field<int>>("id", 0)});
       20:   53-block  0
branch  0 taken 20
branch  1 taken 0
       20:   53-block  1
branch  2 taken 20
branch  3 taken 0
       20:   53-block  2
branch  4 taken 20
branch  5 taken 0
       20:   53-block  3
       20:   53-block  4
    $$$$$:   53-block  5
    $$$$$:   53-block  6
    $$$$$:   53-block  7
    $$$$$:   53-block  8
    $$$$$:   53-block  9
    $$$$$:   53-block 10
    $$$$$:   53-block 11
branch  6 never executed
branch  7 never executed
    $$$$$:   53-block 12
    $$$$$:   53-block 13
    $$$$$:   53-block 14
    $$$$$:   53-block 15
    $$$$$:   53-block 16
    $$$$$:   53-block 17
        -:   54:        // Set up full-text search on 'name' and 'description' fields
       20:   55:        std::vector<std::shared_ptr<FieldBase>> fts_fields;
       20:   56:        fts_fields.emplace_back(std::make_shared<Field<std::string>>("name", ""));
       20:   56-block  0
branch  0 taken 20
branch  1 taken 0
       20:   56-block  1
branch  2 taken 20
branch  3 taken 0
    $$$$$:   56-block  2
       20:   57:        fts_fields.emplace_back(std::make_shared<Field<std::string>>("description", ""));
       20:   57-block  0
branch  0 taken 20
branch  1 taken 0
       20:   57-block  1
branch  2 taken 20
branch  3 taken 0
    $$$$$:   57-block  2
        -:   58:
        -:   59:
       20:   60:        db_client->setup_fts_index(test_table, std::move(fts_fields));
       20:   60-block  0
branch  0 taken 20
branch  1 taken 0
    $$$$$:   60-block  1
       20:   61:    }
       20:   61-block  0
    $$$$$:   61-block  1
    $$$$$:   61-block  2
    $$$$$:   61-block  3
    $$$$$:   61-block  4
    $$$$$:   61-block  5
    $$$$$:   61-block  6
    $$$$$:   61-block  7
        -:   62:
function _ZN14PqxxClientTest8TearDownEv called 20 returned 100% blocks executed 100%
       20:   63:    void TearDown() override
        -:   64:    {
        -:   65:        // Remove the test table after each test
       20:   66:        if (db_client->check_table(test_table))
       20:   66-block  0
branch  0 taken 0
branch  1 taken 20
        -:   67:        {
       20:   68:            db_client->remove_table(test_table);
       20:   69:        }
       20:   69-block  0
        -:   70:
       20:   71:        db_client.reset();
       20:   72:    }
       20:   72-block  0
        -:   73:};
        -:   74:
        -:   75:// ------------------------------ BASIC TESTS ------------------------------//
function _ZN39PqxxClientTest_TableManagementTest_Test8TestBodyEv called 1 returned 100% blocks executed 23%
function _ZN39PqxxClientTest_TableManagementTest_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN39PqxxClientTest_TableManagementTest_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN39PqxxClientTest_TableManagementTest_TestC2Ev called 1 returned 100% blocks executed 100%
        5:   76:TEST_F(PqxxClientTest, TableManagementTest)
        1:   76-block  0
branch  0 taken 1
branch  1 taken 0
        1:   76-block  1
branch  2 taken 1
branch  3 taken 0
        1:   76-block  2
branch  4 taken 1
branch  5 taken 0
        1:   76-block  3
branch  6 taken 1
branch  7 taken 0
        1:   76-block  4
branch  8 taken 1
branch  9 taken 0
        1:   76-block  5
branch 10 taken 1
branch 11 taken 0
        1:   76-block  6
branch 12 taken 1
branch 13 taken 0
        1:   76-block  7
branch 14 taken 1
branch 15 taken 0
        1:   76-block  8
branch 16 taken 1
branch 17 taken 0
        1:   76-block  9
    $$$$$:   76-block 10
    $$$$$:   76-block 11
    $$$$$:   76-block 12
    $$$$$:   76-block 13
    $$$$$:   76-block 14
    $$$$$:   76-block 15
    $$$$$:   76-block 16
    $$$$$:   76-block 17
    $$$$$:   76-block 18
    $$$$$:   76-block 19
        1:   76-block 20
        1:   76-block 21
        1:   76-block 22
        -:   77:{
        -:   78:    // Check if the table exists
        1:   79:    EXPECT_TRUE(db_client->check_table(test_table));
        1:   79-block  0
branch  0 taken 1
branch  1 taken 0
        1:   79-block  1
branch  2 taken 0
branch  3 taken 1
        1:   79-block  2
    $$$$$:   79-block  3
branch  4 never executed
branch  5 never executed
    $$$$$:   79-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:   79-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:   79-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:   79-block  7
    $$$$$:   79-block  8
    $$$$$:   79-block  9
    $$$$$:   79-block 10
    $$$$$:   79-block 11
    $$$$$:   79-block 12
        -:   80:
        -:   81:    // Remove the table
        1:   82:    EXPECT_NO_THROW(db_client->remove_table(test_table));
        1:   82-block  0
branch  0 taken 1
branch  1 taken 0
        1:   82-block  1
branch  2 taken 1
branch  3 taken 0
        1:   82-block  2
branch  4 taken 1
branch  5 taken 0
        1:   82-block  3
branch  6 taken 1
branch  7 taken 0
        1:   82-block  4
branch  8 taken 1
branch  9 taken 0
        1:   82-block  5
    $$$$$:   82-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:   82-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   82-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:   82-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:   82-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:   82-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:   82-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:   82-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:   82-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:   82-block 15
branch 28 never executed
branch 29 never executed
        1:   82-block 16
    $$$$$:   82-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:   82-block 18
    $$$$$:   82-block 19
    $$$$$:   82-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:   82-block 21
        1:   82-block 22
    $$$$$:   82-block 23
    $$$$$:   82-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:   82-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:   82-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:   82-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:   82-block 28
    $$$$$:   82-block 29
    $$$$$:   82-block 30
    $$$$$:   82-block 31
    $$$$$:   82-block 32
    $$$$$:   82-block 33
        1:   83:    EXPECT_FALSE(db_client->check_table(test_table));
        1:   83-block  0
branch  0 taken 1
branch  1 taken 0
        1:   83-block  1
branch  2 taken 0
branch  3 taken 1
        1:   83-block  2
    $$$$$:   83-block  3
branch  4 never executed
branch  5 never executed
    $$$$$:   83-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:   83-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:   83-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:   83-block  7
    $$$$$:   83-block  8
    $$$$$:   83-block  9
    $$$$$:   83-block 10
    $$$$$:   83-block 11
        -:   84:
        -:   85:    // Create the table again
        1:   86:    Record fields;
        1:   87:    fields.push_back(std::make_unique<Field<int>>("id", 0));
        1:   87-block  0
branch  0 taken 1
branch  1 taken 0
        1:   87-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:   87-block  2
        1:   88:    fields.push_back(std::make_unique<Field<std::string>>("name", ""));
        1:   88-block  0
branch  0 taken 1
branch  1 taken 0
        1:   88-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:   88-block  2
        1:   89:    fields.push_back(std::make_unique<Field<std::string>>("description", ""));
        1:   89-block  0
branch  0 taken 1
branch  1 taken 0
        1:   89-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:   89-block  2
        -:   90:
        1:   91:    EXPECT_NO_THROW(db_client->create_table(test_table, fields));
        1:   91-block  0
branch  0 taken 1
branch  1 taken 0
        1:   91-block  1
branch  2 taken 1
branch  3 taken 0
        1:   91-block  2
branch  4 taken 1
branch  5 taken 0
        1:   91-block  3
branch  6 taken 1
branch  7 taken 0
        1:   91-block  4
branch  8 taken 1
branch  9 taken 0
        1:   91-block  5
    $$$$$:   91-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:   91-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   91-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:   91-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:   91-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:   91-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:   91-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:   91-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:   91-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:   91-block 15
branch 28 never executed
branch 29 never executed
        1:   91-block 16
    $$$$$:   91-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:   91-block 18
    $$$$$:   91-block 19
    $$$$$:   91-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:   91-block 21
        1:   91-block 22
    $$$$$:   91-block 23
    $$$$$:   91-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:   91-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:   91-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:   91-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:   91-block 28
    $$$$$:   91-block 29
    $$$$$:   91-block 30
    $$$$$:   91-block 31
    $$$$$:   91-block 32
        1:   92:    EXPECT_TRUE(db_client->check_table(test_table));
        1:   92-block  0
branch  0 taken 1
branch  1 taken 0
        1:   92-block  1
branch  2 taken 1
branch  3 taken 0
        1:   92-block  2
branch  4 taken 1
branch  5 taken 0
        1:   92-block  3
branch  6 taken 0
branch  7 taken 1
        1:   92-block  4
    $$$$$:   92-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:   92-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:   92-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   92-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:   92-block  9
    $$$$$:   92-block 10
    $$$$$:   92-block 11
    $$$$$:   92-block 12
    $$$$$:   92-block 13
        1:   93:}
    $$$$$:   93-block  0
    $$$$$:   93-block  1
    $$$$$:   93-block  2
    $$$$$:   93-block  3
    $$$$$:   93-block  4
    $$$$$:   93-block  5
    $$$$$:   93-block  6
    $$$$$:   93-block  7
    $$$$$:   93-block  8
    $$$$$:   93-block  9
    $$$$$:   93-block 10
    $$$$$:   93-block 11
    $$$$$:   93-block 12
    $$$$$:   93-block 13
    $$$$$:   93-block 14
    $$$$$:   93-block 15
    $$$$$:   93-block 16
    $$$$$:   93-block 17
    $$$$$:   93-block 18
    $$$$$:   93-block 19
        1:   93-block 20
    $$$$$:   93-block 21
        -:   94:
function _ZN30PqxxClientTest_InsertTest_Test8TestBodyEv called 1 returned 100% blocks executed 37%
function _ZN30PqxxClientTest_InsertTest_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN30PqxxClientTest_InsertTest_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN30PqxxClientTest_InsertTest_TestC2Ev called 1 returned 100% blocks executed 100%
        5:   95:TEST_F(PqxxClientTest, InsertTest)
        1:   95-block  0
branch  0 taken 1
branch  1 taken 0
        1:   95-block  1
branch  2 taken 1
branch  3 taken 0
        1:   95-block  2
branch  4 taken 1
branch  5 taken 0
        1:   95-block  3
branch  6 taken 1
branch  7 taken 0
        1:   95-block  4
branch  8 taken 1
branch  9 taken 0
        1:   95-block  5
branch 10 taken 1
branch 11 taken 0
        1:   95-block  6
branch 12 taken 1
branch 13 taken 0
        1:   95-block  7
branch 14 taken 1
branch 15 taken 0
        1:   95-block  8
branch 16 taken 1
branch 17 taken 0
        1:   95-block  9
    $$$$$:   95-block 10
    $$$$$:   95-block 11
    $$$$$:   95-block 12
    $$$$$:   95-block 13
    $$$$$:   95-block 14
    $$$$$:   95-block 15
    $$$$$:   95-block 16
    $$$$$:   95-block 17
    $$$$$:   95-block 18
    $$$$$:   95-block 19
        1:   95-block 20
        1:   95-block 21
        1:   95-block 22
        -:   96:{
        -:   97:    // Create sample data
        1:   98:    std::vector<Record> records;
        -:   99:
        1:  100:    Record record1;
        1:  101:    record1.push_back(std::make_unique<Field<int>>("id", 1));
        1:  101-block  0
branch  0 taken 1
branch  1 taken 0
        1:  101-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  101-block  2
        1:  102:    record1.push_back(std::make_unique<Field<std::string>>("name", "Alice"));
        1:  102-block  0
branch  0 taken 1
branch  1 taken 0
        1:  102-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  102-block  2
        1:  103:    record1.push_back(std::make_unique<Field<std::string>>("description", "P"));
        1:  103-block  0
branch  0 taken 1
branch  1 taken 0
        1:  103-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  103-block  2
        1:  104:    records.push_back(std::move(record1));
        1:  104-block  0
branch  0 taken 1
branch  1 taken 0
        -:  105:
        1:  106:    Record record2;
        1:  107:    record2.push_back(std::make_unique<Field<int>>("id", 2));
        1:  107-block  0
branch  0 taken 1
branch  1 taken 0
        1:  107-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  107-block  2
        1:  108:    record2.push_back(std::make_unique<Field<std::string>>("name", "Bob"));
        1:  108-block  0
branch  0 taken 1
branch  1 taken 0
        1:  108-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  108-block  2
        1:  109:    record2.push_back(std::make_unique<Field<std::string>>("description", "L"));
        1:  109-block  0
branch  0 taken 1
branch  1 taken 0
        1:  109-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  109-block  2
        1:  110:    records.push_back(std::move(record2));
        1:  110-block  0
branch  0 taken 1
branch  1 taken 0
        -:  111:
        -:  112:    // Add data to the table
        1:  113:    EXPECT_NO_THROW(db_client->insert(test_table, records));
        1:  113-block  0
branch  0 taken 1
branch  1 taken 0
        1:  113-block  1
branch  2 taken 1
branch  3 taken 0
        1:  113-block  2
branch  4 taken 1
branch  5 taken 0
        1:  113-block  3
branch  6 taken 1
branch  7 taken 0
        1:  113-block  4
branch  8 taken 1
branch  9 taken 0
        1:  113-block  5
    $$$$$:  113-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  113-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  113-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  113-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  113-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  113-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  113-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  113-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  113-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  113-block 15
branch 28 never executed
branch 29 never executed
        1:  113-block 16
    $$$$$:  113-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  113-block 18
    $$$$$:  113-block 19
    $$$$$:  113-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  113-block 21
        1:  113-block 22
    $$$$$:  113-block 23
    $$$$$:  113-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  113-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  113-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  113-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  113-block 28
    $$$$$:  113-block 29
    $$$$$:  113-block 30
    $$$$$:  113-block 31
    $$$$$:  113-block 32
    $$$$$:  113-block 33
        -:  114:
        -:  115:    // Retrieve data and verify
        1:  116:    const auto results = db_client->select(test_table);
        1:  116-block  0
branch  0 taken 1
branch  1 taken 0
        -:  117:
        1:  118:    EXPECT_EQ(results.size(), 2);
        1:  118-block  0
branch  0 taken 1
branch  1 taken 0
        1:  118-block  1
branch  2 taken 1
branch  3 taken 0
        1:  118-block  2
branch  4 taken 0
branch  5 taken 1
        1:  118-block  3
    $$$$$:  118-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  118-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  118-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  118-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  118-block  8
    $$$$$:  118-block  9
    $$$$$:  118-block 10
    $$$$$:  118-block 11
        -:  119:
        -:  120:    // Check content
        3:  121:    for (const auto& rec : results)
        1:  121-block  0
        3:  121-block  1
branch  0 taken 2
branch  1 taken 1
        2:  121-block  2
        2:  121-block  3
        -:  122:    {
        2:  123:        const auto id = rec[0]->as<int32_t>();
        2:  123-block  0
branch  0 taken 2
branch  1 taken 0
        2:  123-block  1
branch  2 taken 2
branch  3 taken 0
        2:  124:        const auto name = rec[1]->as<std::string>();
        2:  124-block  0
branch  0 taken 2
branch  1 taken 0
        2:  124-block  1
branch  2 taken 2
branch  3 taken 0
        -:  125:
        2:  126:        if (id == 1)
        2:  126-block  0
branch  0 taken 1
branch  1 taken 1
        -:  127:        {
        1:  128:            EXPECT_EQ(name, "Alice");
        1:  128-block  0
branch  0 taken 1
branch  1 taken 0
        1:  128-block  1
branch  2 taken 1
branch  3 taken 0
        1:  128-block  2
branch  4 taken 0
branch  5 taken 1
        1:  128-block  3
    $$$$$:  128-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  128-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  128-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  128-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  128-block  8
    $$$$$:  128-block  9
    $$$$$:  128-block 10
    $$$$$:  128-block 11
        1:  129:        }
        1:  129-block  0
        1:  130:        else if (id == 2)
        1:  130-block  0
branch  0 taken 1
branch  1 taken 0
        -:  131:        {
        1:  132:            EXPECT_EQ(name, "Bob");
        1:  132-block  0
branch  0 taken 1
branch  1 taken 0
        1:  132-block  1
branch  2 taken 1
branch  3 taken 0
        1:  132-block  2
branch  4 taken 0
branch  5 taken 1
        1:  132-block  3
    $$$$$:  132-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  132-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  132-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  132-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  132-block  8
    $$$$$:  132-block  9
    $$$$$:  132-block 10
    $$$$$:  132-block 11
        1:  133:        }
        1:  133-block  0
        -:  134:        else
        -:  135:        {
    #####:  136:            FAIL() << "Unexpected record with id: " << id;
    $$$$$:  136-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  136-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  136-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  136-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  136-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  136-block  5
    $$$$$:  136-block  6
    $$$$$:  136-block  7
        -:  137:        }
        2:  138:    }
        2:  138-block  0
        2:  138-block  1
branch  0 taken 0
branch  1 taken 2
    $$$$$:  138-block  2
        1:  139:}
    $$$$$:  139-block  0
    $$$$$:  139-block  1
    $$$$$:  139-block  2
    $$$$$:  139-block  3
    $$$$$:  139-block  4
    $$$$$:  139-block  5
    $$$$$:  139-block  6
    $$$$$:  139-block  7
    $$$$$:  139-block  8
    $$$$$:  139-block  9
    $$$$$:  139-block 10
    $$$$$:  139-block 11
    $$$$$:  139-block 12
    $$$$$:  139-block 13
    $$$$$:  139-block 14
    $$$$$:  139-block 15
        1:  139-block 16
        1:  139-block 17
branch  0 taken 0
branch  1 taken 1
        1:  139-block 18
    $$$$$:  139-block 19
    $$$$$:  139-block 20
    $$$$$:  139-block 21
    $$$$$:  139-block 22
        -:  140:
        -:  141:
function _ZN40PqxxClientTest_UpsertTestFullRecord_Test8TestBodyEv called 1 returned 100% blocks executed 29%
function _ZN40PqxxClientTest_UpsertTestFullRecord_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN40PqxxClientTest_UpsertTestFullRecord_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN40PqxxClientTest_UpsertTestFullRecord_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  142:TEST_F(PqxxClientTest, UpsertTestFullRecord)
        1:  142-block  0
branch  0 taken 1
branch  1 taken 0
        1:  142-block  1
branch  2 taken 1
branch  3 taken 0
        1:  142-block  2
branch  4 taken 1
branch  5 taken 0
        1:  142-block  3
branch  6 taken 1
branch  7 taken 0
        1:  142-block  4
branch  8 taken 1
branch  9 taken 0
        1:  142-block  5
branch 10 taken 1
branch 11 taken 0
        1:  142-block  6
branch 12 taken 1
branch 13 taken 0
        1:  142-block  7
branch 14 taken 1
branch 15 taken 0
        1:  142-block  8
branch 16 taken 1
branch 17 taken 0
        1:  142-block  9
    $$$$$:  142-block 10
    $$$$$:  142-block 11
    $$$$$:  142-block 12
    $$$$$:  142-block 13
    $$$$$:  142-block 14
    $$$$$:  142-block 15
    $$$$$:  142-block 16
    $$$$$:  142-block 17
    $$$$$:  142-block 18
    $$$$$:  142-block 19
        1:  142-block 20
        1:  142-block 21
        1:  142-block 22
        -:  143:{
        -:  144:    // Initial data
        1:  145:    std::vector<Record> records;
        -:  146:
        1:  147:    Record record1;
        1:  148:    record1.push_back(std::make_unique<Field<int32_t>>("id", 1));
        1:  148-block  0
branch  0 taken 1
branch  1 taken 0
        1:  148-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  148-block  2
        1:  149:    record1.push_back(std::make_unique<Field<std::string>>("name", "Alice"));
        1:  149-block  0
branch  0 taken 1
branch  1 taken 0
        1:  149-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  149-block  2
        1:  150:    record1.push_back(std::make_unique<Field<std::string>>("description", ""));
        1:  150-block  0
branch  0 taken 1
branch  1 taken 0
        1:  150-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  150-block  2
        1:  151:    records.push_back(std::move(record1));
        1:  151-block  0
branch  0 taken 1
branch  1 taken 0
        -:  152:
        -:  153:    // Add initial data
        1:  154:    EXPECT_NO_THROW(db_client->insert(test_table, records));
        1:  154-block  0
branch  0 taken 1
branch  1 taken 0
        1:  154-block  1
branch  2 taken 1
branch  3 taken 0
        1:  154-block  2
branch  4 taken 1
branch  5 taken 0
        1:  154-block  3
branch  6 taken 1
branch  7 taken 0
        1:  154-block  4
branch  8 taken 1
branch  9 taken 0
        1:  154-block  5
    $$$$$:  154-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  154-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  154-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  154-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  154-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  154-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  154-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  154-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  154-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  154-block 15
branch 28 never executed
branch 29 never executed
        1:  154-block 16
    $$$$$:  154-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  154-block 18
    $$$$$:  154-block 19
    $$$$$:  154-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  154-block 21
        1:  154-block 22
    $$$$$:  154-block 23
    $$$$$:  154-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  154-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  154-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  154-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  154-block 28
    $$$$$:  154-block 29
    $$$$$:  154-block 30
    $$$$$:  154-block 31
    $$$$$:  154-block 32
    $$$$$:  154-block 33
        -:  155:
        -:  156:    // Upsert data
        1:  157:    std::vector<Record> upsert_records;
        -:  158:
        1:  159:    Record record_upsert;
        1:  160:    record_upsert.push_back(std::make_unique<Field<int>>("id", 1));
        1:  160-block  0
branch  0 taken 1
branch  1 taken 0
        1:  160-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  160-block  2
        1:  161:    record_upsert.push_back(std::make_unique<Field<std::string>>("name", "Alice"));
        1:  161-block  0
branch  0 taken 1
branch  1 taken 0
        1:  161-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  161-block  2
        1:  162:    record_upsert.push_back(std::make_unique<Field<std::string>>("description", "Alice Updated"));
        1:  162-block  0
branch  0 taken 1
branch  1 taken 0
        1:  162-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  162-block  2
        1:  163:    upsert_records.push_back(std::move(record_upsert));
        1:  163-block  0
branch  0 taken 1
branch  1 taken 0
        -:  164:
        1:  165:    EXPECT_NO_THROW(
        1:  165-block  0
branch  0 taken 1
branch  1 taken 0
        1:  165-block  1
branch  2 taken 1
branch  3 taken 0
        1:  165-block  2
branch  4 taken 1
branch  5 taken 0
        1:  165-block  3
branch  6 taken 1
branch  7 taken 0
        1:  165-block  4
branch  8 taken 1
branch  9 taken 0
        1:  165-block  5
branch 10 taken 1
branch 11 taken 0
        1:  165-block  6
branch 12 taken 1
branch 13 taken 0
        1:  165-block  7
branch 14 taken 1
branch 15 taken 0
        1:  165-block  8
        1:  165-block  9
    $$$$$:  165-block 10
        1:  165-block 11
    $$$$$:  165-block 12
    $$$$$:  165-block 13
    $$$$$:  165-block 14
    $$$$$:  165-block 15
    $$$$$:  165-block 16
    $$$$$:  165-block 17
    $$$$$:  165-block 18
branch 16 never executed
branch 17 never executed
    $$$$$:  165-block 19
    $$$$$:  165-block 20
    $$$$$:  165-block 21
    $$$$$:  165-block 22
    $$$$$:  165-block 23
    $$$$$:  165-block 24
    $$$$$:  165-block 25
branch 18 never executed
branch 19 never executed
    $$$$$:  165-block 26
branch 20 never executed
branch 21 never executed
    $$$$$:  165-block 27
branch 22 never executed
branch 23 never executed
    $$$$$:  165-block 28
branch 24 never executed
branch 25 never executed
    $$$$$:  165-block 29
branch 26 never executed
branch 27 never executed
    $$$$$:  165-block 30
branch 28 never executed
branch 29 never executed
    $$$$$:  165-block 31
branch 30 never executed
branch 31 never executed
    $$$$$:  165-block 32
branch 32 never executed
branch 33 never executed
    $$$$$:  165-block 33
branch 34 never executed
branch 35 never executed
    $$$$$:  165-block 34
branch 36 never executed
branch 37 never executed
        1:  165-block 35
    $$$$$:  165-block 36
branch 38 never executed
branch 39 never executed
    $$$$$:  165-block 37
    $$$$$:  165-block 38
    $$$$$:  165-block 39
branch 40 never executed
branch 41 never executed
    $$$$$:  165-block 40
        1:  165-block 41
    $$$$$:  165-block 42
    $$$$$:  165-block 43
branch 42 never executed
branch 43 never executed
    $$$$$:  165-block 44
branch 44 never executed
branch 45 never executed
    $$$$$:  165-block 45
branch 46 never executed
branch 47 never executed
    $$$$$:  165-block 46
branch 48 never executed
branch 49 never executed
    $$$$$:  165-block 47
    $$$$$:  165-block 48
    $$$$$:  165-block 49
    $$$$$:  165-block 50
    $$$$$:  165-block 51
        -:  166:        db_client->upsert(test_table, upsert_records, {std::make_unique<Field<std::string>>("description", "")}));
        -:  167:
        -:  168:    // Retrieve data and verify
        1:  169:    const auto results = db_client->select(test_table);
        1:  169-block  0
branch  0 taken 1
branch  1 taken 0
        -:  170:
        1:  171:    EXPECT_EQ(results.size(), 1);
        1:  171-block  0
branch  0 taken 1
branch  1 taken 0
        1:  171-block  1
branch  2 taken 1
branch  3 taken 0
        1:  171-block  2
branch  4 taken 0
branch  5 taken 1
        1:  171-block  3
    $$$$$:  171-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  171-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  171-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  171-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  171-block  8
    $$$$$:  171-block  9
    $$$$$:  171-block 10
    $$$$$:  171-block 11
        -:  172:
        1:  173:    auto& rec = results.front();
        1:  174:    const auto id = rec[0]->as<int32_t>();
        1:  174-block  0
branch  0 taken 1
branch  1 taken 0
        1:  174-block  1
branch  2 taken 1
branch  3 taken 0
        1:  175:    const auto name = rec[1]->as<std::string>();
        1:  175-block  0
branch  0 taken 1
branch  1 taken 0
        1:  175-block  1
branch  2 taken 1
branch  3 taken 0
        1:  176:    const auto description = rec[2]->as<std::string>();
        1:  176-block  0
branch  0 taken 1
branch  1 taken 0
        1:  176-block  1
branch  2 taken 1
branch  3 taken 0
        1:  177:    EXPECT_EQ(id, 1);
        1:  177-block  0
branch  0 taken 1
branch  1 taken 0
        1:  177-block  1
branch  2 taken 1
branch  3 taken 0
        1:  177-block  2
branch  4 taken 0
branch  5 taken 1
        1:  177-block  3
    $$$$$:  177-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  177-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  177-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  177-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  177-block  8
    $$$$$:  177-block  9
    $$$$$:  177-block 10
    $$$$$:  177-block 11
        1:  178:    EXPECT_EQ(name, "Alice");
        1:  178-block  0
branch  0 taken 1
branch  1 taken 0
        1:  178-block  1
branch  2 taken 1
branch  3 taken 0
        1:  178-block  2
branch  4 taken 0
branch  5 taken 1
        1:  178-block  3
    $$$$$:  178-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  178-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  178-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  178-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  178-block  8
    $$$$$:  178-block  9
    $$$$$:  178-block 10
    $$$$$:  178-block 11
        1:  179:    EXPECT_EQ(description, "Alice Updated");
        1:  179-block  0
branch  0 taken 1
branch  1 taken 0
        1:  179-block  1
branch  2 taken 1
branch  3 taken 0
        1:  179-block  2
branch  4 taken 0
branch  5 taken 1
        1:  179-block  3
    $$$$$:  179-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  179-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  179-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  179-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  179-block  8
    $$$$$:  179-block  9
    $$$$$:  179-block 10
    $$$$$:  179-block 11
        1:  180:}
    $$$$$:  180-block  0
    $$$$$:  180-block  1
    $$$$$:  180-block  2
    $$$$$:  180-block  3
    $$$$$:  180-block  4
    $$$$$:  180-block  5
    $$$$$:  180-block  6
    $$$$$:  180-block  7
    $$$$$:  180-block  8
    $$$$$:  180-block  9
    $$$$$:  180-block 10
    $$$$$:  180-block 11
    $$$$$:  180-block 12
    $$$$$:  180-block 13
    $$$$$:  180-block 14
    $$$$$:  180-block 15
    $$$$$:  180-block 16
    $$$$$:  180-block 17
    $$$$$:  180-block 18
    $$$$$:  180-block 19
    $$$$$:  180-block 20
    $$$$$:  180-block 21
    $$$$$:  180-block 22
    $$$$$:  180-block 23
    $$$$$:  180-block 24
    $$$$$:  180-block 25
        1:  180-block 26
    $$$$$:  180-block 27
    $$$$$:  180-block 28
    $$$$$:  180-block 29
    $$$$$:  180-block 30
    $$$$$:  180-block 31
    $$$$$:  180-block 32
        -:  181:
function _ZN37PqxxClientTest_UpsertTestPartial_Test8TestBodyEv called 1 returned 100% blocks executed 28%
function _ZN37PqxxClientTest_UpsertTestPartial_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN37PqxxClientTest_UpsertTestPartial_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN37PqxxClientTest_UpsertTestPartial_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  182:TEST_F(PqxxClientTest, UpsertTestPartial)
        1:  182-block  0
branch  0 taken 1
branch  1 taken 0
        1:  182-block  1
branch  2 taken 1
branch  3 taken 0
        1:  182-block  2
branch  4 taken 1
branch  5 taken 0
        1:  182-block  3
branch  6 taken 1
branch  7 taken 0
        1:  182-block  4
branch  8 taken 1
branch  9 taken 0
        1:  182-block  5
branch 10 taken 1
branch 11 taken 0
        1:  182-block  6
branch 12 taken 1
branch 13 taken 0
        1:  182-block  7
branch 14 taken 1
branch 15 taken 0
        1:  182-block  8
branch 16 taken 1
branch 17 taken 0
        1:  182-block  9
    $$$$$:  182-block 10
    $$$$$:  182-block 11
    $$$$$:  182-block 12
    $$$$$:  182-block 13
    $$$$$:  182-block 14
    $$$$$:  182-block 15
    $$$$$:  182-block 16
    $$$$$:  182-block 17
    $$$$$:  182-block 18
    $$$$$:  182-block 19
        1:  182-block 20
        1:  182-block 21
        1:  182-block 22
        -:  183:{
        -:  184:    // Initial data
        1:  185:    std::vector<Record> records;
        -:  186:
        1:  187:    Record record1;
        1:  188:    record1.push_back(std::make_unique<Field<int>>("id", 1));
        1:  188-block  0
branch  0 taken 1
branch  1 taken 0
        1:  188-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  188-block  2
        1:  189:    record1.push_back(std::make_unique<Field<std::string>>("name", "Alice"));
        1:  189-block  0
branch  0 taken 1
branch  1 taken 0
        1:  189-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  189-block  2
        1:  190:    record1.push_back(std::make_unique<Field<std::string>>("description", ""));
        1:  190-block  0
branch  0 taken 1
branch  1 taken 0
        1:  190-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  190-block  2
        1:  191:    records.push_back(std::move(record1));
        1:  191-block  0
branch  0 taken 1
branch  1 taken 0
        -:  192:
        -:  193:    // Add initial data
        1:  194:    EXPECT_NO_THROW(db_client->insert(test_table, records));
        1:  194-block  0
branch  0 taken 1
branch  1 taken 0
        1:  194-block  1
branch  2 taken 1
branch  3 taken 0
        1:  194-block  2
branch  4 taken 1
branch  5 taken 0
        1:  194-block  3
branch  6 taken 1
branch  7 taken 0
        1:  194-block  4
branch  8 taken 1
branch  9 taken 0
        1:  194-block  5
    $$$$$:  194-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  194-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  194-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  194-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  194-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  194-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  194-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  194-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  194-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  194-block 15
branch 28 never executed
branch 29 never executed
        1:  194-block 16
    $$$$$:  194-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  194-block 18
    $$$$$:  194-block 19
    $$$$$:  194-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  194-block 21
        1:  194-block 22
    $$$$$:  194-block 23
    $$$$$:  194-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  194-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  194-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  194-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  194-block 28
    $$$$$:  194-block 29
    $$$$$:  194-block 30
    $$$$$:  194-block 31
    $$$$$:  194-block 32
    $$$$$:  194-block 33
        -:  195:
        -:  196:    // Upsert data
        1:  197:    std::vector<Record> upsert_records;
        -:  198:
        1:  199:    Record record_upsert;
        1:  200:    record_upsert.push_back(std::make_unique<Field<int>>("id", 1));
        1:  200-block  0
branch  0 taken 1
branch  1 taken 0
        1:  200-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  200-block  2
        -:  201:    // CHANGES HERE //
        1:  202:    record_upsert.push_back(std::make_unique<Field<std::string>>("description", "Alice Updated"));
        1:  202-block  0
branch  0 taken 1
branch  1 taken 0
        1:  202-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  202-block  2
        1:  203:    upsert_records.push_back(std::move(record_upsert));
        1:  203-block  0
branch  0 taken 1
branch  1 taken 0
        -:  204:
        -:  205:    // Conflict and replace fields
        -:  206:
        1:  207:    EXPECT_NO_THROW(
        1:  207-block  0
branch  0 taken 1
branch  1 taken 0
        1:  207-block  1
branch  2 taken 1
branch  3 taken 0
        1:  207-block  2
branch  4 taken 1
branch  5 taken 0
        1:  207-block  3
branch  6 taken 1
branch  7 taken 0
        1:  207-block  4
branch  8 taken 1
branch  9 taken 0
        1:  207-block  5
branch 10 taken 1
branch 11 taken 0
        1:  207-block  6
branch 12 taken 1
branch 13 taken 0
        1:  207-block  7
branch 14 taken 1
branch 15 taken 0
        1:  207-block  8
        1:  207-block  9
    $$$$$:  207-block 10
        1:  207-block 11
    $$$$$:  207-block 12
    $$$$$:  207-block 13
    $$$$$:  207-block 14
    $$$$$:  207-block 15
    $$$$$:  207-block 16
    $$$$$:  207-block 17
    $$$$$:  207-block 18
branch 16 never executed
branch 17 never executed
    $$$$$:  207-block 19
    $$$$$:  207-block 20
    $$$$$:  207-block 21
    $$$$$:  207-block 22
    $$$$$:  207-block 23
    $$$$$:  207-block 24
    $$$$$:  207-block 25
branch 18 never executed
branch 19 never executed
    $$$$$:  207-block 26
branch 20 never executed
branch 21 never executed
    $$$$$:  207-block 27
branch 22 never executed
branch 23 never executed
    $$$$$:  207-block 28
branch 24 never executed
branch 25 never executed
    $$$$$:  207-block 29
branch 26 never executed
branch 27 never executed
    $$$$$:  207-block 30
branch 28 never executed
branch 29 never executed
    $$$$$:  207-block 31
branch 30 never executed
branch 31 never executed
    $$$$$:  207-block 32
branch 32 never executed
branch 33 never executed
    $$$$$:  207-block 33
branch 34 never executed
branch 35 never executed
    $$$$$:  207-block 34
branch 36 never executed
branch 37 never executed
        1:  207-block 35
    $$$$$:  207-block 36
branch 38 never executed
branch 39 never executed
    $$$$$:  207-block 37
    $$$$$:  207-block 38
    $$$$$:  207-block 39
branch 40 never executed
branch 41 never executed
    $$$$$:  207-block 40
        1:  207-block 41
    $$$$$:  207-block 42
    $$$$$:  207-block 43
branch 42 never executed
branch 43 never executed
    $$$$$:  207-block 44
branch 44 never executed
branch 45 never executed
    $$$$$:  207-block 45
branch 46 never executed
branch 47 never executed
    $$$$$:  207-block 46
branch 48 never executed
branch 49 never executed
    $$$$$:  207-block 47
    $$$$$:  207-block 48
    $$$$$:  207-block 49
    $$$$$:  207-block 50
    $$$$$:  207-block 51
        -:  208:        db_client->upsert(test_table, upsert_records, {std::make_unique<Field<std::string>>("description", "")}));
        -:  209:
        1:  210:    const auto results = db_client->select(test_table);
        1:  210-block  0
branch  0 taken 1
branch  1 taken 0
        -:  211:
        1:  212:    EXPECT_EQ(results.size(), 1);
        1:  212-block  0
branch  0 taken 1
branch  1 taken 0
        1:  212-block  1
branch  2 taken 1
branch  3 taken 0
        1:  212-block  2
branch  4 taken 0
branch  5 taken 1
        1:  212-block  3
    $$$$$:  212-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  212-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  212-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  212-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  212-block  8
    $$$$$:  212-block  9
    $$$$$:  212-block 10
    $$$$$:  212-block 11
        -:  213:
        1:  214:    auto& rec = results.front();
        1:  215:    const auto id = rec[0]->as<int32_t>();
        1:  215-block  0
branch  0 taken 1
branch  1 taken 0
        1:  215-block  1
branch  2 taken 1
branch  3 taken 0
        1:  216:    const auto name = rec[1]->as<std::string>();
        1:  216-block  0
branch  0 taken 1
branch  1 taken 0
        1:  216-block  1
branch  2 taken 1
branch  3 taken 0
        1:  217:    const auto description = rec[2]->as<std::string>();
        1:  217-block  0
branch  0 taken 1
branch  1 taken 0
        1:  217-block  1
branch  2 taken 1
branch  3 taken 0
        1:  218:    EXPECT_EQ(id, 1);
        1:  218-block  0
branch  0 taken 1
branch  1 taken 0
        1:  218-block  1
branch  2 taken 1
branch  3 taken 0
        1:  218-block  2
branch  4 taken 0
branch  5 taken 1
        1:  218-block  3
    $$$$$:  218-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  218-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  218-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  218-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  218-block  8
    $$$$$:  218-block  9
    $$$$$:  218-block 10
    $$$$$:  218-block 11
        1:  219:    EXPECT_EQ(name, "Alice");
        1:  219-block  0
branch  0 taken 1
branch  1 taken 0
        1:  219-block  1
branch  2 taken 1
branch  3 taken 0
        1:  219-block  2
branch  4 taken 0
branch  5 taken 1
        1:  219-block  3
    $$$$$:  219-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  219-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  219-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  219-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  219-block  8
    $$$$$:  219-block  9
    $$$$$:  219-block 10
    $$$$$:  219-block 11
        1:  220:    EXPECT_EQ(description, "Alice Updated");
        1:  220-block  0
branch  0 taken 1
branch  1 taken 0
        1:  220-block  1
branch  2 taken 1
branch  3 taken 0
        1:  220-block  2
branch  4 taken 0
branch  5 taken 1
        1:  220-block  3
    $$$$$:  220-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  220-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  220-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  220-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  220-block  8
    $$$$$:  220-block  9
    $$$$$:  220-block 10
    $$$$$:  220-block 11
        1:  221:}
    $$$$$:  221-block  0
    $$$$$:  221-block  1
    $$$$$:  221-block  2
    $$$$$:  221-block  3
    $$$$$:  221-block  4
    $$$$$:  221-block  5
    $$$$$:  221-block  6
    $$$$$:  221-block  7
    $$$$$:  221-block  8
    $$$$$:  221-block  9
    $$$$$:  221-block 10
    $$$$$:  221-block 11
    $$$$$:  221-block 12
    $$$$$:  221-block 13
    $$$$$:  221-block 14
    $$$$$:  221-block 15
    $$$$$:  221-block 16
    $$$$$:  221-block 17
    $$$$$:  221-block 18
    $$$$$:  221-block 19
    $$$$$:  221-block 20
    $$$$$:  221-block 21
    $$$$$:  221-block 22
    $$$$$:  221-block 23
    $$$$$:  221-block 24
    $$$$$:  221-block 25
        1:  221-block 26
    $$$$$:  221-block 27
    $$$$$:  221-block 28
    $$$$$:  221-block 29
    $$$$$:  221-block 30
    $$$$$:  221-block 31
    $$$$$:  221-block 32
        -:  222:
function _ZN30PqxxClientTest_RemoveTest_Test8TestBodyEv called 1 returned 100% blocks executed 26%
function _ZN30PqxxClientTest_RemoveTest_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN30PqxxClientTest_RemoveTest_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN30PqxxClientTest_RemoveTest_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  223:TEST_F(PqxxClientTest, RemoveTest)
        1:  223-block  0
branch  0 taken 1
branch  1 taken 0
        1:  223-block  1
branch  2 taken 1
branch  3 taken 0
        1:  223-block  2
branch  4 taken 1
branch  5 taken 0
        1:  223-block  3
branch  6 taken 1
branch  7 taken 0
        1:  223-block  4
branch  8 taken 1
branch  9 taken 0
        1:  223-block  5
branch 10 taken 1
branch 11 taken 0
        1:  223-block  6
branch 12 taken 1
branch 13 taken 0
        1:  223-block  7
branch 14 taken 1
branch 15 taken 0
        1:  223-block  8
branch 16 taken 1
branch 17 taken 0
        1:  223-block  9
    $$$$$:  223-block 10
    $$$$$:  223-block 11
    $$$$$:  223-block 12
    $$$$$:  223-block 13
    $$$$$:  223-block 14
    $$$$$:  223-block 15
    $$$$$:  223-block 16
    $$$$$:  223-block 17
    $$$$$:  223-block 18
    $$$$$:  223-block 19
        1:  223-block 20
        1:  223-block 21
        1:  223-block 22
        -:  224:{
        -:  225:    // Add data
        1:  226:    std::vector<Record> records;
        -:  227:
        1:  228:    Record record1;
        1:  229:    record1.push_back(std::make_unique<Field<int>>("id", 1));
        1:  229-block  0
branch  0 taken 1
branch  1 taken 0
        1:  229-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  229-block  2
        1:  230:    record1.push_back(std::make_unique<Field<std::string>>("name", "Alice"));
        1:  230-block  0
branch  0 taken 1
branch  1 taken 0
        1:  230-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  230-block  2
        1:  231:    record1.push_back(std::make_unique<Field<std::string>>("description", ""));
        1:  231-block  0
branch  0 taken 1
branch  1 taken 0
        1:  231-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  231-block  2
        1:  232:    records.push_back(std::move(record1));
        1:  232-block  0
branch  0 taken 1
branch  1 taken 0
        -:  233:
        1:  234:    EXPECT_NO_THROW(db_client->insert(test_table, records));
        1:  234-block  0
branch  0 taken 1
branch  1 taken 0
        1:  234-block  1
branch  2 taken 1
branch  3 taken 0
        1:  234-block  2
branch  4 taken 1
branch  5 taken 0
        1:  234-block  3
branch  6 taken 1
branch  7 taken 0
        1:  234-block  4
branch  8 taken 1
branch  9 taken 0
        1:  234-block  5
    $$$$$:  234-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  234-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  234-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  234-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  234-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  234-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  234-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  234-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  234-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  234-block 15
branch 28 never executed
branch 29 never executed
        1:  234-block 16
    $$$$$:  234-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  234-block 18
    $$$$$:  234-block 19
    $$$$$:  234-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  234-block 21
        1:  234-block 22
    $$$$$:  234-block 23
    $$$$$:  234-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  234-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  234-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  234-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  234-block 28
    $$$$$:  234-block 29
    $$$$$:  234-block 30
    $$$$$:  234-block 31
    $$$$$:  234-block 32
    $$$$$:  234-block 33
        -:  235:
        -:  236:    // Remove data
        1:  237:    Conditions conditions;
        1:  238:    conditions.add_field_condition(FieldCondition(
        1:  238-block  0
branch  0 taken 1
branch  1 taken 0
        1:  238-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  238-block  2
    $$$$$:  238-block  3
    $$$$$:  238-block  4
    $$$$$:  238-block  5
        1:  239:        std::make_unique<Field<int32_t>>("id", 0),
        1:  239-block  0
branch  0 taken 1
branch  1 taken 0
        1:  240:        "=",
        1:  240-block  0
branch  0 taken 1
branch  1 taken 0
        1:  241:        std::make_unique<Field<int32_t>>("", 1)
        1:  241-block  0
branch  0 taken 1
branch  1 taken 0
        -:  242:    ));
        -:  243:
        1:  244:    EXPECT_NO_THROW(db_client->remove(test_table, conditions));
        1:  244-block  0
branch  0 taken 1
branch  1 taken 0
        1:  244-block  1
branch  2 taken 1
branch  3 taken 0
        1:  244-block  2
branch  4 taken 1
branch  5 taken 0
        1:  244-block  3
branch  6 taken 1
branch  7 taken 0
        1:  244-block  4
branch  8 taken 1
branch  9 taken 0
        1:  244-block  5
    $$$$$:  244-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  244-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  244-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  244-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  244-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  244-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  244-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  244-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  244-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  244-block 15
branch 28 never executed
branch 29 never executed
        1:  244-block 16
    $$$$$:  244-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  244-block 18
    $$$$$:  244-block 19
    $$$$$:  244-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  244-block 21
        1:  244-block 22
    $$$$$:  244-block 23
    $$$$$:  244-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  244-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  244-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  244-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  244-block 28
    $$$$$:  244-block 29
    $$$$$:  244-block 30
    $$$$$:  244-block 31
    $$$$$:  244-block 32
        -:  245:
        -:  246:    // Verify removal
        1:  247:    const auto results = db_client->select(test_table);
        1:  247-block  0
branch  0 taken 1
branch  1 taken 0
        1:  248:    EXPECT_TRUE(results.empty());
        1:  248-block  0
branch  0 taken 1
branch  1 taken 0
        1:  248-block  1
branch  2 taken 1
branch  3 taken 0
        1:  248-block  2
branch  4 taken 0
branch  5 taken 1
        1:  248-block  3
    $$$$$:  248-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  248-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  248-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  248-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  248-block  8
    $$$$$:  248-block  9
    $$$$$:  248-block 10
    $$$$$:  248-block 11
    $$$$$:  248-block 12
        1:  249:}
    $$$$$:  249-block  0
    $$$$$:  249-block  1
    $$$$$:  249-block  2
    $$$$$:  249-block  3
    $$$$$:  249-block  4
    $$$$$:  249-block  5
    $$$$$:  249-block  6
    $$$$$:  249-block  7
    $$$$$:  249-block  8
    $$$$$:  249-block  9
    $$$$$:  249-block 10
    $$$$$:  249-block 11
    $$$$$:  249-block 12
    $$$$$:  249-block 13
    $$$$$:  249-block 14
    $$$$$:  249-block 15
    $$$$$:  249-block 16
    $$$$$:  249-block 17
    $$$$$:  249-block 18
        1:  249-block 19
    $$$$$:  249-block 20
    $$$$$:  249-block 21
    $$$$$:  249-block 22
    $$$$$:  249-block 23
        -:  250:
function _ZN29PqxxClientTest_CountTest_Test8TestBodyEv called 1 returned 100% blocks executed 32%
function _ZN29PqxxClientTest_CountTest_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN29PqxxClientTest_CountTest_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN29PqxxClientTest_CountTest_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  251:TEST_F(PqxxClientTest, CountTest)
        1:  251-block  0
branch  0 taken 1
branch  1 taken 0
        1:  251-block  1
branch  2 taken 1
branch  3 taken 0
        1:  251-block  2
branch  4 taken 1
branch  5 taken 0
        1:  251-block  3
branch  6 taken 1
branch  7 taken 0
        1:  251-block  4
branch  8 taken 1
branch  9 taken 0
        1:  251-block  5
branch 10 taken 1
branch 11 taken 0
        1:  251-block  6
branch 12 taken 1
branch 13 taken 0
        1:  251-block  7
branch 14 taken 1
branch 15 taken 0
        1:  251-block  8
branch 16 taken 1
branch 17 taken 0
        1:  251-block  9
    $$$$$:  251-block 10
    $$$$$:  251-block 11
    $$$$$:  251-block 12
    $$$$$:  251-block 13
    $$$$$:  251-block 14
    $$$$$:  251-block 15
    $$$$$:  251-block 16
    $$$$$:  251-block 17
    $$$$$:  251-block 18
    $$$$$:  251-block 19
        1:  251-block 20
        1:  251-block 21
        1:  251-block 22
        -:  252:{
        -:  253:    // Add data
        1:  254:    std::vector<Record> records;
        -:  255:
        6:  256:    for (int i = 1; i <= 5; ++i)
        1:  256-block  0
        6:  256-block  1
branch  0 taken 5
branch  1 taken 1
        5:  256-block  2
        -:  257:    {
        5:  258:        Record record;
        5:  259:        record.push_back(std::make_unique<Field<int>>("id", i));
        5:  259-block  0
branch  0 taken 5
branch  1 taken 0
        5:  259-block  1
branch  2 taken 0
branch  3 taken 5
    $$$$$:  259-block  2
        5:  260:        record.push_back(std::make_unique<Field<std::string>>("name", "User" + std::to_string(i)));
        5:  260-block  0
branch  0 taken 0
branch  1 taken 5
        5:  260-block  1
branch  2 taken 0
branch  3 taken 5
        5:  260-block  2
branch  4 taken 5
branch  5 taken 0
    $$$$$:  260-block  3
    $$$$$:  260-block  4
    $$$$$:  260-block  5
        5:  261:        record.push_back(std::make_unique<Field<std::string>>("description", ""));
        5:  261-block  0
branch  0 taken 5
branch  1 taken 0
        5:  261-block  1
branch  2 taken 5
branch  3 taken 0
    $$$$$:  261-block  2
        5:  262:        records.push_back(std::move(record));
        5:  262-block  0
branch  0 taken 5
branch  1 taken 0
        5:  263:    }
        5:  263-block  0
    $$$$$:  263-block  1
        -:  264:
        1:  265:    EXPECT_NO_THROW(db_client->insert(test_table, records));
        1:  265-block  0
branch  0 taken 1
branch  1 taken 0
        1:  265-block  1
branch  2 taken 1
branch  3 taken 0
        1:  265-block  2
branch  4 taken 1
branch  5 taken 0
        1:  265-block  3
branch  6 taken 1
branch  7 taken 0
        1:  265-block  4
branch  8 taken 1
branch  9 taken 0
        1:  265-block  5
    $$$$$:  265-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  265-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  265-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  265-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  265-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  265-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  265-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  265-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  265-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  265-block 15
branch 28 never executed
branch 29 never executed
        1:  265-block 16
    $$$$$:  265-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  265-block 18
    $$$$$:  265-block 19
    $$$$$:  265-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  265-block 21
        1:  265-block 22
    $$$$$:  265-block 23
    $$$$$:  265-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  265-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  265-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  265-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  265-block 28
    $$$$$:  265-block 29
    $$$$$:  265-block 30
    $$$$$:  265-block 31
    $$$$$:  265-block 32
    $$$$$:  265-block 33
        -:  266:
        1:  267:    Conditions conditions;
        1:  268:    conditions.add_field_condition(FieldCondition(
        1:  268-block  0
branch  0 taken 1
branch  1 taken 0
        1:  268-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  268-block  2
    $$$$$:  268-block  3
    $$$$$:  268-block  4
    $$$$$:  268-block  5
        1:  269:        std::make_unique<Field<int>>("id", 0),
        1:  269-block  0
branch  0 taken 1
branch  1 taken 0
        1:  270:        "=",
        1:  270-block  0
branch  0 taken 1
branch  1 taken 0
        1:  271:        std::make_unique<Field<int>>("", 1)
        1:  271-block  0
branch  0 taken 1
branch  1 taken 0
        -:  272:    ));
        1:  273:    const uint32_t count = db_client->count(test_table, conditions);
        1:  273-block  0
branch  0 taken 1
branch  1 taken 0
        1:  274:    EXPECT_EQ(count, 1);
        1:  274-block  0
branch  0 taken 1
branch  1 taken 0
        1:  274-block  1
branch  2 taken 1
branch  3 taken 0
        1:  274-block  2
branch  4 taken 0
branch  5 taken 1
        1:  274-block  3
    $$$$$:  274-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  274-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  274-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  274-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  274-block  8
    $$$$$:  274-block  9
    $$$$$:  274-block 10
    $$$$$:  274-block 11
        1:  275:}
    $$$$$:  275-block  0
    $$$$$:  275-block  1
    $$$$$:  275-block  2
    $$$$$:  275-block  3
    $$$$$:  275-block  4
    $$$$$:  275-block  5
    $$$$$:  275-block  6
    $$$$$:  275-block  7
    $$$$$:  275-block  8
    $$$$$:  275-block  9
    $$$$$:  275-block 10
    $$$$$:  275-block 11
    $$$$$:  275-block 12
    $$$$$:  275-block 13
        1:  275-block 14
    $$$$$:  275-block 15
    $$$$$:  275-block 16
    $$$$$:  275-block 17
        -:  276:
function _ZN32PqxxClientTest_CountAllTest_Test8TestBodyEv called 1 returned 100% blocks executed 31%
function _ZN32PqxxClientTest_CountAllTest_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN32PqxxClientTest_CountAllTest_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN32PqxxClientTest_CountAllTest_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  277:TEST_F(PqxxClientTest, CountAllTest)
        1:  277-block  0
branch  0 taken 1
branch  1 taken 0
        1:  277-block  1
branch  2 taken 1
branch  3 taken 0
        1:  277-block  2
branch  4 taken 1
branch  5 taken 0
        1:  277-block  3
branch  6 taken 1
branch  7 taken 0
        1:  277-block  4
branch  8 taken 1
branch  9 taken 0
        1:  277-block  5
branch 10 taken 1
branch 11 taken 0
        1:  277-block  6
branch 12 taken 1
branch 13 taken 0
        1:  277-block  7
branch 14 taken 1
branch 15 taken 0
        1:  277-block  8
branch 16 taken 1
branch 17 taken 0
        1:  277-block  9
    $$$$$:  277-block 10
    $$$$$:  277-block 11
    $$$$$:  277-block 12
    $$$$$:  277-block 13
    $$$$$:  277-block 14
    $$$$$:  277-block 15
    $$$$$:  277-block 16
    $$$$$:  277-block 17
    $$$$$:  277-block 18
    $$$$$:  277-block 19
        1:  277-block 20
        1:  277-block 21
        1:  277-block 22
        -:  278:{
        -:  279:    // Add data
        1:  280:    std::vector<Record> records;
        -:  281:
        6:  282:    for (int i = 1; i <= 5; ++i)
        1:  282-block  0
        6:  282-block  1
branch  0 taken 5
branch  1 taken 1
        5:  282-block  2
        -:  283:    {
        5:  284:        Record record;
        5:  285:        record.push_back(std::make_unique<Field<int>>("id", i));
        5:  285-block  0
branch  0 taken 5
branch  1 taken 0
        5:  285-block  1
branch  2 taken 0
branch  3 taken 5
    $$$$$:  285-block  2
        5:  286:        record.push_back(std::make_unique<Field<std::string>>("name", "User" + std::to_string(i)));
        5:  286-block  0
branch  0 taken 0
branch  1 taken 5
        5:  286-block  1
branch  2 taken 0
branch  3 taken 5
        5:  286-block  2
branch  4 taken 5
branch  5 taken 0
    $$$$$:  286-block  3
    $$$$$:  286-block  4
    $$$$$:  286-block  5
        5:  287:        record.push_back(std::make_unique<Field<std::string>>("description", ""));
        5:  287-block  0
branch  0 taken 5
branch  1 taken 0
        5:  287-block  1
branch  2 taken 5
branch  3 taken 0
    $$$$$:  287-block  2
        5:  288:        records.push_back(std::move(record));
        5:  288-block  0
branch  0 taken 5
branch  1 taken 0
        5:  289:    }
        5:  289-block  0
    $$$$$:  289-block  1
        -:  290:
        1:  291:    EXPECT_NO_THROW(db_client->insert(test_table, records));
        1:  291-block  0
branch  0 taken 1
branch  1 taken 0
        1:  291-block  1
branch  2 taken 1
branch  3 taken 0
        1:  291-block  2
branch  4 taken 1
branch  5 taken 0
        1:  291-block  3
branch  6 taken 1
branch  7 taken 0
        1:  291-block  4
branch  8 taken 1
branch  9 taken 0
        1:  291-block  5
    $$$$$:  291-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  291-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  291-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  291-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  291-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  291-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  291-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  291-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  291-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  291-block 15
branch 28 never executed
branch 29 never executed
        1:  291-block 16
    $$$$$:  291-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  291-block 18
    $$$$$:  291-block 19
    $$$$$:  291-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  291-block 21
        1:  291-block 22
    $$$$$:  291-block 23
    $$$$$:  291-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  291-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  291-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  291-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  291-block 28
    $$$$$:  291-block 29
    $$$$$:  291-block 30
    $$$$$:  291-block 31
    $$$$$:  291-block 32
    $$$$$:  291-block 33
        1:  292:    const uint32_t count_all = db_client->count(test_table);
        1:  292-block  0
branch  0 taken 1
branch  1 taken 0
        1:  293:    EXPECT_EQ(count_all, 5);
        1:  293-block  0
branch  0 taken 1
branch  1 taken 0
        1:  293-block  1
branch  2 taken 1
branch  3 taken 0
        1:  293-block  2
branch  4 taken 0
branch  5 taken 1
        1:  293-block  3
    $$$$$:  293-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  293-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  293-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  293-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  293-block  8
    $$$$$:  293-block  9
    $$$$$:  293-block 10
    $$$$$:  293-block 11
        1:  294:}
    $$$$$:  294-block  0
    $$$$$:  294-block  1
    $$$$$:  294-block  2
    $$$$$:  294-block  3
    $$$$$:  294-block  4
    $$$$$:  294-block  5
    $$$$$:  294-block  6
    $$$$$:  294-block  7
    $$$$$:  294-block  8
    $$$$$:  294-block  9
    $$$$$:  294-block 10
        1:  294-block 11
    $$$$$:  294-block 12
    $$$$$:  294-block 13
        -:  295:
function _ZN38PqxxClientTest_FullTextSearchTest_Test8TestBodyEv called 1 returned 100% blocks executed 39%
function _ZN38PqxxClientTest_FullTextSearchTest_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN38PqxxClientTest_FullTextSearchTest_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN38PqxxClientTest_FullTextSearchTest_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  296:TEST_F(PqxxClientTest, FullTextSearchTest)
        1:  296-block  0
branch  0 taken 1
branch  1 taken 0
        1:  296-block  1
branch  2 taken 1
branch  3 taken 0
        1:  296-block  2
branch  4 taken 1
branch  5 taken 0
        1:  296-block  3
branch  6 taken 1
branch  7 taken 0
        1:  296-block  4
branch  8 taken 1
branch  9 taken 0
        1:  296-block  5
branch 10 taken 1
branch 11 taken 0
        1:  296-block  6
branch 12 taken 1
branch 13 taken 0
        1:  296-block  7
branch 14 taken 1
branch 15 taken 0
        1:  296-block  8
branch 16 taken 1
branch 17 taken 0
        1:  296-block  9
    $$$$$:  296-block 10
    $$$$$:  296-block 11
    $$$$$:  296-block 12
    $$$$$:  296-block 13
    $$$$$:  296-block 14
    $$$$$:  296-block 15
    $$$$$:  296-block 16
    $$$$$:  296-block 17
    $$$$$:  296-block 18
    $$$$$:  296-block 19
        1:  296-block 20
        1:  296-block 21
        1:  296-block 22
        -:  297:{
        -:  298:    // Add data to the table
        1:  299:    std::vector<Record> records;
        -:  300:
        1:  301:    Record record1;
        1:  302:    record1.push_back(std::make_unique<Field<int>>("id", 1));
        1:  302-block  0
branch  0 taken 1
branch  1 taken 0
        1:  302-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  302-block  2
        1:  303:    record1.push_back(std::make_unique<Field<std::string>>("name", "Apple"));
        1:  303-block  0
branch  0 taken 1
branch  1 taken 0
        1:  303-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  303-block  2
        1:  304:    record1.push_back(std::make_unique<Field<std::string>>("description", "A sweet red fruit"));
        1:  304-block  0
branch  0 taken 1
branch  1 taken 0
        1:  304-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  304-block  2
        1:  305:    records.push_back(std::move(record1));
        1:  305-block  0
branch  0 taken 1
branch  1 taken 0
        -:  306:
        1:  307:    Record record2;
        1:  308:    record2.push_back(std::make_unique<Field<int>>("id", 2));
        1:  308-block  0
branch  0 taken 1
branch  1 taken 0
        1:  308-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  308-block  2
        1:  309:    record2.push_back(std::make_unique<Field<std::string>>("name", "Banana"));
        1:  309-block  0
branch  0 taken 1
branch  1 taken 0
        1:  309-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  309-block  2
        1:  310:    record2.push_back(std::make_unique<Field<std::string>>("description", "A long yellow fruit"));
        1:  310-block  0
branch  0 taken 1
branch  1 taken 0
        1:  310-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  310-block  2
        1:  311:    records.push_back(std::move(record2));
        1:  311-block  0
branch  0 taken 1
branch  1 taken 0
        -:  312:
        1:  313:    Record record3;
        1:  314:    record3.push_back(std::make_unique<Field<int>>("id", 3));
        1:  314-block  0
branch  0 taken 1
branch  1 taken 0
        1:  314-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  314-block  2
        1:  315:    record3.push_back(std::make_unique<Field<std::string>>("name", "Carrot"));
        1:  315-block  0
branch  0 taken 1
branch  1 taken 0
        1:  315-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  315-block  2
        1:  316:    record3.push_back(std::make_unique<Field<std::string>>("description", "An orange root vegetable"));
        1:  316-block  0
branch  0 taken 1
branch  1 taken 0
        1:  316-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  316-block  2
        1:  317:    records.push_back(std::move(record3));
        1:  317-block  0
branch  0 taken 1
branch  1 taken 0
        -:  318:
        -:  319:    // Insert records into the database
        1:  320:    EXPECT_NO_THROW(db_client->insert(test_table, records));
        1:  320-block  0
branch  0 taken 1
branch  1 taken 0
        1:  320-block  1
branch  2 taken 1
branch  3 taken 0
        1:  320-block  2
branch  4 taken 1
branch  5 taken 0
        1:  320-block  3
branch  6 taken 1
branch  7 taken 0
        1:  320-block  4
branch  8 taken 1
branch  9 taken 0
        1:  320-block  5
    $$$$$:  320-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  320-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  320-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  320-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  320-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  320-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  320-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  320-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  320-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  320-block 15
branch 28 never executed
branch 29 never executed
        1:  320-block 16
    $$$$$:  320-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  320-block 18
    $$$$$:  320-block 19
    $$$$$:  320-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  320-block 21
        1:  320-block 22
    $$$$$:  320-block 23
    $$$$$:  320-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  320-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  320-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  320-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  320-block 28
    $$$$$:  320-block 29
    $$$$$:  320-block 30
    $$$$$:  320-block 31
    $$$$$:  320-block 32
    $$$$$:  320-block 33
        -:  321:
        1:  322:    std::string search_query = "fruit";
        1:  322-block  0
branch  0 taken 1
branch  1 taken 0
    $$$$$:  322-block  1
        1:  323:    Conditions conditions;
        1:  324:    conditions.add_pattern_condition(PatternCondition(search_query));
        1:  324-block  0
branch  0 taken 1
branch  1 taken 0
        1:  324-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  324-block  2
        1:  325:    auto results = db_client->select(test_table, conditions);
        1:  325-block  0
branch  0 taken 1
branch  1 taken 0
        -:  326:
        -:  327:    // Verify the results
        1:  328:    EXPECT_EQ(results.size(), 2);
        1:  328-block  0
branch  0 taken 1
branch  1 taken 0
        1:  328-block  1
branch  2 taken 1
branch  3 taken 0
        1:  328-block  2
branch  4 taken 0
branch  5 taken 1
        1:  328-block  3
    $$$$$:  328-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  328-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  328-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  328-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  328-block  8
    $$$$$:  328-block  9
    $$$$$:  328-block 10
    $$$$$:  328-block 11
        -:  329:
        1:  330:    std::set expected_ids = {1, 2};
        1:  330-block  0
branch  0 taken 1
branch  1 taken 0
    $$$$$:  330-block  1
        1:  331:    std::set<int> result_ids;
        3:  332:    for (const auto& rec : results)
        1:  332-block  0
        3:  332-block  1
branch  0 taken 1
branch  1 taken 2
        2:  332-block  2
        2:  332-block  3
        -:  333:    {
        2:  334:        int id = rec[0]->as<int32_t>();
        2:  334-block  0
branch  0 taken 2
branch  1 taken 0
        2:  334-block  1
branch  2 taken 2
branch  3 taken 0
        2:  335:        result_ids.insert(id);
        2:  335-block  0
branch  0 taken 2
branch  1 taken 0
        -:  336:    }
        -:  337:
        1:  338:    EXPECT_EQ(result_ids, expected_ids);
        1:  338-block  0
branch  0 taken 1
branch  1 taken 0
        1:  338-block  1
branch  2 taken 1
branch  3 taken 0
        1:  338-block  2
branch  4 taken 0
branch  5 taken 1
        1:  338-block  3
    $$$$$:  338-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  338-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  338-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  338-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  338-block  8
    $$$$$:  338-block  9
    $$$$$:  338-block 10
    $$$$$:  338-block 11
        1:  339:    conditions.pop_pattern_condition();
        1:  339-block  0
branch  0 taken 1
branch  1 taken 0
        -:  340:    // Search for 'yellow'
        1:  341:    search_query = "yellow";
        1:  341-block  0
branch  0 taken 1
branch  1 taken 0
        1:  342:    conditions.add_pattern_condition(PatternCondition(search_query));
        1:  342-block  0
branch  0 taken 1
branch  1 taken 0
        1:  342-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  342-block  2
        1:  343:    results = db_client->select(test_table, conditions);
        1:  343-block  0
branch  0 taken 1
branch  1 taken 0
        1:  344:    EXPECT_EQ(results.size(), 1);
        1:  344-block  0
branch  0 taken 1
branch  1 taken 0
        1:  344-block  1
branch  2 taken 1
branch  3 taken 0
        1:  344-block  2
branch  4 taken 0
branch  5 taken 1
        1:  344-block  3
    $$$$$:  344-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  344-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  344-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  344-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  344-block  8
    $$$$$:  344-block  9
    $$$$$:  344-block 10
    $$$$$:  344-block 11
        1:  345:    EXPECT_EQ(results.front()[1]->as<std::string>(), "Banana");
        1:  345-block  0
branch  0 taken 1
branch  1 taken 0
        1:  345-block  1
branch  2 taken 1
branch  3 taken 0
        1:  345-block  2
branch  4 taken 1
branch  5 taken 0
        1:  345-block  3
branch  6 taken 1
branch  7 taken 0
        1:  345-block  4
branch  8 taken 0
branch  9 taken 1
        1:  345-block  5
    $$$$$:  345-block  6
    $$$$$:  345-block  7
branch 10 never executed
branch 11 never executed
    $$$$$:  345-block  8
branch 12 never executed
branch 13 never executed
    $$$$$:  345-block  9
branch 14 never executed
branch 15 never executed
    $$$$$:  345-block 10
branch 16 never executed
branch 17 never executed
    $$$$$:  345-block 11
    $$$$$:  345-block 12
    $$$$$:  345-block 13
    $$$$$:  345-block 14
        1:  346:    conditions.pop_pattern_condition();
        1:  346-block  0
branch  0 taken 1
branch  1 taken 0
        -:  347:    // Search for 'vegetable'
        1:  348:    search_query = "vegetable";
        1:  348-block  0
branch  0 taken 1
branch  1 taken 0
        1:  349:    conditions.add_pattern_condition(PatternCondition(search_query));
        1:  349-block  0
branch  0 taken 1
branch  1 taken 0
        1:  349-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  349-block  2
        1:  350:    results = db_client->select(test_table, conditions);
        1:  350-block  0
branch  0 taken 1
branch  1 taken 0
        1:  351:    EXPECT_EQ(results.size(), 1);
        1:  351-block  0
branch  0 taken 1
branch  1 taken 0
        1:  351-block  1
branch  2 taken 1
branch  3 taken 0
        1:  351-block  2
branch  4 taken 0
branch  5 taken 1
        1:  351-block  3
    $$$$$:  351-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  351-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  351-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  351-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  351-block  8
    $$$$$:  351-block  9
    $$$$$:  351-block 10
    $$$$$:  351-block 11
        1:  352:    EXPECT_EQ(results.front()[1]->as<std::string>(), "Carrot");
        1:  352-block  0
branch  0 taken 1
branch  1 taken 0
        1:  352-block  1
branch  2 taken 1
branch  3 taken 0
        1:  352-block  2
branch  4 taken 1
branch  5 taken 0
        1:  352-block  3
branch  6 taken 1
branch  7 taken 0
        1:  352-block  4
branch  8 taken 0
branch  9 taken 1
        1:  352-block  5
    $$$$$:  352-block  6
    $$$$$:  352-block  7
branch 10 never executed
branch 11 never executed
    $$$$$:  352-block  8
branch 12 never executed
branch 13 never executed
    $$$$$:  352-block  9
branch 14 never executed
branch 15 never executed
    $$$$$:  352-block 10
branch 16 never executed
branch 17 never executed
    $$$$$:  352-block 11
    $$$$$:  352-block 12
    $$$$$:  352-block 13
    $$$$$:  352-block 14
        1:  353:    conditions.pop_pattern_condition();
        1:  353-block  0
branch  0 taken 1
branch  1 taken 0
        -:  354:    // Search for a term not present
        1:  355:    search_query = "berry";
        1:  355-block  0
branch  0 taken 1
branch  1 taken 0
        1:  356:    conditions.add_pattern_condition(PatternCondition(search_query));
        1:  356-block  0
branch  0 taken 1
branch  1 taken 0
        1:  356-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  356-block  2
        1:  357:    results = db_client->select(test_table, conditions);
        1:  357-block  0
branch  0 taken 1
branch  1 taken 0
        -:  358:
        1:  359:    EXPECT_TRUE(results.empty());
        1:  359-block  0
branch  0 taken 1
branch  1 taken 0
        1:  359-block  1
branch  2 taken 1
branch  3 taken 0
        1:  359-block  2
branch  4 taken 0
branch  5 taken 1
        1:  359-block  3
    $$$$$:  359-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  359-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  359-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  359-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  359-block  8
    $$$$$:  359-block  9
    $$$$$:  359-block 10
    $$$$$:  359-block 11
    $$$$$:  359-block 12
        1:  360:}
    $$$$$:  360-block  0
    $$$$$:  360-block  1
    $$$$$:  360-block  2
    $$$$$:  360-block  3
    $$$$$:  360-block  4
    $$$$$:  360-block  5
    $$$$$:  360-block  6
    $$$$$:  360-block  7
    $$$$$:  360-block  8
    $$$$$:  360-block  9
    $$$$$:  360-block 10
    $$$$$:  360-block 11
    $$$$$:  360-block 12
    $$$$$:  360-block 13
    $$$$$:  360-block 14
    $$$$$:  360-block 15
    $$$$$:  360-block 16
    $$$$$:  360-block 17
    $$$$$:  360-block 18
    $$$$$:  360-block 19
    $$$$$:  360-block 20
    $$$$$:  360-block 21
    $$$$$:  360-block 22
    $$$$$:  360-block 23
    $$$$$:  360-block 24
    $$$$$:  360-block 25
        1:  360-block 26
    $$$$$:  360-block 27
    $$$$$:  360-block 28
    $$$$$:  360-block 29
    $$$$$:  360-block 30
    $$$$$:  360-block 31
    $$$$$:  360-block 32
    $$$$$:  360-block 33
        -:  361:
function _ZN37PqxxClientTest_TruncateTableTest_Test8TestBodyEv called 1 returned 100% blocks executed 28%
function _ZN37PqxxClientTest_TruncateTableTest_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN37PqxxClientTest_TruncateTableTest_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN37PqxxClientTest_TruncateTableTest_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  362:TEST_F(PqxxClientTest, TruncateTableTest)
        1:  362-block  0
branch  0 taken 1
branch  1 taken 0
        1:  362-block  1
branch  2 taken 1
branch  3 taken 0
        1:  362-block  2
branch  4 taken 1
branch  5 taken 0
        1:  362-block  3
branch  6 taken 1
branch  7 taken 0
        1:  362-block  4
branch  8 taken 1
branch  9 taken 0
        1:  362-block  5
branch 10 taken 1
branch 11 taken 0
        1:  362-block  6
branch 12 taken 1
branch 13 taken 0
        1:  362-block  7
branch 14 taken 1
branch 15 taken 0
        1:  362-block  8
branch 16 taken 1
branch 17 taken 0
        1:  362-block  9
    $$$$$:  362-block 10
    $$$$$:  362-block 11
    $$$$$:  362-block 12
    $$$$$:  362-block 13
    $$$$$:  362-block 14
    $$$$$:  362-block 15
    $$$$$:  362-block 16
    $$$$$:  362-block 17
    $$$$$:  362-block 18
    $$$$$:  362-block 19
        1:  362-block 20
        1:  362-block 21
        1:  362-block 22
        -:  363:{
        -:  364:    // Add data
        1:  365:    std::vector<Record> records;
        -:  366:
        1:  367:    Record record1;
        1:  368:    record1.push_back(std::make_unique<Field<int>>("id", 1));
        1:  368-block  0
branch  0 taken 1
branch  1 taken 0
        1:  368-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  368-block  2
        1:  369:    record1.push_back(std::make_unique<Field<std::string>>("name", "Alice"));
        1:  369-block  0
branch  0 taken 1
branch  1 taken 0
        1:  369-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  369-block  2
        1:  370:    record1.push_back(std::make_unique<Field<std::string>>("description", ""));
        1:  370-block  0
branch  0 taken 1
branch  1 taken 0
        1:  370-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  370-block  2
        1:  371:    records.push_back(std::move(record1));
        1:  371-block  0
branch  0 taken 1
branch  1 taken 0
        1:  372:    Record record2;
        1:  373:    record2.push_back(std::make_unique<Field<int>>("id", 2));
        1:  373-block  0
branch  0 taken 1
branch  1 taken 0
        1:  373-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  373-block  2
        1:  374:    record2.push_back(std::make_unique<Field<std::string>>("name", "Alice"));
        1:  374-block  0
branch  0 taken 1
branch  1 taken 0
        1:  374-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  374-block  2
        1:  375:    record2.push_back(std::make_unique<Field<std::string>>("description", ""));
        1:  375-block  0
branch  0 taken 1
branch  1 taken 0
        1:  375-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  375-block  2
        1:  376:    records.push_back(std::move(record2));
        1:  376-block  0
branch  0 taken 1
branch  1 taken 0
        1:  377:    EXPECT_NO_THROW(db_client->insert(test_table, records));
        1:  377-block  0
branch  0 taken 1
branch  1 taken 0
        1:  377-block  1
branch  2 taken 1
branch  3 taken 0
        1:  377-block  2
branch  4 taken 1
branch  5 taken 0
        1:  377-block  3
branch  6 taken 1
branch  7 taken 0
        1:  377-block  4
branch  8 taken 1
branch  9 taken 0
        1:  377-block  5
    $$$$$:  377-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  377-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  377-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  377-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  377-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  377-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  377-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  377-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  377-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  377-block 15
branch 28 never executed
branch 29 never executed
        1:  377-block 16
    $$$$$:  377-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  377-block 18
    $$$$$:  377-block 19
    $$$$$:  377-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  377-block 21
        1:  377-block 22
    $$$$$:  377-block 23
    $$$$$:  377-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  377-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  377-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  377-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  377-block 28
    $$$$$:  377-block 29
    $$$$$:  377-block 30
    $$$$$:  377-block 31
    $$$$$:  377-block 32
    $$$$$:  377-block 33
        -:  378:
        -:  379:    // Remove data
        1:  380:    Conditions conditions;
        1:  381:    conditions.add_field_condition(FieldCondition(
        1:  381-block  0
branch  0 taken 1
branch  1 taken 0
        1:  381-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  381-block  2
    $$$$$:  381-block  3
    $$$$$:  381-block  4
    $$$$$:  381-block  5
        1:  382:        std::make_unique<Field<int32_t>>("id", 0),
        1:  382-block  0
branch  0 taken 1
branch  1 taken 0
        1:  383:        "=",
        1:  383-block  0
branch  0 taken 1
branch  1 taken 0
        1:  384:        std::make_unique<Field<int32_t>>("", 1)
        1:  384-block  0
branch  0 taken 1
branch  1 taken 0
        -:  385:    ));
        -:  386:
        1:  387:    EXPECT_NO_THROW(db_client->truncate_table(test_table));
        1:  387-block  0
branch  0 taken 1
branch  1 taken 0
        1:  387-block  1
branch  2 taken 1
branch  3 taken 0
        1:  387-block  2
branch  4 taken 1
branch  5 taken 0
        1:  387-block  3
branch  6 taken 1
branch  7 taken 0
        1:  387-block  4
branch  8 taken 1
branch  9 taken 0
        1:  387-block  5
    $$$$$:  387-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  387-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  387-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  387-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  387-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  387-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  387-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  387-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  387-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  387-block 15
branch 28 never executed
branch 29 never executed
        1:  387-block 16
    $$$$$:  387-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  387-block 18
    $$$$$:  387-block 19
    $$$$$:  387-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  387-block 21
        1:  387-block 22
    $$$$$:  387-block 23
    $$$$$:  387-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  387-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  387-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  387-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  387-block 28
    $$$$$:  387-block 29
    $$$$$:  387-block 30
    $$$$$:  387-block 31
    $$$$$:  387-block 32
        -:  388:
        -:  389:    // Verify removal
        1:  390:    const auto results = db_client->select(test_table);
        1:  390-block  0
branch  0 taken 1
branch  1 taken 0
        1:  391:    EXPECT_TRUE(results.empty());
        1:  391-block  0
branch  0 taken 1
branch  1 taken 0
        1:  391-block  1
branch  2 taken 1
branch  3 taken 0
        1:  391-block  2
branch  4 taken 0
branch  5 taken 1
        1:  391-block  3
    $$$$$:  391-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  391-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  391-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  391-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  391-block  8
    $$$$$:  391-block  9
    $$$$$:  391-block 10
    $$$$$:  391-block 11
    $$$$$:  391-block 12
        1:  392:}
    $$$$$:  392-block  0
    $$$$$:  392-block  1
    $$$$$:  392-block  2
    $$$$$:  392-block  3
    $$$$$:  392-block  4
    $$$$$:  392-block  5
    $$$$$:  392-block  6
    $$$$$:  392-block  7
    $$$$$:  392-block  8
    $$$$$:  392-block  9
    $$$$$:  392-block 10
    $$$$$:  392-block 11
    $$$$$:  392-block 12
    $$$$$:  392-block 13
    $$$$$:  392-block 14
    $$$$$:  392-block 15
    $$$$$:  392-block 16
    $$$$$:  392-block 17
    $$$$$:  392-block 18
    $$$$$:  392-block 19
        1:  392-block 20
    $$$$$:  392-block 21
    $$$$$:  392-block 22
    $$$$$:  392-block 23
    $$$$$:  392-block 24
    $$$$$:  392-block 25
        -:  393:
        -:  394:// ------------------------------ TRANSACTION TESTS ------------------------------//
        -:  395:
function _ZN41PqxxClientTest_TransactionSimpleTest_Test8TestBodyEv called 1 returned 100% blocks executed 23%
function _ZN41PqxxClientTest_TransactionSimpleTest_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN41PqxxClientTest_TransactionSimpleTest_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN41PqxxClientTest_TransactionSimpleTest_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  396:TEST_F(PqxxClientTest, TransactionSimpleTest)
        1:  396-block  0
branch  0 taken 1
branch  1 taken 0
        1:  396-block  1
branch  2 taken 1
branch  3 taken 0
        1:  396-block  2
branch  4 taken 1
branch  5 taken 0
        1:  396-block  3
branch  6 taken 1
branch  7 taken 0
        1:  396-block  4
branch  8 taken 1
branch  9 taken 0
        1:  396-block  5
branch 10 taken 1
branch 11 taken 0
        1:  396-block  6
branch 12 taken 1
branch 13 taken 0
        1:  396-block  7
branch 14 taken 1
branch 15 taken 0
        1:  396-block  8
branch 16 taken 1
branch 17 taken 0
        1:  396-block  9
    $$$$$:  396-block 10
    $$$$$:  396-block 11
    $$$$$:  396-block 12
    $$$$$:  396-block 13
    $$$$$:  396-block 14
    $$$$$:  396-block 15
    $$$$$:  396-block 16
    $$$$$:  396-block 17
    $$$$$:  396-block 18
    $$$$$:  396-block 19
        1:  396-block 20
        1:  396-block 21
        1:  396-block 22
        -:  397:{
        1:  398:    EXPECT_NO_THROW(db_client->start_transaction());
        1:  398-block  0
branch  0 taken 1
branch  1 taken 0
        1:  398-block  1
branch  2 taken 1
branch  3 taken 0
        1:  398-block  2
branch  4 taken 1
branch  5 taken 0
        1:  398-block  3
branch  6 taken 1
branch  7 taken 0
        1:  398-block  4
branch  8 taken 1
branch  9 taken 0
        1:  398-block  5
    $$$$$:  398-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  398-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  398-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  398-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  398-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  398-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  398-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  398-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  398-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  398-block 15
branch 28 never executed
branch 29 never executed
        1:  398-block 16
    $$$$$:  398-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  398-block 18
    $$$$$:  398-block 19
    $$$$$:  398-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  398-block 21
        1:  398-block 22
    $$$$$:  398-block 23
    $$$$$:  398-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  398-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  398-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  398-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  398-block 28
    $$$$$:  398-block 29
    $$$$$:  398-block 30
    $$$$$:  398-block 31
    $$$$$:  398-block 32
    $$$$$:  398-block 33
    $$$$$:  398-block 34
        1:  399:    std::vector<Record> records;
        -:  400:
        1:  401:    Record record1;
        1:  402:    record1.push_back(std::make_unique<Field<int>>("id", 1));
        1:  402-block  0
branch  0 taken 1
branch  1 taken 0
        1:  402-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  402-block  2
        1:  403:    record1.push_back(std::make_unique<Field<std::string>>("name", "Alice"));
        1:  403-block  0
branch  0 taken 1
branch  1 taken 0
        1:  403-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  403-block  2
        1:  404:    record1.push_back(std::make_unique<Field<std::string>>("description", "P"));
        1:  404-block  0
branch  0 taken 1
branch  1 taken 0
        1:  404-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  404-block  2
        1:  405:    records.push_back(std::move(record1));
        1:  405-block  0
branch  0 taken 1
branch  1 taken 0
        -:  406:
        1:  407:    Record record2;
        1:  408:    record2.push_back(std::make_unique<Field<int>>("id", 2));
        1:  408-block  0
branch  0 taken 1
branch  1 taken 0
        1:  408-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  408-block  2
        1:  409:    record2.push_back(std::make_unique<Field<std::string>>("name", "Bob"));
        1:  409-block  0
branch  0 taken 1
branch  1 taken 0
        1:  409-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  409-block  2
        1:  410:    record2.push_back(std::make_unique<Field<std::string>>("description", "L"));
        1:  410-block  0
branch  0 taken 1
branch  1 taken 0
        1:  410-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  410-block  2
        1:  411:    records.push_back(std::move(record2));
        1:  411-block  0
branch  0 taken 1
branch  1 taken 0
        -:  412:
        -:  413:    // Add data to the table
        1:  414:    EXPECT_NO_THROW(db_client->insert(test_table, records));
        1:  414-block  0
branch  0 taken 1
branch  1 taken 0
        1:  414-block  1
branch  2 taken 1
branch  3 taken 0
        1:  414-block  2
branch  4 taken 1
branch  5 taken 0
        1:  414-block  3
branch  6 taken 1
branch  7 taken 0
        1:  414-block  4
branch  8 taken 1
branch  9 taken 0
        1:  414-block  5
    $$$$$:  414-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  414-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  414-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  414-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  414-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  414-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  414-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  414-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  414-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  414-block 15
branch 28 never executed
branch 29 never executed
        1:  414-block 16
    $$$$$:  414-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  414-block 18
    $$$$$:  414-block 19
    $$$$$:  414-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  414-block 21
        1:  414-block 22
    $$$$$:  414-block 23
    $$$$$:  414-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  414-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  414-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  414-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  414-block 28
    $$$$$:  414-block 29
    $$$$$:  414-block 30
    $$$$$:  414-block 31
    $$$$$:  414-block 32
        1:  415:    EXPECT_NO_THROW(db_client->commit_transaction());
        1:  415-block  0
branch  0 taken 1
branch  1 taken 0
        1:  415-block  1
branch  2 taken 1
branch  3 taken 0
        1:  415-block  2
branch  4 taken 1
branch  5 taken 0
        1:  415-block  3
branch  6 taken 1
branch  7 taken 0
        1:  415-block  4
branch  8 taken 1
branch  9 taken 0
        1:  415-block  5
    $$$$$:  415-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  415-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  415-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  415-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  415-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  415-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  415-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  415-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  415-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  415-block 15
branch 28 never executed
branch 29 never executed
        1:  415-block 16
    $$$$$:  415-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  415-block 18
    $$$$$:  415-block 19
    $$$$$:  415-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  415-block 21
        1:  415-block 22
    $$$$$:  415-block 23
    $$$$$:  415-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  415-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  415-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  415-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  415-block 28
    $$$$$:  415-block 29
    $$$$$:  415-block 30
    $$$$$:  415-block 31
    $$$$$:  415-block 32
        1:  416:    auto results = db_client->select(test_table);
        1:  416-block  0
branch  0 taken 1
branch  1 taken 0
        1:  417:    EXPECT_EQ(results.size(), 2);
        1:  417-block  0
branch  0 taken 1
branch  1 taken 0
        1:  417-block  1
branch  2 taken 1
branch  3 taken 0
        1:  417-block  2
branch  4 taken 0
branch  5 taken 1
        1:  417-block  3
    $$$$$:  417-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  417-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  417-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  417-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  417-block  8
    $$$$$:  417-block  9
    $$$$$:  417-block 10
    $$$$$:  417-block 11
        -:  418:
        1:  419:    EXPECT_NO_THROW(db_client->truncate_table(test_table));
        1:  419-block  0
branch  0 taken 1
branch  1 taken 0
        1:  419-block  1
branch  2 taken 1
branch  3 taken 0
        1:  419-block  2
branch  4 taken 1
branch  5 taken 0
        1:  419-block  3
branch  6 taken 1
branch  7 taken 0
        1:  419-block  4
branch  8 taken 1
branch  9 taken 0
        1:  419-block  5
    $$$$$:  419-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  419-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  419-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  419-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  419-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  419-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  419-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  419-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  419-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  419-block 15
branch 28 never executed
branch 29 never executed
        1:  419-block 16
    $$$$$:  419-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  419-block 18
    $$$$$:  419-block 19
    $$$$$:  419-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  419-block 21
        1:  419-block 22
    $$$$$:  419-block 23
    $$$$$:  419-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  419-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  419-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  419-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  419-block 28
    $$$$$:  419-block 29
    $$$$$:  419-block 30
    $$$$$:  419-block 31
    $$$$$:  419-block 32
        -:  420:
        1:  421:    EXPECT_EQ(db_client->select(test_table).size(), 0);
        1:  421-block  0
branch  0 taken 1
branch  1 taken 0
        1:  421-block  1
branch  2 taken 1
branch  3 taken 0
        1:  421-block  2
branch  4 taken 1
branch  5 taken 0
        1:  421-block  3
branch  6 taken 0
branch  7 taken 1
        1:  421-block  4
    $$$$$:  421-block  5
    $$$$$:  421-block  6
branch  8 never executed
branch  9 never executed
    $$$$$:  421-block  7
branch 10 never executed
branch 11 never executed
    $$$$$:  421-block  8
branch 12 never executed
branch 13 never executed
    $$$$$:  421-block  9
branch 14 never executed
branch 15 never executed
    $$$$$:  421-block 10
    $$$$$:  421-block 11
    $$$$$:  421-block 12
    $$$$$:  421-block 13
        -:  422:    // Test rollback
        1:  423:    EXPECT_NO_THROW(db_client->start_transaction());
        1:  423-block  0
branch  0 taken 1
branch  1 taken 0
        1:  423-block  1
branch  2 taken 1
branch  3 taken 0
        1:  423-block  2
branch  4 taken 1
branch  5 taken 0
        1:  423-block  3
branch  6 taken 1
branch  7 taken 0
        1:  423-block  4
branch  8 taken 1
branch  9 taken 0
        1:  423-block  5
    $$$$$:  423-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  423-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  423-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  423-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  423-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  423-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  423-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  423-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  423-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  423-block 15
branch 28 never executed
branch 29 never executed
        1:  423-block 16
    $$$$$:  423-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  423-block 18
    $$$$$:  423-block 19
    $$$$$:  423-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  423-block 21
        1:  423-block 22
    $$$$$:  423-block 23
    $$$$$:  423-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  423-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  423-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  423-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  423-block 28
    $$$$$:  423-block 29
    $$$$$:  423-block 30
    $$$$$:  423-block 31
    $$$$$:  423-block 32
        -:  424:
        -:  425:    // Add data to the table
        1:  426:    EXPECT_NO_THROW(db_client->insert(test_table, records));
        1:  426-block  0
branch  0 taken 1
branch  1 taken 0
        1:  426-block  1
branch  2 taken 1
branch  3 taken 0
        1:  426-block  2
branch  4 taken 1
branch  5 taken 0
        1:  426-block  3
branch  6 taken 1
branch  7 taken 0
        1:  426-block  4
branch  8 taken 1
branch  9 taken 0
        1:  426-block  5
    $$$$$:  426-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  426-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  426-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  426-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  426-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  426-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  426-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  426-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  426-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  426-block 15
branch 28 never executed
branch 29 never executed
        1:  426-block 16
    $$$$$:  426-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  426-block 18
    $$$$$:  426-block 19
    $$$$$:  426-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  426-block 21
        1:  426-block 22
    $$$$$:  426-block 23
    $$$$$:  426-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  426-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  426-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  426-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  426-block 28
    $$$$$:  426-block 29
    $$$$$:  426-block 30
    $$$$$:  426-block 31
    $$$$$:  426-block 32
        -:  427:
        1:  428:    EXPECT_NO_THROW(db_client->rollback_transaction());
        1:  428-block  0
branch  0 taken 1
branch  1 taken 0
        1:  428-block  1
branch  2 taken 1
branch  3 taken 0
        1:  428-block  2
branch  4 taken 1
branch  5 taken 0
        1:  428-block  3
branch  6 taken 1
branch  7 taken 0
        1:  428-block  4
branch  8 taken 1
branch  9 taken 0
        1:  428-block  5
    $$$$$:  428-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  428-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  428-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  428-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  428-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  428-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  428-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  428-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  428-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  428-block 15
branch 28 never executed
branch 29 never executed
        1:  428-block 16
    $$$$$:  428-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  428-block 18
    $$$$$:  428-block 19
    $$$$$:  428-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  428-block 21
        1:  428-block 22
    $$$$$:  428-block 23
    $$$$$:  428-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  428-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  428-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  428-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  428-block 28
    $$$$$:  428-block 29
    $$$$$:  428-block 30
    $$$$$:  428-block 31
    $$$$$:  428-block 32
        1:  429:    EXPECT_EQ(db_client->select(test_table).size(), 0);
        1:  429-block  0
branch  0 taken 1
branch  1 taken 0
        1:  429-block  1
branch  2 taken 1
branch  3 taken 0
        1:  429-block  2
branch  4 taken 1
branch  5 taken 0
        1:  429-block  3
branch  6 taken 0
branch  7 taken 1
        1:  429-block  4
    $$$$$:  429-block  5
    $$$$$:  429-block  6
branch  8 never executed
branch  9 never executed
    $$$$$:  429-block  7
branch 10 never executed
branch 11 never executed
    $$$$$:  429-block  8
branch 12 never executed
branch 13 never executed
    $$$$$:  429-block  9
branch 14 never executed
branch 15 never executed
    $$$$$:  429-block 10
    $$$$$:  429-block 11
    $$$$$:  429-block 12
    $$$$$:  429-block 13
        1:  430:}
    $$$$$:  430-block  0
    $$$$$:  430-block  1
    $$$$$:  430-block  2
    $$$$$:  430-block  3
    $$$$$:  430-block  4
    $$$$$:  430-block  5
    $$$$$:  430-block  6
    $$$$$:  430-block  7
    $$$$$:  430-block  8
    $$$$$:  430-block  9
    $$$$$:  430-block 10
    $$$$$:  430-block 11
    $$$$$:  430-block 12
    $$$$$:  430-block 13
    $$$$$:  430-block 14
    $$$$$:  430-block 15
    $$$$$:  430-block 16
    $$$$$:  430-block 17
    $$$$$:  430-block 18
    $$$$$:  430-block 19
    $$$$$:  430-block 20
    $$$$$:  430-block 21
    $$$$$:  430-block 22
    $$$$$:  430-block 23
    $$$$$:  430-block 24
    $$$$$:  430-block 25
    $$$$$:  430-block 26
    $$$$$:  430-block 27
    $$$$$:  430-block 28
    $$$$$:  430-block 29
    $$$$$:  430-block 30
    $$$$$:  430-block 31
    $$$$$:  430-block 32
    $$$$$:  430-block 33
    $$$$$:  430-block 34
    $$$$$:  430-block 35
    $$$$$:  430-block 36
    $$$$$:  430-block 37
    $$$$$:  430-block 38
    $$$$$:  430-block 39
    $$$$$:  430-block 40
    $$$$$:  430-block 41
    $$$$$:  430-block 42
    $$$$$:  430-block 43
        1:  430-block 44
    $$$$$:  430-block 45
    $$$$$:  430-block 46
    $$$$$:  430-block 47
        -:  431:
function _ZN46PqxxClientTest_TransactionConquerenteTest_Test8TestBodyEv called 1 returned 100% blocks executed 21%
function _ZN46PqxxClientTest_TransactionConquerenteTest_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN46PqxxClientTest_TransactionConquerenteTest_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN46PqxxClientTest_TransactionConquerenteTest_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  432:TEST_F(PqxxClientTest, TransactionConquerenteTest)
        1:  432-block  0
branch  0 taken 1
branch  1 taken 0
        1:  432-block  1
branch  2 taken 1
branch  3 taken 0
        1:  432-block  2
branch  4 taken 1
branch  5 taken 0
        1:  432-block  3
branch  6 taken 1
branch  7 taken 0
        1:  432-block  4
branch  8 taken 1
branch  9 taken 0
        1:  432-block  5
branch 10 taken 1
branch 11 taken 0
        1:  432-block  6
branch 12 taken 1
branch 13 taken 0
        1:  432-block  7
branch 14 taken 1
branch 15 taken 0
        1:  432-block  8
branch 16 taken 1
branch 17 taken 0
        1:  432-block  9
    $$$$$:  432-block 10
    $$$$$:  432-block 11
    $$$$$:  432-block 12
    $$$$$:  432-block 13
    $$$$$:  432-block 14
    $$$$$:  432-block 15
    $$$$$:  432-block 16
    $$$$$:  432-block 17
    $$$$$:  432-block 18
    $$$$$:  432-block 19
        1:  432-block 20
        1:  432-block 21
        1:  432-block 22
        -:  433:{
        1:  434:    EXPECT_NO_THROW(db_client->start_transaction());
        1:  434-block  0
branch  0 taken 1
branch  1 taken 0
        1:  434-block  1
branch  2 taken 1
branch  3 taken 0
        1:  434-block  2
branch  4 taken 1
branch  5 taken 0
        1:  434-block  3
branch  6 taken 1
branch  7 taken 0
        1:  434-block  4
branch  8 taken 1
branch  9 taken 0
        1:  434-block  5
    $$$$$:  434-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  434-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  434-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  434-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  434-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  434-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  434-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  434-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  434-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  434-block 15
branch 28 never executed
branch 29 never executed
        1:  434-block 16
    $$$$$:  434-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  434-block 18
    $$$$$:  434-block 19
    $$$$$:  434-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  434-block 21
        1:  434-block 22
    $$$$$:  434-block 23
    $$$$$:  434-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  434-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  434-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  434-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  434-block 28
    $$$$$:  434-block 29
    $$$$$:  434-block 30
    $$$$$:  434-block 31
    $$$$$:  434-block 32
    $$$$$:  434-block 33
    $$$$$:  434-block 34
        2:  435:    EXPECT_THROW(db_client->start_transaction(), drug_lib::common::database::exceptions::TransactionException);
        1:  435-block  0
branch  0 taken 1
branch  1 taken 0
        1:  435-block  1
branch  2 taken 1
branch  3 taken 0
        1:  435-block  2
branch  4 taken 1
branch  5 taken 0
        1:  435-block  3
branch  6 taken 1
branch  7 taken 0
        1:  435-block  4
branch  8 taken 0
branch  9 taken 1
    $$$$$:  435-block  5
        1:  435-block  6
branch 10 taken 1
branch 11 taken 0
        1:  435-block  7
branch 12 taken 1
branch 13 taken 0
        1:  435-block  8
        1:  435-block  9
branch 14 taken 1
branch 15 taken 0
    $$$$$:  435-block 10
branch 16 never executed
branch 17 never executed
    $$$$$:  435-block 11
    $$$$$:  435-block 12
branch 18 never executed
branch 19 never executed
    $$$$$:  435-block 13
branch 20 never executed
branch 21 never executed
    $$$$$:  435-block 14
branch 22 never executed
branch 23 never executed
    $$$$$:  435-block 15
branch 24 never executed
branch 25 never executed
    $$$$$:  435-block 16
branch 26 never executed
branch 27 never executed
    $$$$$:  435-block 17
branch 28 never executed
branch 29 never executed
    $$$$$:  435-block 18
branch 30 never executed
branch 31 never executed
    $$$$$:  435-block 19
branch 32 never executed
branch 33 never executed
    $$$$$:  435-block 20
branch 34 never executed
branch 35 never executed
    $$$$$:  435-block 21
branch 36 never executed
branch 37 never executed
    $$$$$:  435-block 22
    $$$$$:  435-block 23
branch 38 never executed
branch 39 never executed
    $$$$$:  435-block 24
    $$$$$:  435-block 25
    $$$$$:  435-block 26
branch 40 never executed
branch 41 never executed
    $$$$$:  435-block 27
        1:  435-block 28
    $$$$$:  435-block 29
    $$$$$:  435-block 30
branch 42 never executed
branch 43 never executed
    $$$$$:  435-block 31
branch 44 never executed
branch 45 never executed
    $$$$$:  435-block 32
branch 46 never executed
branch 47 never executed
    $$$$$:  435-block 33
    $$$$$:  435-block 34
    $$$$$:  435-block 35
    $$$$$:  435-block 36
        1:  436:    EXPECT_NO_THROW(db_client->commit_transaction());
        1:  436-block  0
branch  0 taken 1
branch  1 taken 0
        1:  436-block  1
branch  2 taken 1
branch  3 taken 0
        1:  436-block  2
branch  4 taken 1
branch  5 taken 0
        1:  436-block  3
branch  6 taken 1
branch  7 taken 0
        1:  436-block  4
branch  8 taken 1
branch  9 taken 0
        1:  436-block  5
    $$$$$:  436-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  436-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  436-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  436-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  436-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  436-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  436-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  436-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  436-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  436-block 15
branch 28 never executed
branch 29 never executed
        1:  436-block 16
    $$$$$:  436-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  436-block 18
    $$$$$:  436-block 19
    $$$$$:  436-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  436-block 21
        1:  436-block 22
    $$$$$:  436-block 23
    $$$$$:  436-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  436-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  436-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  436-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  436-block 28
    $$$$$:  436-block 29
    $$$$$:  436-block 30
    $$$$$:  436-block 31
    $$$$$:  436-block 32
        2:  437:}
    $$$$$:  437-block  0
    $$$$$:  437-block  1
    $$$$$:  437-block  2
    $$$$$:  437-block  3
    $$$$$:  437-block  4
    $$$$$:  437-block  5
        1:  437-block  6
    $$$$$:  437-block  7
    $$$$$:  437-block  8
    $$$$$:  437-block  9
    $$$$$:  437-block 10
    $$$$$:  437-block 11
    $$$$$:  437-block 12
    $$$$$:  437-block 13
        1:  437-block 14
        -:  438:
function _ZN46PqxxClientTest_TransactionMultithreadTest_Test8TestBodyEv called 1 returned 100% blocks executed 42%
function _ZN46PqxxClientTest_TransactionMultithreadTest_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN46PqxxClientTest_TransactionMultithreadTest_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN46PqxxClientTest_TransactionMultithreadTest_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  439:TEST_F(PqxxClientTest, TransactionMultithreadTest)
        1:  439-block  0
branch  0 taken 1
branch  1 taken 0
        1:  439-block  1
branch  2 taken 1
branch  3 taken 0
        1:  439-block  2
branch  4 taken 1
branch  5 taken 0
        1:  439-block  3
branch  6 taken 1
branch  7 taken 0
        1:  439-block  4
branch  8 taken 1
branch  9 taken 0
        1:  439-block  5
branch 10 taken 1
branch 11 taken 0
        1:  439-block  6
branch 12 taken 1
branch 13 taken 0
        1:  439-block  7
branch 14 taken 1
branch 15 taken 0
        1:  439-block  8
branch 16 taken 1
branch 17 taken 0
        1:  439-block  9
    $$$$$:  439-block 10
    $$$$$:  439-block 11
    $$$$$:  439-block 12
    $$$$$:  439-block 13
    $$$$$:  439-block 14
    $$$$$:  439-block 15
    $$$$$:  439-block 16
    $$$$$:  439-block 17
    $$$$$:  439-block 18
    $$$$$:  439-block 19
        1:  439-block 20
        1:  439-block 21
        1:  439-block 22
        -:  440:{
        1:  441:    std::mutex mtx;
        1:  442:    std::atomic inserting1(true), inserting2(true); // Tracks if the poster thread is still inserting data
        1:  443:    constexpr std::size_t expected_record_count = 1e5; // Expected number of rows to insert
        1:  444:    std::condition_variable cv;
        1:  445:    std::barrier barrier(2), syncer(2);
        1:  445-block  0
branch  0 taken 1
branch  1 taken 0
        1:  445-block  1
branch  2 taken 1
branch  3 taken 0
        1:  446:    std::atomic transaction_committed{false};
        1:  447:    std::atomic<bool> ready_to_listen = false;
        -:  448:    // First thread - poster: inserts records within a transaction
function _ZZN46PqxxClientTest_TransactionMultithreadTest_Test8TestBodyEvENK3$_0clEv called 1 returned 100% blocks executed 23%
        2:  449:    auto poster_worker = [&]
        -:  450:    {
        1:  451:        EXPECT_NO_THROW(db_client->start_transaction());
        1:  451-block  0
branch  0 taken 0
branch  1 taken 1
        1:  451-block  1
branch  2 taken 1
branch  3 taken 0
        1:  451-block  2
branch  4 taken 1
branch  5 taken 0
        1:  451-block  3
branch  6 taken 1
branch  7 taken 0
        1:  451-block  4
    $$$$$:  451-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  451-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  451-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  451-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  451-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  451-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  451-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  451-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  451-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  451-block 14
branch 26 never executed
branch 27 never executed
        1:  451-block 15
    $$$$$:  451-block 16
branch 28 never executed
branch 29 never executed
    $$$$$:  451-block 17
    $$$$$:  451-block 18
    $$$$$:  451-block 19
branch 30 never executed
branch 31 never executed
    $$$$$:  451-block 20
        1:  451-block 21
    $$$$$:  451-block 22
    $$$$$:  451-block 23
branch 32 never executed
branch 33 never executed
    $$$$$:  451-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  451-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  451-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  451-block 27
    $$$$$:  451-block 28
    $$$$$:  451-block 29
    $$$$$:  451-block 30
    $$$$$:  451-block 31
    $$$$$:  451-block 32
    $$$$$:  451-block 33
        -:  452:        {
        1:  453:            std::unique_lock lock(mtx);
        1:  454:            ready_to_listen = true;
        1:  455:        }
        1:  456:        cv.notify_all();
   100001:  457:        for (std::size_t i = 1; i <= expected_record_count; ++i)
        1:  457-block  0
   100001:  457-block  1
branch  0 taken 100000
branch  1 taken 1
   100000:  457-block  2
        -:  458:        {
   100000:  459:            std::vector<Record> records(1);
   100000:  459-block  0
branch  0 taken 100000
branch  1 taken 0
    $$$$$:  459-block  1
   100000:  460:            records[0].push_back(std::make_unique<Field<int32_t>>("id", i));
   100000:  460-block  0
branch  0 taken 100000
branch  1 taken 0
   100000:  460-block  1
branch  2 taken 100000
branch  3 taken 0
    $$$$$:  460-block  2
   100000:  461:            records[0].push_back(std::make_unique<Field<std::string>>("name", "Alice"));
   100000:  461-block  0
branch  0 taken 100000
branch  1 taken 0
   100000:  461-block  1
branch  2 taken 100000
branch  3 taken 0
    $$$$$:  461-block  2
   100000:  462:            records[0].push_back(std::make_unique<Field<std::string>>("description", "Here will be something"));
   100000:  462-block  0
branch  0 taken 100000
branch  1 taken 0
   100000:  462-block  1
branch  2 taken 0
branch  3 taken 100000
    $$$$$:  462-block  2
        -:  463:
   100000:  464:            EXPECT_NO_THROW(db_client->insert(test_table, std::move(records)));
   100000:  464-block  0
branch  0 taken 100000
branch  1 taken 0
   100000:  464-block  1
branch  2 taken 100000
branch  3 taken 0
   100000:  464-block  2
branch  4 taken 100000
branch  5 taken 0
   100000:  464-block  3
branch  6 taken 100000
branch  7 taken 0
   100000:  464-block  4
    $$$$$:  464-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  464-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  464-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  464-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  464-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  464-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  464-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  464-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  464-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  464-block 14
branch 26 never executed
branch 27 never executed
   100000:  464-block 15
    $$$$$:  464-block 16
branch 28 never executed
branch 29 never executed
    $$$$$:  464-block 17
    $$$$$:  464-block 18
    $$$$$:  464-block 19
branch 30 never executed
branch 31 never executed
    $$$$$:  464-block 20
   100000:  464-block 21
    $$$$$:  464-block 22
    $$$$$:  464-block 23
branch 32 never executed
branch 33 never executed
    $$$$$:  464-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  464-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  464-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  464-block 27
    $$$$$:  464-block 28
    $$$$$:  464-block 29
    $$$$$:  464-block 30
    $$$$$:  464-block 31
   100000:  465:        }
   100000:  465-block  0
    $$$$$:  465-block  1
        -:  466:
        -:  467:
        -:  468:        // Signal that inserting is done
        1:  469:        inserting1.store(false);
        1:  470:        inserting2.store(false);
        1:  471:        barrier.arrive_and_wait();
        1:  472:        EXPECT_NO_THROW(db_client->commit_transaction());
        1:  472-block  0
branch  0 taken 1
branch  1 taken 0
        1:  472-block  1
branch  2 taken 1
branch  3 taken 0
        1:  472-block  2
branch  4 taken 1
branch  5 taken 0
        1:  472-block  3
branch  6 taken 1
branch  7 taken 0
        1:  472-block  4
    $$$$$:  472-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  472-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  472-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  472-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  472-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  472-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  472-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  472-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  472-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  472-block 14
branch 26 never executed
branch 27 never executed
        1:  472-block 15
    $$$$$:  472-block 16
branch 28 never executed
branch 29 never executed
    $$$$$:  472-block 17
    $$$$$:  472-block 18
    $$$$$:  472-block 19
branch 30 never executed
branch 31 never executed
    $$$$$:  472-block 20
        1:  472-block 21
    $$$$$:  472-block 22
    $$$$$:  472-block 23
branch 32 never executed
branch 33 never executed
    $$$$$:  472-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  472-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  472-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  472-block 27
    $$$$$:  472-block 28
    $$$$$:  472-block 29
    $$$$$:  472-block 30
    $$$$$:  472-block 31
        1:  473:        transaction_committed.store(true); // Set the flag to indicate commit is done
        1:  474:    };
    $$$$$:  474-block  0
    $$$$$:  474-block  1
    $$$$$:  474-block  2
    $$$$$:  474-block  3
    $$$$$:  474-block  4
    $$$$$:  474-block  5
    $$$$$:  474-block  6
    $$$$$:  474-block  7
    $$$$$:  474-block  8
    $$$$$:  474-block  9
    $$$$$:  474-block 10
    $$$$$:  474-block 11
    $$$$$:  474-block 12
    $$$$$:  474-block 13
    $$$$$:  474-block 14
    $$$$$:  474-block 15
        1:  474-block 16
        -:  475:
        -:  476:    // Second thread - listener 1: retrieves data without a transaction
function _ZZN46PqxxClientTest_TransactionMultithreadTest_Test8TestBodyEvENK3$_1clEv called 1 returned 100% blocks executed 22%
        2:  477:    auto non_transaction_worker = [&]
        -:  478:    {
        -:  479:        {
        1:  480:            std::unique_lock lock(mtx);
function _ZZZN46PqxxClientTest_TransactionMultithreadTest_Test8TestBodyEvENK3$_1clEvENKUlvE_clEv called 2 returned 100% blocks executed 100%
        3:  481:            cv.wait(lock, [&] { return ready_to_listen.load(); });
        1:  481-block  0
branch  0 taken 1
branch  1 taken 0
        2:  481-block  1
        1:  482:        }
    $$$$$:  482-block  0
    $$$$$:  482-block  1
     2427:  483:        while (inserting1.load())
        1:  483-block  0
     2427:  483-block  1
branch  0 taken 2426
branch  1 taken 1
     2426:  483-block  2
        -:  484:        {
     2426:  485:            bool emp = true;
        -:  486:            // This thread should always successfully retrieve data, even if incomplete
     2426:  487:            EXPECT_NO_THROW({
     2426:  487-block  0
branch  0 taken 2426
branch  1 taken 0
     2426:  487-block  1
branch  2 taken 2426
branch  3 taken 0
     2426:  487-block  2
branch  4 taken 2426
branch  5 taken 0
     2426:  487-block  3
branch  6 taken 2426
branch  7 taken 0
     2426:  487-block  4
    $$$$$:  487-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  487-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  487-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  487-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  487-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  487-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  487-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  487-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  487-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  487-block 14
branch 26 never executed
branch 27 never executed
     2426:  487-block 15
    $$$$$:  487-block 16
branch 28 never executed
branch 29 never executed
    $$$$$:  487-block 17
    $$$$$:  487-block 18
    $$$$$:  487-block 19
branch 30 never executed
branch 31 never executed
    $$$$$:  487-block 20
     2426:  487-block 21
    $$$$$:  487-block 22
    $$$$$:  487-block 23
branch 32 never executed
branch 33 never executed
    $$$$$:  487-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  487-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  487-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  487-block 27
    $$$$$:  487-block 28
    $$$$$:  487-block 29
    $$$$$:  487-block 30
    $$$$$:  487-block 31
    $$$$$:  487-block 32
        -:  488:                emp = db_client->view(test_table).empty(); // Replace with actual retrieval logic
        -:  489:
        -:  490:                // Non-transactional fetch should not throw an error
        -:  491:                // Optionally, you can log or validate the number of records fetched
        -:  492:                });
     2426:  493:            EXPECT_FALSE(emp);
     2426:  493-block  0
branch  0 taken 2426
branch  1 taken 0
     2426:  493-block  1
    $$$$$:  493-block  2
branch  2 never executed
branch  3 never executed
    $$$$$:  493-block  3
branch  4 never executed
branch  5 never executed
    $$$$$:  493-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  493-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  493-block  6
    $$$$$:  493-block  7
    $$$$$:  493-block  8
    $$$$$:  493-block  9
    $$$$$:  493-block 10
        -:  494:        }
        1:  495:    };
    $$$$$:  495-block  0
    $$$$$:  495-block  1
    $$$$$:  495-block  2
    $$$$$:  495-block  3
    $$$$$:  495-block  4
    $$$$$:  495-block  5
    $$$$$:  495-block  6
    $$$$$:  495-block  7
        1:  495-block  8
        -:  496:
        -:  497:    // Third thread - listener 2: tries to retrieve data inside a transaction
function _ZZN46PqxxClientTest_TransactionMultithreadTest_Test8TestBodyEvENK3$_2clEv called 1 returned 100% blocks executed 23%
        2:  498:    auto transactional_listener_worker = [&]
        -:  499:    {
        -:  500:        {
        1:  501:            std::unique_lock<std::mutex> lock(mtx);
function _ZZZN46PqxxClientTest_TransactionMultithreadTest_Test8TestBodyEvENK3$_2clEvENKUlvE_clEv called 2 returned 100% blocks executed 100%
        3:  502:            cv.wait(lock, [&] { return ready_to_listen.load(); });
        1:  502-block  0
branch  0 taken 1
branch  1 taken 0
        2:  502-block  1
        1:  503:        }
    $$$$$:  503-block  0
    $$$$$:  503-block  1
 12210890:  504:        while (inserting2.load())
        1:  504-block  0
 12210890:  504-block  1
branch  0 taken 12210889
branch  1 taken 1
 12210889:  504-block  2
        -:  505:        {
 24421778:  506:            EXPECT_THROW(db_client->start_transaction(),
 12210889:  506-block  0
branch  0 taken 12210889
branch  1 taken 0
 12210889:  506-block  1
branch  2 taken 12210889
branch  3 taken 0
 12210889:  506-block  2
branch  4 taken 12210889
branch  5 taken 0
 12210889:  506-block  3
branch  6 taken 0
branch  7 taken 12210889
    $$$$$:  506-block  4
 12210889:  506-block  5
branch  8 taken 12210889
branch  9 taken 0
 12210889:  506-block  6
branch 10 taken 12210889
branch 11 taken 0
 12210889:  506-block  7
 12210889:  506-block  8
branch 12 taken 12210889
branch 13 taken 0
    $$$$$:  506-block  9
branch 14 never executed
branch 15 never executed
    $$$$$:  506-block 10
    $$$$$:  506-block 11
branch 16 never executed
branch 17 never executed
    $$$$$:  506-block 12
branch 18 never executed
branch 19 never executed
    $$$$$:  506-block 13
branch 20 never executed
branch 21 never executed
    $$$$$:  506-block 14
branch 22 never executed
branch 23 never executed
    $$$$$:  506-block 15
branch 24 never executed
branch 25 never executed
    $$$$$:  506-block 16
branch 26 never executed
branch 27 never executed
    $$$$$:  506-block 17
branch 28 never executed
branch 29 never executed
    $$$$$:  506-block 18
branch 30 never executed
branch 31 never executed
    $$$$$:  506-block 19
branch 32 never executed
branch 33 never executed
    $$$$$:  506-block 20
branch 34 never executed
branch 35 never executed
    $$$$$:  506-block 21
    $$$$$:  506-block 22
branch 36 never executed
branch 37 never executed
    $$$$$:  506-block 23
    $$$$$:  506-block 24
    $$$$$:  506-block 25
branch 38 never executed
branch 39 never executed
    $$$$$:  506-block 26
 12210889:  506-block 27
    $$$$$:  506-block 28
    $$$$$:  506-block 29
branch 40 never executed
branch 41 never executed
    $$$$$:  506-block 30
branch 42 never executed
branch 43 never executed
    $$$$$:  506-block 31
branch 44 never executed
branch 45 never executed
    $$$$$:  506-block 32
    $$$$$:  506-block 33
    $$$$$:  506-block 34
    $$$$$:  506-block 35
    $$$$$:  506-block 36
        -:  507:                         drug_lib::common::database::exceptions::TransactionException);
        -:  508:        }
        1:  509:        barrier.arrive_and_wait(); // Wait for all threads to reach the barrier
        -:  510:
        -:  511:        // Ensure that the transaction is committed by Thread 1 before proceeding
     3561:  512:        while (!transaction_committed.load())
        1:  512-block  0
     3561:  512-block  1
branch  0 taken 3560
branch  1 taken 1
     3560:  512-block  2
        -:  513:        {
     3560:  514:            std::this_thread::yield(); // Yield to avoid busy waiting
        -:  515:        }
        -:  516:
        -:  517:        // Now proceed with the transaction check
        1:  518:        EXPECT_NO_THROW(db_client->start_transaction());
        1:  518-block  0
branch  0 taken 1
branch  1 taken 0
        1:  518-block  1
branch  2 taken 1
branch  3 taken 0
        1:  518-block  2
branch  4 taken 1
branch  5 taken 0
        1:  518-block  3
branch  6 taken 1
branch  7 taken 0
        1:  518-block  4
    $$$$$:  518-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  518-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  518-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  518-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  518-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  518-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  518-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  518-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  518-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  518-block 14
branch 26 never executed
branch 27 never executed
        1:  518-block 15
    $$$$$:  518-block 16
branch 28 never executed
branch 29 never executed
    $$$$$:  518-block 17
    $$$$$:  518-block 18
    $$$$$:  518-block 19
branch 30 never executed
branch 31 never executed
    $$$$$:  518-block 20
        1:  518-block 21
    $$$$$:  518-block 22
    $$$$$:  518-block 23
branch 32 never executed
branch 33 never executed
    $$$$$:  518-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  518-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  518-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  518-block 27
    $$$$$:  518-block 28
    $$$$$:  518-block 29
    $$$$$:  518-block 30
    $$$$$:  518-block 31
        -:  519:
        -:  520:        // Fetch all rows inserted by the poster thread
        1:  521:        auto records = db_client->view(test_table);
        1:  522:        EXPECT_EQ(records.size(), expected_record_count);
        1:  522-block  0
branch  0 taken 1
branch  1 taken 0
        1:  522-block  1
branch  2 taken 1
branch  3 taken 0
        1:  522-block  2
    $$$$$:  522-block  3
branch  4 never executed
branch  5 never executed
    $$$$$:  522-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  522-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  522-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  522-block  7
    $$$$$:  522-block  8
    $$$$$:  522-block  9
    $$$$$:  522-block 10
        -:  523:
        1:  524:        EXPECT_NO_THROW(db_client->commit_transaction());
        1:  524-block  0
branch  0 taken 1
branch  1 taken 0
        1:  524-block  1
branch  2 taken 1
branch  3 taken 0
        1:  524-block  2
branch  4 taken 1
branch  5 taken 0
        1:  524-block  3
branch  6 taken 1
branch  7 taken 0
        1:  524-block  4
    $$$$$:  524-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  524-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  524-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  524-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  524-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  524-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  524-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  524-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  524-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  524-block 14
branch 26 never executed
branch 27 never executed
        1:  524-block 15
    $$$$$:  524-block 16
branch 28 never executed
branch 29 never executed
    $$$$$:  524-block 17
    $$$$$:  524-block 18
    $$$$$:  524-block 19
branch 30 never executed
branch 31 never executed
    $$$$$:  524-block 20
        1:  524-block 21
    $$$$$:  524-block 22
    $$$$$:  524-block 23
branch 32 never executed
branch 33 never executed
    $$$$$:  524-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  524-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  524-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  524-block 27
    $$$$$:  524-block 28
    $$$$$:  524-block 29
    $$$$$:  524-block 30
    $$$$$:  524-block 31
 12210890:  525:    };
 12210889:  525-block  0
    $$$$$:  525-block  1
    $$$$$:  525-block  2
    $$$$$:  525-block  3
    $$$$$:  525-block  4
    $$$$$:  525-block  5
    $$$$$:  525-block  6
    $$$$$:  525-block  7
    $$$$$:  525-block  8
    $$$$$:  525-block  9
    $$$$$:  525-block 10
    $$$$$:  525-block 11
    $$$$$:  525-block 12
    $$$$$:  525-block 13
    $$$$$:  525-block 14
    $$$$$:  525-block 15
    $$$$$:  525-block 16
        1:  525-block 17
    $$$$$:  525-block 18
        -:  526:
        -:  527:    // Create and launch the threads
        1:  528:    std::thread poster_thread(poster_worker);
        1:  528-block  0
branch  0 taken 1
branch  1 taken 0
        1:  529:    std::thread non_transaction_thread(non_transaction_worker);
        1:  529-block  0
branch  0 taken 1
branch  1 taken 0
        1:  530:    std::thread transactional_listener_thread(transactional_listener_worker);
        1:  530-block  0
branch  0 taken 1
branch  1 taken 0
        -:  531:
        -:  532:    // Join threads
        1:  533:    poster_thread.join();
        1:  533-block  0
branch  0 taken 1
branch  1 taken 0
        1:  534:    non_transaction_thread.join();
        1:  534-block  0
branch  0 taken 1
branch  1 taken 0
        1:  535:    transactional_listener_thread.join();
        1:  535-block  0
branch  0 taken 1
branch  1 taken 0
        1:  536:}
        1:  536-block  0
    $$$$$:  536-block  1
    $$$$$:  536-block  2
    $$$$$:  536-block  3
    $$$$$:  536-block  4
    $$$$$:  536-block  5
    $$$$$:  536-block  6
    $$$$$:  536-block  7
    $$$$$:  536-block  8
    $$$$$:  536-block  9
    $$$$$:  536-block 10
    $$$$$:  536-block 11
    $$$$$:  536-block 12
        -:  537:
function _ZN31PqxxClientTest_OrderByTest_Test8TestBodyEv called 1 returned 100% blocks executed 35%
function _ZN31PqxxClientTest_OrderByTest_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN31PqxxClientTest_OrderByTest_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN31PqxxClientTest_OrderByTest_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  538:TEST_F(PqxxClientTest, OrderByTest)
        1:  538-block  0
branch  0 taken 1
branch  1 taken 0
        1:  538-block  1
branch  2 taken 1
branch  3 taken 0
        1:  538-block  2
branch  4 taken 1
branch  5 taken 0
        1:  538-block  3
branch  6 taken 1
branch  7 taken 0
        1:  538-block  4
branch  8 taken 1
branch  9 taken 0
        1:  538-block  5
branch 10 taken 1
branch 11 taken 0
        1:  538-block  6
branch 12 taken 1
branch 13 taken 0
        1:  538-block  7
branch 14 taken 1
branch 15 taken 0
        1:  538-block  8
branch 16 taken 1
branch 17 taken 0
        1:  538-block  9
    $$$$$:  538-block 10
    $$$$$:  538-block 11
    $$$$$:  538-block 12
    $$$$$:  538-block 13
    $$$$$:  538-block 14
    $$$$$:  538-block 15
    $$$$$:  538-block 16
    $$$$$:  538-block 17
    $$$$$:  538-block 18
    $$$$$:  538-block 19
        1:  538-block 20
        1:  538-block 21
        1:  538-block 22
        -:  539:{
        -:  540:    // Add data
        1:  541:    std::vector<Record> records;
        -:  542:
        6:  543:    for (int i = 1; i <= 5; ++i)
        1:  543-block  0
        6:  543-block  1
branch  0 taken 5
branch  1 taken 1
        5:  543-block  2
        -:  544:    {
        5:  545:        Record record;
        5:  546:        record.push_back(std::make_unique<Field<int>>("id", i * (i + i % 2)));
        5:  546-block  0
branch  0 taken 5
branch  1 taken 0
        5:  546-block  1
branch  2 taken 0
branch  3 taken 5
    $$$$$:  546-block  2
        5:  547:        record.push_back(std::make_unique<Field<std::string>>("name", "User" + std::to_string(i)));
        5:  547-block  0
branch  0 taken 0
branch  1 taken 5
        5:  547-block  1
branch  2 taken 0
branch  3 taken 5
        5:  547-block  2
branch  4 taken 5
branch  5 taken 0
    $$$$$:  547-block  3
    $$$$$:  547-block  4
    $$$$$:  547-block  5
        5:  548:        record.push_back(std::make_unique<Field<std::string>>("description", ""));
        5:  548-block  0
branch  0 taken 5
branch  1 taken 0
        5:  548-block  1
branch  2 taken 5
branch  3 taken 0
    $$$$$:  548-block  2
        5:  549:        records.push_back(std::move(record));
        5:  549-block  0
branch  0 taken 5
branch  1 taken 0
        5:  550:    }
        5:  550-block  0
    $$$$$:  550-block  1
        -:  551:
        1:  552:    EXPECT_NO_THROW(db_client->insert(test_table, records));
        1:  552-block  0
branch  0 taken 1
branch  1 taken 0
        1:  552-block  1
branch  2 taken 1
branch  3 taken 0
        1:  552-block  2
branch  4 taken 1
branch  5 taken 0
        1:  552-block  3
branch  6 taken 1
branch  7 taken 0
        1:  552-block  4
branch  8 taken 1
branch  9 taken 0
        1:  552-block  5
    $$$$$:  552-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  552-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  552-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  552-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  552-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  552-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  552-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  552-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  552-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  552-block 15
branch 28 never executed
branch 29 never executed
        1:  552-block 16
    $$$$$:  552-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  552-block 18
    $$$$$:  552-block 19
    $$$$$:  552-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  552-block 21
        1:  552-block 22
    $$$$$:  552-block 23
    $$$$$:  552-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  552-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  552-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  552-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  552-block 28
    $$$$$:  552-block 29
    $$$$$:  552-block 30
    $$$$$:  552-block 31
    $$$$$:  552-block 32
    $$$$$:  552-block 33
        -:  553:
        1:  554:    Conditions conditions;
        1:  555:    conditions.add_order_by_condition(
        1:  555-block  0
branch  0 taken 1
branch  1 taken 0
    $$$$$:  555-block  1
    $$$$$:  555-block  2
    $$$$$:  555-block  3
        1:  556:        OrderCondition("id", order_type::ascending));
        1:  556-block  0
branch  0 taken 1
branch  1 taken 0
        1:  556-block  1
branch  2 taken 1
branch  3 taken 0
        1:  557:    const auto res = db_client->select(test_table, conditions);
        1:  557-block  0
branch  0 taken 1
branch  1 taken 0
        1:  558:    int32_t prev = INT_MIN;
        6:  559:    for (const auto& record : res)
        1:  559-block  0
        6:  559-block  1
branch  0 taken 1
branch  1 taken 5
        5:  559-block  2
        5:  559-block  3
        -:  560:    {
        5:  561:        EXPECT_TRUE(prev <= record[0]->as<int32_t>());
        5:  561-block  0
branch  0 taken 5
branch  1 taken 0
        5:  561-block  1
branch  2 taken 5
branch  3 taken 0
        5:  561-block  2
branch  4 taken 5
branch  5 taken 0
        5:  561-block  3
branch  6 taken 5
branch  7 taken 0
        5:  561-block  4
branch  8 taken 0
branch  9 taken 5
        5:  561-block  5
    $$$$$:  561-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  561-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  561-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  561-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  561-block 10
    $$$$$:  561-block 11
    $$$$$:  561-block 12
    $$$$$:  561-block 13
    $$$$$:  561-block 14
        5:  562:        prev = record[0]->as<int32_t>();
        5:  562-block  0
branch  0 taken 5
branch  1 taken 0
        5:  562-block  1
branch  2 taken 5
branch  3 taken 0
        -:  563:    }
        1:  564:    EXPECT_EQ(res.size(), 5);
        1:  564-block  0
branch  0 taken 1
branch  1 taken 0
        1:  564-block  1
branch  2 taken 1
branch  3 taken 0
        1:  564-block  2
branch  4 taken 0
branch  5 taken 1
        1:  564-block  3
    $$$$$:  564-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  564-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  564-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  564-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  564-block  8
    $$$$$:  564-block  9
    $$$$$:  564-block 10
    $$$$$:  564-block 11
        1:  565:}
    $$$$$:  565-block  0
    $$$$$:  565-block  1
    $$$$$:  565-block  2
    $$$$$:  565-block  3
    $$$$$:  565-block  4
    $$$$$:  565-block  5
    $$$$$:  565-block  6
    $$$$$:  565-block  7
    $$$$$:  565-block  8
    $$$$$:  565-block  9
    $$$$$:  565-block 10
    $$$$$:  565-block 11
    $$$$$:  565-block 12
    $$$$$:  565-block 13
    $$$$$:  565-block 14
    $$$$$:  565-block 15
    $$$$$:  565-block 16
        1:  565-block 17
    $$$$$:  565-block 18
    $$$$$:  565-block 19
    $$$$$:  565-block 20
    $$$$$:  565-block 21
        -:  566:
function _ZN30PqxxClientTest_PagingTest_Test8TestBodyEv called 1 returned 100% blocks executed 33%
function _ZN30PqxxClientTest_PagingTest_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN30PqxxClientTest_PagingTest_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN30PqxxClientTest_PagingTest_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  567:TEST_F(PqxxClientTest, PagingTest)
        1:  567-block  0
branch  0 taken 1
branch  1 taken 0
        1:  567-block  1
branch  2 taken 1
branch  3 taken 0
        1:  567-block  2
branch  4 taken 1
branch  5 taken 0
        1:  567-block  3
branch  6 taken 1
branch  7 taken 0
        1:  567-block  4
branch  8 taken 1
branch  9 taken 0
        1:  567-block  5
branch 10 taken 1
branch 11 taken 0
        1:  567-block  6
branch 12 taken 1
branch 13 taken 0
        1:  567-block  7
branch 14 taken 1
branch 15 taken 0
        1:  567-block  8
branch 16 taken 1
branch 17 taken 0
        1:  567-block  9
    $$$$$:  567-block 10
    $$$$$:  567-block 11
    $$$$$:  567-block 12
    $$$$$:  567-block 13
    $$$$$:  567-block 14
    $$$$$:  567-block 15
    $$$$$:  567-block 16
    $$$$$:  567-block 17
    $$$$$:  567-block 18
    $$$$$:  567-block 19
        1:  567-block 20
        1:  567-block 21
        1:  567-block 22
        -:  568:{
        -:  569:    // Add data
        1:  570:    std::vector<Record> records;
        -:  571:
      501:  572:    for (int i = 1; i <= 500; ++i)
        1:  572-block  0
      501:  572-block  1
branch  0 taken 500
branch  1 taken 1
      500:  572-block  2
        -:  573:    {
      500:  574:        Record record;
      500:  575:        record.push_back(std::make_unique<Field<int>>("id", i));
      500:  575-block  0
branch  0 taken 500
branch  1 taken 0
      500:  575-block  1
branch  2 taken 0
branch  3 taken 500
    $$$$$:  575-block  2
      500:  576:        record.push_back(std::make_unique<Field<std::string>>("name", "User" + std::to_string(i)));
      500:  576-block  0
branch  0 taken 0
branch  1 taken 500
      500:  576-block  1
branch  2 taken 0
branch  3 taken 500
      500:  576-block  2
branch  4 taken 500
branch  5 taken 0
    $$$$$:  576-block  3
    $$$$$:  576-block  4
    $$$$$:  576-block  5
      500:  577:        record.push_back(std::make_unique<Field<std::string>>("description", ""));
      500:  577-block  0
branch  0 taken 500
branch  1 taken 0
      500:  577-block  1
branch  2 taken 500
branch  3 taken 0
    $$$$$:  577-block  2
      500:  578:        records.push_back(std::move(record));
      500:  578-block  0
branch  0 taken 500
branch  1 taken 0
      500:  579:    }
      500:  579-block  0
    $$$$$:  579-block  1
        -:  580:
        1:  581:    EXPECT_NO_THROW(db_client->insert(test_table, records));
        1:  581-block  0
branch  0 taken 1
branch  1 taken 0
        1:  581-block  1
branch  2 taken 1
branch  3 taken 0
        1:  581-block  2
branch  4 taken 1
branch  5 taken 0
        1:  581-block  3
branch  6 taken 1
branch  7 taken 0
        1:  581-block  4
branch  8 taken 1
branch  9 taken 0
        1:  581-block  5
    $$$$$:  581-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  581-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  581-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  581-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  581-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  581-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  581-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  581-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  581-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  581-block 15
branch 28 never executed
branch 29 never executed
        1:  581-block 16
    $$$$$:  581-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  581-block 18
    $$$$$:  581-block 19
    $$$$$:  581-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  581-block 21
        1:  581-block 22
    $$$$$:  581-block 23
    $$$$$:  581-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  581-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  581-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  581-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  581-block 28
    $$$$$:  581-block 29
    $$$$$:  581-block 30
    $$$$$:  581-block 31
    $$$$$:  581-block 32
    $$$$$:  581-block 33
        -:  582:
        1:  583:    Conditions conditions;
        1:  584:    PageCondition page_condition(150);
        1:  584-block  0
branch  0 taken 1
branch  1 taken 0
        -:  585:
        1:  586:    conditions.set_page_condition(page_condition);
        1:  586-block  0
branch  0 taken 1
branch  1 taken 0
        1:  587:    auto res = db_client->view(test_table, conditions);
        1:  587-block  0
branch  0 taken 1
branch  1 taken 0
        1:  588:    EXPECT_EQ(res.size(), 150);
        1:  588-block  0
branch  0 taken 1
branch  1 taken 0
        1:  588-block  1
branch  2 taken 1
branch  3 taken 0
        1:  588-block  2
branch  4 taken 0
branch  5 taken 1
        1:  588-block  3
    $$$$$:  588-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  588-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  588-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  588-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  588-block  8
    $$$$$:  588-block  9
    $$$$$:  588-block 10
    $$$$$:  588-block 11
        1:  589:    page_condition.set_page_number(500 / 150 + 1);
        1:  589-block  0
branch  0 taken 1
branch  1 taken 0
        1:  590:    conditions.set_page_condition(page_condition);
        1:  590-block  0
branch  0 taken 1
branch  1 taken 0
        1:  591:    res = db_client->view(test_table, conditions);
        1:  591-block  0
branch  0 taken 1
branch  1 taken 0
        1:  592:    EXPECT_EQ(res.size(), 50);
        1:  592-block  0
branch  0 taken 1
branch  1 taken 0
        1:  592-block  1
branch  2 taken 1
branch  3 taken 0
        1:  592-block  2
branch  4 taken 0
branch  5 taken 1
        1:  592-block  3
    $$$$$:  592-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  592-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  592-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  592-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  592-block  8
    $$$$$:  592-block  9
    $$$$$:  592-block 10
    $$$$$:  592-block 11
        1:  593:}
    $$$$$:  593-block  0
    $$$$$:  593-block  1
    $$$$$:  593-block  2
    $$$$$:  593-block  3
    $$$$$:  593-block  4
    $$$$$:  593-block  5
    $$$$$:  593-block  6
    $$$$$:  593-block  7
    $$$$$:  593-block  8
    $$$$$:  593-block  9
    $$$$$:  593-block 10
    $$$$$:  593-block 11
    $$$$$:  593-block 12
    $$$$$:  593-block 13
        1:  593-block 14
    $$$$$:  593-block 15
    $$$$$:  593-block 16
    $$$$$:  593-block 17
    $$$$$:  593-block 18
        -:  594:
        -:  595:// ------------------------------ SPEED TESTS ------------------------------//
        -:  596:
function _ZN35PqxxClientTest_InsertSpeedTest_Test8TestBodyEv called 1 returned 100% blocks executed 35%
function _ZN35PqxxClientTest_InsertSpeedTest_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN35PqxxClientTest_InsertSpeedTest_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN35PqxxClientTest_InsertSpeedTest_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  597:TEST_F(PqxxClientTest, InsertSpeedTest)
        1:  597-block  0
branch  0 taken 1
branch  1 taken 0
        1:  597-block  1
branch  2 taken 1
branch  3 taken 0
        1:  597-block  2
branch  4 taken 1
branch  5 taken 0
        1:  597-block  3
branch  6 taken 1
branch  7 taken 0
        1:  597-block  4
branch  8 taken 1
branch  9 taken 0
        1:  597-block  5
branch 10 taken 1
branch 11 taken 0
        1:  597-block  6
branch 12 taken 1
branch 13 taken 0
        1:  597-block  7
branch 14 taken 1
branch 15 taken 0
        1:  597-block  8
branch 16 taken 1
branch 17 taken 0
        1:  597-block  9
    $$$$$:  597-block 10
    $$$$$:  597-block 11
    $$$$$:  597-block 12
    $$$$$:  597-block 13
    $$$$$:  597-block 14
    $$$$$:  597-block 15
    $$$$$:  597-block 16
    $$$$$:  597-block 17
    $$$$$:  597-block 18
    $$$$$:  597-block 19
        1:  597-block 20
        1:  597-block 21
        1:  597-block 22
        -:  598:{
        -:  599:    // Create sample data
        1:  600:    std::vector<Record> records;
        1:  601:    constexpr uint32_t flush = 1 << 14;
        1:  602:    constexpr uint32_t limit_ = flush * 8;
        1:  603:    records.reserve(flush);
        1:  603-block  0
branch  0 taken 1
branch  1 taken 0
        1:  604:    drug_lib::common::Stopwatch<> stopwatch;
        1:  604-block  0
branch  0 taken 1
branch  1 taken 0
        1:  604-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  604-block  2
    $$$$$:  604-block  3
    $$$$$:  604-block  4
        1:  605:    stopwatch.start();
        1:  605-block  0
branch  0 taken 1
branch  1 taken 0
    $$$$$:  605-block  1
        1:  606:    stopwatch.set_countdown_from_prev(true);
        1:  606-block  0
branch  0 taken 1
branch  1 taken 0
   131073:  607:    for (uint32_t i = 1; i <= limit_; i++)
        1:  607-block  0
   131073:  607-block  1
branch  0 taken 1
branch  1 taken 131072
   131072:  607-block  2
        -:  608:    {
   131072:  609:        Record record1;
   131072:  610:        record1.push_back(std::make_unique<Field<int32_t>>("id", i));
   131072:  610-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  610-block  1
branch  2 taken 131072
branch  3 taken 0
    $$$$$:  610-block  2
   131072:  611:        record1.push_back(std::make_unique<Field<std::string>>("name", "Alice"));
   131072:  611-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  611-block  1
branch  2 taken 131072
branch  3 taken 0
    $$$$$:  611-block  2
   131072:  612:        record1.push_back(std::make_unique<Field<std::string>>("description", "P"));
   131072:  612-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  612-block  1
branch  2 taken 131072
branch  3 taken 0
    $$$$$:  612-block  2
   131072:  613:        records.push_back(std::move(record1));
   131072:  613-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  614:        if (records.size() >= flush)
   131072:  614-block  0
branch  0 taken 131064
branch  1 taken 8
        -:  615:        {
        8:  616:            EXPECT_NO_THROW(db_client->insert(test_table, std::move(records)));
        8:  616-block  0
branch  0 taken 8
branch  1 taken 0
        8:  616-block  1
branch  2 taken 8
branch  3 taken 0
        8:  616-block  2
branch  4 taken 8
branch  5 taken 0
        8:  616-block  3
branch  6 taken 8
branch  7 taken 0
        8:  616-block  4
branch  8 taken 8
branch  9 taken 0
        8:  616-block  5
    $$$$$:  616-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  616-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  616-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  616-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  616-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  616-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  616-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  616-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  616-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  616-block 15
branch 28 never executed
branch 29 never executed
        8:  616-block 16
    $$$$$:  616-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  616-block 18
    $$$$$:  616-block 19
    $$$$$:  616-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  616-block 21
        8:  616-block 22
    $$$$$:  616-block 23
    $$$$$:  616-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  616-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  616-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  616-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  616-block 28
    $$$$$:  616-block 29
    $$$$$:  616-block 30
    $$$$$:  616-block 31
    $$$$$:  616-block 32
    $$$$$:  616-block 33
        8:  617:            ++stopwatch;
        8:  617-block  0
branch  0 taken 8
branch  1 taken 0
        8:  618:            records.clear();
        8:  619:        }
        8:  619-block  0
   131072:  620:    }
   131072:  620-block  0
    $$$$$:  620-block  1
        1:  621:    stopwatch.finish();
        1:  622:    const auto results = db_client->select(test_table);
        1:  622-block  0
branch  0 taken 1
branch  1 taken 0
        -:  623:
        1:  624:    EXPECT_EQ(results.size(), limit_);
        1:  624-block  0
branch  0 taken 1
branch  1 taken 0
        1:  624-block  1
branch  2 taken 1
branch  3 taken 0
        1:  624-block  2
branch  4 taken 0
branch  5 taken 1
        1:  624-block  3
    $$$$$:  624-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  624-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  624-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  624-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  624-block  8
    $$$$$:  624-block  9
    $$$$$:  624-block 10
    $$$$$:  624-block 11
        1:  625:}
    $$$$$:  625-block  0
    $$$$$:  625-block  1
    $$$$$:  625-block  2
    $$$$$:  625-block  3
    $$$$$:  625-block  4
    $$$$$:  625-block  5
    $$$$$:  625-block  6
    $$$$$:  625-block  7
    $$$$$:  625-block  8
    $$$$$:  625-block  9
    $$$$$:  625-block 10
        1:  625-block 11
    $$$$$:  625-block 12
    $$$$$:  625-block 13
    $$$$$:  625-block 14
    $$$$$:  625-block 15
        -:  626:
function _ZN46PqxxClientTest_InsertMultithreadSpeedTest_Test8TestBodyEv called 1 returned 100% blocks executed 51%
function _ZN46PqxxClientTest_InsertMultithreadSpeedTest_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN46PqxxClientTest_InsertMultithreadSpeedTest_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN46PqxxClientTest_InsertMultithreadSpeedTest_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  627:TEST_F(PqxxClientTest, InsertMultithreadSpeedTest)
        1:  627-block  0
branch  0 taken 1
branch  1 taken 0
        1:  627-block  1
branch  2 taken 1
branch  3 taken 0
        1:  627-block  2
branch  4 taken 1
branch  5 taken 0
        1:  627-block  3
branch  6 taken 1
branch  7 taken 0
        1:  627-block  4
branch  8 taken 1
branch  9 taken 0
        1:  627-block  5
branch 10 taken 1
branch 11 taken 0
        1:  627-block  6
branch 12 taken 1
branch 13 taken 0
        1:  627-block  7
branch 14 taken 1
branch 15 taken 0
        1:  627-block  8
branch 16 taken 1
branch 17 taken 0
        1:  627-block  9
    $$$$$:  627-block 10
    $$$$$:  627-block 11
    $$$$$:  627-block 12
    $$$$$:  627-block 13
    $$$$$:  627-block 14
    $$$$$:  627-block 15
    $$$$$:  627-block 16
    $$$$$:  627-block 17
    $$$$$:  627-block 18
    $$$$$:  627-block 19
        1:  627-block 20
        1:  627-block 21
        1:  627-block 22
        -:  628:{
        1:  629:    drug_lib::common::Stopwatch<> stopwatch;
        1:  629-block  0
branch  0 taken 1
branch  1 taken 0
        1:  629-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  629-block  2
    $$$$$:  629-block  3
    $$$$$:  629-block  4
    $$$$$:  629-block  5
        1:  630:    constexpr uint32_t flush = 1 << 14; // Number of records per flush
        1:  631:    constexpr uint32_t limit_ = flush * 2; // Total number of records each thread should handle
        1:  632:    constexpr uint32_t thread_count = 4; // Number of threads to use
        -:  633:
        -:  634:    // Worker function to insert records in parallel
function _ZZN46PqxxClientTest_InsertMultithreadSpeedTest_Test8TestBodyEvENK3$_0clEi called 4 returned 60250% blocks executed 34%
        5:  635:    auto poster_worker = [&](const int s)
        -:  636:    {
        4:  637:        std::vector<Record> records;
        4:  638:        records.reserve(flush); // Reserve space for records to avoid reallocations
        4:  638-block  0
branch  0 taken 4
branch  1 taken 0
        -:  639:
        -:  640:        // stopwatch.flag("Thread " + std::to_string(s) + " started");
        -:  641:
        -:  642:        // Each thread inserts records with step `thread_count` (to avoid overlapping IDs)
   126271:  643:        for (uint32_t i = s; i <= limit_ * thread_count; i += thread_count)
        4:  643-block  0
   131091:  643-block  1
branch  0 taken 128681
branch  1 taken 2410
   126267:  643-block  2
        -:  644:        {
   128681:  645:            Record record1;
   128681:  646:            record1.push_back(std::make_unique<Field<int32_t>>("id", i));
   128681:  646-block  0
branch  0 taken 127442
branch  1 taken 1239
   127442:  646-block  1
branch  2 taken 127442
branch  3 taken 0
    $$$$$:  646-block  2
   127442:  647:            record1.push_back(std::make_unique<Field<std::string>>("name", "Alice"));
   127442:  647-block  0
branch  0 taken 127439
branch  1 taken 3
   127439:  647-block  1
branch  2 taken 127439
branch  3 taken 0
    $$$$$:  647-block  2
   127439:  648:            record1.push_back(std::make_unique<Field<std::string>>("description", "P"));
   127503:  648-block  0
branch  0 taken 127471
branch  1 taken 32
   127471:  648-block  1
branch  2 taken 127471
branch  3 taken 0
    $$$$$:  648-block  2
   127471:  649:            records.push_back(std::move(record1));
   127471:  649-block  0
branch  0 taken 126267
branch  1 taken 1204
        -:  650:
        -:  651:            // Insert the records into the database in batches when flush limit is reached
   126267:  652:            if (records.size() >= flush)
   126267:  652-block  0
branch  0 taken 126259
branch  1 taken 8
        -:  653:            {
        8:  654:                EXPECT_NO_THROW(db_client->insert(test_table, std::move(records)));
        8:  654-block  0
branch  0 taken 8
branch  1 taken 0
        8:  654-block  1
branch  2 taken 8
branch  3 taken 0
        8:  654-block  2
branch  4 taken 8
branch  5 taken 0
        8:  654-block  3
branch  6 taken 8
branch  7 taken 0
        8:  654-block  4
    $$$$$:  654-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  654-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  654-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  654-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  654-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  654-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  654-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  654-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  654-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  654-block 14
branch 26 never executed
branch 27 never executed
        8:  654-block 15
    $$$$$:  654-block 16
branch 28 never executed
branch 29 never executed
    $$$$$:  654-block 17
    $$$$$:  654-block 18
    $$$$$:  654-block 19
branch 30 never executed
branch 31 never executed
    $$$$$:  654-block 20
        8:  654-block 21
    $$$$$:  654-block 22
    $$$$$:  654-block 23
branch 32 never executed
branch 33 never executed
    $$$$$:  654-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  654-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  654-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  654-block 27
    $$$$$:  654-block 28
    $$$$$:  654-block 29
    $$$$$:  654-block 30
    $$$$$:  654-block 31
    $$$$$:  654-block 32
        8:  655:                records.clear();
        8:  656:            }
        8:  656-block  0
   126267:  657:        }
   126267:  657-block  0
    $$$$$:  657-block  1
        -:  658:
        -:  659:        // stopwatch.flag("Thread " + std::to_string(s) + " finished");
     4888:  660:    };
    $$$$$:  660-block  0
    $$$$$:  660-block  1
    $$$$$:  660-block  2
    $$$$$:  660-block  3
    $$$$$:  660-block  4
    $$$$$:  660-block  5
    $$$$$:  660-block  6
     2410:  660-block  7
    $$$$$:  660-block  8
    $$$$$:  660-block  9
        -:  661:
        -:  662:    // Launch threads
        1:  663:    stopwatch.start("Threading launch: 4 threads");
        1:  663-block  0
branch  0 taken 1
branch  1 taken 0
    $$$$$:  663-block  1
        1:  664:    std::vector<std::thread> threads;
        1:  665:    threads.reserve(thread_count);
        1:  665-block  0
branch  0 taken 1
branch  1 taken 0
        5:  666:    for (int t = 0; t < thread_count; ++t)
        1:  666-block  0
        5:  666-block  1
branch  0 taken 1
branch  1 taken 4
        4:  666-block  2
        -:  667:    {
        4:  668:        threads.emplace_back(poster_worker, t); // Each thread handles a different starting point
        4:  668-block  0
branch  0 taken 4
branch  1 taken 0
        4:  669:    }
        4:  669-block  0
        -:  670:
        -:  671:    // Join threads
        5:  672:    for (auto& thread : threads)
        1:  672-block  0
        5:  672-block  1
branch  0 taken 1
branch  1 taken 4
        4:  672-block  2
        4:  672-block  3
        -:  673:    {
        4:  674:        thread.join();
        4:  674-block  0
branch  0 taken 4
branch  1 taken 0
        -:  675:    }
        1:  676:    stopwatch.flag("Threading finished: 4 threads");
        1:  676-block  0
branch  0 taken 1
branch  1 taken 0
        -:  677:    // Fetch the records from the database
        1:  678:    const auto results = db_client->view(test_table);
        1:  678-block  0
branch  0 taken 1
branch  1 taken 0
        1:  679:    stopwatch.finish();
        -:  680:
        -:  681:    // Check that the correct number of records were inserted
        1:  682:    EXPECT_EQ(results.size(), limit_ * thread_count);
        1:  682-block  0
branch  0 taken 1
branch  1 taken 0
        1:  682-block  1
branch  2 taken 1
branch  3 taken 0
        1:  682-block  2
branch  4 taken 0
branch  5 taken 1
        1:  682-block  3
    $$$$$:  682-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  682-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  682-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  682-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  682-block  8
    $$$$$:  682-block  9
    $$$$$:  682-block 10
    $$$$$:  682-block 11
        1:  683:}
    $$$$$:  683-block  0
    $$$$$:  683-block  1
    $$$$$:  683-block  2
    $$$$$:  683-block  3
        1:  683-block  4
    $$$$$:  683-block  5
    $$$$$:  683-block  6
    $$$$$:  683-block  7
        -:  684:
function _ZN62PqxxClientTest_InsertMultithreadSpeedTestWithDropppingFts_Test8TestBodyEv called 1 returned 100% blocks executed 41%
function _ZN62PqxxClientTest_InsertMultithreadSpeedTestWithDropppingFts_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN62PqxxClientTest_InsertMultithreadSpeedTestWithDropppingFts_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN62PqxxClientTest_InsertMultithreadSpeedTestWithDropppingFts_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  685:TEST_F(PqxxClientTest, InsertMultithreadSpeedTestWithDropppingFts)
        1:  685-block  0
branch  0 taken 1
branch  1 taken 0
        1:  685-block  1
branch  2 taken 1
branch  3 taken 0
        1:  685-block  2
branch  4 taken 1
branch  5 taken 0
        1:  685-block  3
branch  6 taken 1
branch  7 taken 0
        1:  685-block  4
branch  8 taken 1
branch  9 taken 0
        1:  685-block  5
branch 10 taken 1
branch 11 taken 0
        1:  685-block  6
branch 12 taken 1
branch 13 taken 0
        1:  685-block  7
branch 14 taken 1
branch 15 taken 0
        1:  685-block  8
branch 16 taken 1
branch 17 taken 0
        1:  685-block  9
    $$$$$:  685-block 10
    $$$$$:  685-block 11
    $$$$$:  685-block 12
    $$$$$:  685-block 13
    $$$$$:  685-block 14
    $$$$$:  685-block 15
    $$$$$:  685-block 16
    $$$$$:  685-block 17
    $$$$$:  685-block 18
    $$$$$:  685-block 19
        1:  685-block 20
        1:  685-block 21
        1:  685-block 22
        -:  686:{
        1:  687:    std::vector<std::shared_ptr<FieldBase>> fts_fields;
        1:  688:    fts_fields.emplace_back(std::make_shared<Field<std::string>>("name", ""));
        1:  688-block  0
branch  0 taken 1
branch  1 taken 0
        1:  688-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  688-block  2
        1:  689:    fts_fields.emplace_back(std::make_shared<Field<std::string>>("description", ""));
        1:  689-block  0
branch  0 taken 1
branch  1 taken 0
        1:  689-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  689-block  2
        -:  690:
        -:  691:
        1:  692:    drug_lib::common::Stopwatch<> stopwatch;
        1:  692-block  0
branch  0 taken 1
branch  1 taken 0
        1:  692-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  692-block  2
    $$$$$:  692-block  3
    $$$$$:  692-block  4
        1:  693:    constexpr uint32_t flush = 1 << 14; // Number of records per flush
        1:  694:    constexpr uint32_t limit_ = flush * 8; // Total number of records each thread should handle
        1:  695:    db_client->drop_fts_index(test_table);
        1:  695-block  0
branch  0 taken 1
branch  1 taken 0
        1:  696:    std::vector<Record> records;
        1:  697:    records.reserve(limit_); // Reserve space for records to avoid reallocations
        1:  697-block  0
branch  0 taken 1
branch  1 taken 0
   131073:  698:    for (uint32_t i = 0; i < limit_; i++)
        1:  698-block  0
   131073:  698-block  1
branch  0 taken 131072
branch  1 taken 1
   131072:  698-block  2
        -:  699:    {
   131072:  700:        Record record1;
   131072:  701:        record1.push_back(std::make_unique<Field<int32_t>>("id", i));
   131072:  701-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  701-block  1
branch  2 taken 131072
branch  3 taken 0
    $$$$$:  701-block  2
   131072:  702:        record1.push_back(std::make_unique<Field<std::string>>("name", "Alice"));
   131072:  702-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  702-block  1
branch  2 taken 0
branch  3 taken 131072
    $$$$$:  702-block  2
   131072:  703:        record1.push_back(std::make_unique<Field<std::string>>("description", "Pers" + std::to_string(i % 3)));
   131072:  703-block  0
branch  0 taken 0
branch  1 taken 131072
   131072:  703-block  1
branch  2 taken 0
branch  3 taken 131072
   131072:  703-block  2
branch  4 taken 131072
branch  5 taken 0
    $$$$$:  703-block  3
    $$$$$:  703-block  4
    $$$$$:  703-block  5
   131072:  704:        records.push_back(std::move(record1));
   131072:  704-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  705:    }
   131072:  705-block  0
    $$$$$:  705-block  1
        1:  706:    stopwatch.start("Multithreading insert with dropping fts");
        1:  706-block  0
branch  0 taken 1
branch  1 taken 0
    $$$$$:  706-block  1
        1:  707:    stopwatch.flag("Threading launch: 6 threads");
        1:  707-block  0
branch  0 taken 1
branch  1 taken 0
        -:  708:    // stopwatch.flag("Thread " + std::to_string(s) + " finished");
        1:  709:    const std::shared_ptr<PqxxClient> db_client_n = std::dynamic_pointer_cast<PqxxClient>(db_client);
        1:  710:    utilities::bulk_insertion(db_client_n, test_table, std::move(records), flush, 6);
        1:  710-block  0
branch  0 taken 1
branch  1 taken 0
        1:  711:    stopwatch.flag("Threading finished: 6 threads");
        1:  711-block  0
branch  0 taken 1
branch  1 taken 0
        -:  712:    // Fetch the records from the database
        1:  713:    const auto results = db_client->view(test_table);
        1:  713-block  0
branch  0 taken 1
branch  1 taken 0
        1:  714:    stopwatch.flag("Viewed");
        1:  714-block  0
branch  0 taken 1
branch  1 taken 0
        -:  715:    // Check that the correct number of records were inserted
        1:  716:    EXPECT_EQ(results.size(), limit_);
        1:  716-block  0
branch  0 taken 1
branch  1 taken 0
        1:  716-block  1
branch  2 taken 1
branch  3 taken 0
        1:  716-block  2
branch  4 taken 0
branch  5 taken 1
        1:  716-block  3
    $$$$$:  716-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  716-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  716-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  716-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  716-block  8
    $$$$$:  716-block  9
    $$$$$:  716-block 10
    $$$$$:  716-block 11
        1:  717:    Conditions conditions;
        1:  718:    conditions.add_pattern_condition(PatternCondition("Pers2"));
        1:  718-block  0
branch  0 taken 1
branch  1 taken 0
        1:  718-block  1
branch  2 taken 1
branch  3 taken 0
        1:  718-block  2
branch  4 taken 1
branch  5 taken 0
    $$$$$:  718-block  3
    $$$$$:  718-block  4
    $$$$$:  718-block  5
        1:  719:    const auto fts_res = db_client->select(test_table, conditions);
        1:  719-block  0
branch  0 taken 1
branch  1 taken 0
        1:  720:    stopwatch.finish();
        1:  721:    EXPECT_EQ(fts_res.size(), limit_/3);
        1:  721-block  0
branch  0 taken 1
branch  1 taken 0
        1:  721-block  1
branch  2 taken 1
branch  3 taken 0
        1:  721-block  2
branch  4 taken 0
branch  5 taken 1
        1:  721-block  3
    $$$$$:  721-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  721-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  721-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  721-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  721-block  8
    $$$$$:  721-block  9
    $$$$$:  721-block 10
    $$$$$:  721-block 11
        1:  722:}
    $$$$$:  722-block  0
    $$$$$:  722-block  1
    $$$$$:  722-block  2
    $$$$$:  722-block  3
    $$$$$:  722-block  4
    $$$$$:  722-block  5
    $$$$$:  722-block  6
    $$$$$:  722-block  7
    $$$$$:  722-block  8
    $$$$$:  722-block  9
    $$$$$:  722-block 10
    $$$$$:  722-block 11
    $$$$$:  722-block 12
    $$$$$:  722-block 13
    $$$$$:  722-block 14
    $$$$$:  722-block 15
        1:  722-block 16
    $$$$$:  722-block 17
    $$$$$:  722-block 18
    $$$$$:  722-block 19
    $$$$$:  722-block 20
    $$$$$:  722-block 21
    $$$$$:  722-block 22
    $$$$$:  722-block 23
    $$$$$:  722-block 24
        -:  723:
function _ZN35PqxxClientTest_SelectSpeedTest_Test8TestBodyEv called 1 returned 100% blocks executed 35%
function _ZN35PqxxClientTest_SelectSpeedTest_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN35PqxxClientTest_SelectSpeedTest_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN35PqxxClientTest_SelectSpeedTest_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  724:TEST_F(PqxxClientTest, SelectSpeedTest)
        1:  724-block  0
branch  0 taken 1
branch  1 taken 0
        1:  724-block  1
branch  2 taken 1
branch  3 taken 0
        1:  724-block  2
branch  4 taken 1
branch  5 taken 0
        1:  724-block  3
branch  6 taken 1
branch  7 taken 0
        1:  724-block  4
branch  8 taken 1
branch  9 taken 0
        1:  724-block  5
branch 10 taken 1
branch 11 taken 0
        1:  724-block  6
branch 12 taken 1
branch 13 taken 0
        1:  724-block  7
branch 14 taken 1
branch 15 taken 0
        1:  724-block  8
branch 16 taken 1
branch 17 taken 0
        1:  724-block  9
    $$$$$:  724-block 10
    $$$$$:  724-block 11
    $$$$$:  724-block 12
    $$$$$:  724-block 13
    $$$$$:  724-block 14
    $$$$$:  724-block 15
    $$$$$:  724-block 16
    $$$$$:  724-block 17
    $$$$$:  724-block 18
    $$$$$:  724-block 19
        1:  724-block 20
        1:  724-block 21
        1:  724-block 22
        -:  725:{
        -:  726:    // Create sample data
        1:  727:    std::vector<Record> records;
        1:  728:    constexpr uint32_t flush = 1 << 14;
        1:  729:    constexpr uint32_t limit_ = flush * 8;
        1:  730:    records.reserve(flush);
        1:  730-block  0
branch  0 taken 1
branch  1 taken 0
        -:  731:
   131073:  732:    for (uint32_t i = 1; i <= limit_; i++)
        1:  732-block  0
   131073:  732-block  1
branch  0 taken 131072
branch  1 taken 1
   131072:  732-block  2
        -:  733:    {
   131072:  734:        Record record1;
   131072:  735:        record1.push_back(std::make_unique<Field<int32_t>>("id", i));
   131072:  735-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  735-block  1
branch  2 taken 131072
branch  3 taken 0
    $$$$$:  735-block  2
   131072:  736:        record1.push_back(std::make_unique<Field<std::string>>("name", "Alice"));
   131072:  736-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  736-block  1
branch  2 taken 0
branch  3 taken 131072
    $$$$$:  736-block  2
   131072:  737:        record1.push_back(std::make_unique<Field<std::string>>("description", "Pers" + std::to_string(i)));
   131072:  737-block  0
branch  0 taken 0
branch  1 taken 131072
   131072:  737-block  1
branch  2 taken 0
branch  3 taken 131072
   131072:  737-block  2
branch  4 taken 131072
branch  5 taken 0
    $$$$$:  737-block  3
    $$$$$:  737-block  4
    $$$$$:  737-block  5
   131072:  738:        records.push_back(std::move(record1));
   131072:  738-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  739:        if (records.size() >= flush)
   131072:  739-block  0
branch  0 taken 131064
branch  1 taken 8
        -:  740:        {
        8:  741:            EXPECT_NO_THROW(db_client->insert(test_table, std::move(records)));
        8:  741-block  0
branch  0 taken 8
branch  1 taken 0
        8:  741-block  1
branch  2 taken 8
branch  3 taken 0
        8:  741-block  2
branch  4 taken 8
branch  5 taken 0
        8:  741-block  3
branch  6 taken 8
branch  7 taken 0
        8:  741-block  4
branch  8 taken 8
branch  9 taken 0
        8:  741-block  5
    $$$$$:  741-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  741-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  741-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  741-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  741-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  741-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  741-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  741-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  741-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  741-block 15
branch 28 never executed
branch 29 never executed
        8:  741-block 16
    $$$$$:  741-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  741-block 18
    $$$$$:  741-block 19
    $$$$$:  741-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  741-block 21
        8:  741-block 22
    $$$$$:  741-block 23
    $$$$$:  741-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  741-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  741-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  741-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  741-block 28
    $$$$$:  741-block 29
    $$$$$:  741-block 30
    $$$$$:  741-block 31
    $$$$$:  741-block 32
    $$$$$:  741-block 33
        8:  742:            records.clear();
        8:  743:        }
        8:  743-block  0
   131072:  744:    }
   131072:  744-block  0
    $$$$$:  744-block  1
        1:  745:    drug_lib::common::Stopwatch<> stopwatch;
        1:  745-block  0
branch  0 taken 1
branch  1 taken 0
        1:  745-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  745-block  2
    $$$$$:  745-block  3
    $$$$$:  745-block  4
        1:  746:    stopwatch.start("Selecting with ready fields");
        1:  746-block  0
branch  0 taken 1
branch  1 taken 0
    $$$$$:  746-block  1
        1:  747:    stopwatch.set_countdown_from_prev(true);
        1:  747-block  0
branch  0 taken 1
branch  1 taken 0
        -:  748:
        1:  749:    auto results = db_client->select(test_table);
        1:  749-block  0
branch  0 taken 1
branch  1 taken 0
        1:  750:    EXPECT_EQ(results.size(), limit_);
        1:  750-block  0
branch  0 taken 1
branch  1 taken 0
        1:  750-block  1
branch  2 taken 1
branch  3 taken 0
        1:  750-block  2
branch  4 taken 0
branch  5 taken 1
        1:  750-block  3
    $$$$$:  750-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  750-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  750-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  750-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  750-block  8
    $$$$$:  750-block  9
    $$$$$:  750-block 10
    $$$$$:  750-block 11
        1:  751:    stopwatch.flag("Select all: " + std::to_string(limit_));
        1:  751-block  0
branch  0 taken 1
branch  1 taken 0
        1:  751-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  751-block  2
    $$$$$:  751-block  3
        1:  752:    Conditions conditions;
        1:  753:    constexpr int32_t a = 1, b = 30;
        1:  754:    conditions.add_field_condition(FieldCondition(
        1:  754-block  0
branch  0 taken 1
branch  1 taken 0
        1:  754-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  754-block  2
    $$$$$:  754-block  3
    $$$$$:  754-block  4
    $$$$$:  754-block  5
        1:  755:        std::make_unique<Field<int32_t>>("id", 0),
        1:  755-block  0
branch  0 taken 1
branch  1 taken 0
        1:  756:        ">=",
        1:  756-block  0
branch  0 taken 1
branch  1 taken 0
        1:  757:        std::make_unique<Field<int32_t>>("", a)
        1:  757-block  0
branch  0 taken 1
branch  1 taken 0
        -:  758:    ));
        1:  759:    conditions.add_field_condition(FieldCondition(
        1:  759-block  0
branch  0 taken 1
branch  1 taken 0
        1:  759-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  759-block  2
    $$$$$:  759-block  3
    $$$$$:  759-block  4
    $$$$$:  759-block  5
        1:  760:        std::make_unique<Field<int32_t>>("id", 0),
        1:  760-block  0
branch  0 taken 1
branch  1 taken 0
        1:  761:        "<",
        1:  761-block  0
branch  0 taken 1
branch  1 taken 0
        1:  762:        std::make_unique<Field<int32_t>>("", b)
        1:  762-block  0
branch  0 taken 1
branch  1 taken 0
        -:  763:    ));
        -:  764:
        1:  765:    results = db_client->select(test_table, conditions);
        1:  765-block  0
branch  0 taken 1
branch  1 taken 0
        1:  766:    stopwatch.flag("Select with conditions: " + std::to_string(b - a));
        1:  766-block  0
branch  0 taken 1
branch  1 taken 0
        1:  766-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  766-block  2
    $$$$$:  766-block  3
        1:  767:    EXPECT_EQ(results.size(), b-a);
        1:  767-block  0
branch  0 taken 1
branch  1 taken 0
        1:  767-block  1
branch  2 taken 1
branch  3 taken 0
        1:  767-block  2
branch  4 taken 0
branch  5 taken 1
        1:  767-block  3
    $$$$$:  767-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  767-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  767-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  767-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  767-block  8
    $$$$$:  767-block  9
    $$$$$:  767-block 10
    $$$$$:  767-block 11
        -:  768:
        1:  769:    Conditions conditions_page;
        1:  770:    constexpr uint32_t page_sz = 1000;
        1:  771:    conditions_page.set_page_condition(PageCondition(page_sz));
        1:  771-block  0
branch  0 taken 1
branch  1 taken 0
        1:  771-block  1
branch  2 taken 1
branch  3 taken 0
        1:  772:    auto page_res = db_client->select(test_table, conditions_page);
        1:  772-block  0
branch  0 taken 1
branch  1 taken 0
        1:  773:    stopwatch.flag("View with paging");
        1:  773-block  0
branch  0 taken 1
branch  1 taken 0
        1:  774:    EXPECT_EQ(page_res.size(), page_sz);
        1:  774-block  0
branch  0 taken 1
branch  1 taken 0
        1:  774-block  1
branch  2 taken 1
branch  3 taken 0
        1:  774-block  2
branch  4 taken 0
branch  5 taken 1
        1:  774-block  3
    $$$$$:  774-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  774-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  774-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  774-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  774-block  8
    $$$$$:  774-block  9
    $$$$$:  774-block 10
    $$$$$:  774-block 11
        1:  775:}
    $$$$$:  775-block  0
    $$$$$:  775-block  1
    $$$$$:  775-block  2
    $$$$$:  775-block  3
    $$$$$:  775-block  4
    $$$$$:  775-block  5
    $$$$$:  775-block  6
    $$$$$:  775-block  7
    $$$$$:  775-block  8
    $$$$$:  775-block  9
    $$$$$:  775-block 10
    $$$$$:  775-block 11
    $$$$$:  775-block 12
    $$$$$:  775-block 13
    $$$$$:  775-block 14
    $$$$$:  775-block 15
    $$$$$:  775-block 16
    $$$$$:  775-block 17
    $$$$$:  775-block 18
    $$$$$:  775-block 19
    $$$$$:  775-block 20
    $$$$$:  775-block 21
    $$$$$:  775-block 22
    $$$$$:  775-block 23
    $$$$$:  775-block 24
    $$$$$:  775-block 25
    $$$$$:  775-block 26
    $$$$$:  775-block 27
        1:  775-block 28
    $$$$$:  775-block 29
    $$$$$:  775-block 30
    $$$$$:  775-block 31
    $$$$$:  775-block 32
    $$$$$:  775-block 33
    $$$$$:  775-block 34
    $$$$$:  775-block 35
        -:  776:
        -:  777:
function _ZN33PqxxClientTest_ViewSpeedTest_Test8TestBodyEv called 1 returned 100% blocks executed 41%
function _ZN33PqxxClientTest_ViewSpeedTest_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN33PqxxClientTest_ViewSpeedTest_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN33PqxxClientTest_ViewSpeedTest_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  778:TEST_F(PqxxClientTest, ViewSpeedTest)
        1:  778-block  0
branch  0 taken 1
branch  1 taken 0
        1:  778-block  1
branch  2 taken 1
branch  3 taken 0
        1:  778-block  2
branch  4 taken 1
branch  5 taken 0
        1:  778-block  3
branch  6 taken 1
branch  7 taken 0
        1:  778-block  4
branch  8 taken 1
branch  9 taken 0
        1:  778-block  5
branch 10 taken 1
branch 11 taken 0
        1:  778-block  6
branch 12 taken 1
branch 13 taken 0
        1:  778-block  7
branch 14 taken 1
branch 15 taken 0
        1:  778-block  8
branch 16 taken 1
branch 17 taken 0
        1:  778-block  9
    $$$$$:  778-block 10
    $$$$$:  778-block 11
    $$$$$:  778-block 12
    $$$$$:  778-block 13
    $$$$$:  778-block 14
    $$$$$:  778-block 15
    $$$$$:  778-block 16
    $$$$$:  778-block 17
    $$$$$:  778-block 18
    $$$$$:  778-block 19
        1:  778-block 20
        1:  778-block 21
        1:  778-block 22
        -:  779:{
        -:  780:    // Create sample data
        1:  781:    std::vector<Record> records;
        1:  782:    constexpr uint32_t flush = 1 << 14;
        1:  783:    constexpr uint32_t limit_ = flush * 8;
        1:  784:    records.reserve(flush);
        1:  784-block  0
branch  0 taken 1
branch  1 taken 0
        -:  785:
   131073:  786:    for (uint32_t i = 1; i <= limit_; i++)
        1:  786-block  0
   131073:  786-block  1
branch  0 taken 131072
branch  1 taken 1
   131072:  786-block  2
        -:  787:    {
   131072:  788:        Record record1;
   131072:  789:        record1.push_back(std::make_unique<Field<int32_t>>("id", i));
   131072:  789-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  789-block  1
branch  2 taken 131072
branch  3 taken 0
    $$$$$:  789-block  2
   131072:  790:        record1.push_back(std::make_unique<Field<std::string>>("name", "Alice"));
   131072:  790-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  790-block  1
branch  2 taken 0
branch  3 taken 131072
    $$$$$:  790-block  2
   131072:  791:        record1.push_back(std::make_unique<Field<std::string>>("description", "Pers" + std::to_string(i)));
   131072:  791-block  0
branch  0 taken 0
branch  1 taken 131072
   131072:  791-block  1
branch  2 taken 0
branch  3 taken 131072
   131072:  791-block  2
branch  4 taken 131072
branch  5 taken 0
    $$$$$:  791-block  3
    $$$$$:  791-block  4
    $$$$$:  791-block  5
   131072:  792:        records.push_back(std::move(record1));
   131072:  792-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  793:        if (records.size() >= flush)
   131072:  793-block  0
branch  0 taken 131064
branch  1 taken 8
        -:  794:        {
        8:  795:            EXPECT_NO_THROW(db_client->insert(test_table, std::move(records)));
        8:  795-block  0
branch  0 taken 8
branch  1 taken 0
        8:  795-block  1
branch  2 taken 8
branch  3 taken 0
        8:  795-block  2
branch  4 taken 8
branch  5 taken 0
        8:  795-block  3
branch  6 taken 8
branch  7 taken 0
        8:  795-block  4
branch  8 taken 8
branch  9 taken 0
        8:  795-block  5
    $$$$$:  795-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  795-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  795-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  795-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  795-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  795-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  795-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  795-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  795-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  795-block 15
branch 28 never executed
branch 29 never executed
        8:  795-block 16
    $$$$$:  795-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  795-block 18
    $$$$$:  795-block 19
    $$$$$:  795-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  795-block 21
        8:  795-block 22
    $$$$$:  795-block 23
    $$$$$:  795-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  795-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  795-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  795-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  795-block 28
    $$$$$:  795-block 29
    $$$$$:  795-block 30
    $$$$$:  795-block 31
    $$$$$:  795-block 32
    $$$$$:  795-block 33
        8:  796:            records.clear();
        8:  797:        }
        8:  797-block  0
   131072:  798:    }
   131072:  798-block  0
    $$$$$:  798-block  1
        1:  799:    drug_lib::common::Stopwatch<> stopwatch;
        1:  799-block  0
branch  0 taken 1
branch  1 taken 0
        1:  799-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  799-block  2
    $$$$$:  799-block  3
    $$$$$:  799-block  4
        1:  800:    stopwatch.start("View speed with transforming");
        1:  800-block  0
branch  0 taken 1
branch  1 taken 0
    $$$$$:  800-block  1
        -:  801:
        1:  802:    const auto results = db_client->view(test_table);
        1:  802-block  0
branch  0 taken 1
branch  1 taken 0
        1:  803:    stopwatch.flag("View all: " + std::to_string(limit_));
        1:  803-block  0
branch  0 taken 1
branch  1 taken 0
        1:  803-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  803-block  2
    $$$$$:  803-block  3
        1:  804:    Record x;
        1:  805:    x.reserve(limit_);
        1:  805-block  0
branch  0 taken 1
branch  1 taken 0
   131073:  806:    for (const auto& record : results)
        1:  806-block  0
   131073:  806-block  1
branch  0 taken 1
branch  1 taken 131072
   131072:  806-block  2
   131072:  806-block  3
        -:  807:    {
   131072:  808:        auto f = record->extract(0);
   131072:  808-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  809:        auto f1 = record->extract(1);
   131072:  809-block  0
branch  0 taken 0
branch  1 taken 131072
   131072:  810:        auto f2 = record->extract(2);
   131072:  810-block  0
branch  0 taken 0
branch  1 taken 131072
   131072:  811:        x.push_back(std::make_unique<Field<std::string>>("id", f));
   131072:  811-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  811-block  1
branch  2 taken 131072
branch  3 taken 0
    $$$$$:  811-block  2
   131072:  812:        x.push_back(std::make_unique<Field<std::string>>("name", f1));
   131072:  812-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  812-block  1
branch  2 taken 131072
branch  3 taken 0
    $$$$$:  812-block  2
   131072:  813:        x.push_back(std::make_unique<Field<std::string>>("description", f2));
   131072:  813-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  813-block  1
branch  2 taken 131072
branch  3 taken 0
    $$$$$:  813-block  2
   131072:  814:    }
    $$$$$:  814-block  0
    $$$$$:  814-block  1
    $$$$$:  814-block  2
        1:  815:    EXPECT_EQ(results.size(), limit_);
        1:  815-block  0
branch  0 taken 1
branch  1 taken 0
        1:  815-block  1
branch  2 taken 1
branch  3 taken 0
        1:  815-block  2
branch  4 taken 0
branch  5 taken 1
        1:  815-block  3
    $$$$$:  815-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  815-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  815-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  815-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  815-block  8
    $$$$$:  815-block  9
    $$$$$:  815-block 10
    $$$$$:  815-block 11
        1:  816:    stopwatch.flag("View all + transformed: " + std::to_string(limit_));
        1:  816-block  0
branch  0 taken 1
branch  1 taken 0
        1:  816-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  816-block  2
    $$$$$:  816-block  3
        1:  817:    Conditions conditions;
        1:  818:    constexpr int32_t a = 1, b = 30;
        1:  819:    conditions.add_field_condition(FieldCondition(
        1:  819-block  0
branch  0 taken 1
branch  1 taken 0
        1:  819-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  819-block  2
    $$$$$:  819-block  3
    $$$$$:  819-block  4
    $$$$$:  819-block  5
        1:  820:        std::make_unique<Field<int32_t>>("id", 0),
        1:  820-block  0
branch  0 taken 1
branch  1 taken 0
        1:  821:        ">=",
        1:  821-block  0
branch  0 taken 1
branch  1 taken 0
        1:  822:        std::make_unique<Field<int32_t>>("", a)
        1:  822-block  0
branch  0 taken 1
branch  1 taken 0
        -:  823:    ));
        1:  824:    conditions.add_field_condition(FieldCondition(
        1:  824-block  0
branch  0 taken 1
branch  1 taken 0
        1:  824-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  824-block  2
    $$$$$:  824-block  3
    $$$$$:  824-block  4
    $$$$$:  824-block  5
        1:  825:        std::make_unique<Field<int32_t>>("id", 0),
        1:  825-block  0
branch  0 taken 1
branch  1 taken 0
        1:  826:        "<",
        1:  826-block  0
branch  0 taken 1
branch  1 taken 0
        1:  827:        std::make_unique<Field<int32_t>>("", b)
        1:  827-block  0
branch  0 taken 1
branch  1 taken 0
        -:  828:    ));
        -:  829:
        1:  830:    const auto res2 = db_client->view(test_table, conditions);
        1:  830-block  0
branch  0 taken 1
branch  1 taken 0
        -:  831:
        1:  832:    stopwatch.flag("View with conditions: " + std::to_string(b - a));
        1:  832-block  0
branch  0 taken 1
branch  1 taken 0
        1:  832-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  832-block  2
    $$$$$:  832-block  3
        1:  833:    EXPECT_EQ(res2.size(), b-a);
        1:  833-block  0
branch  0 taken 1
branch  1 taken 0
        1:  833-block  1
branch  2 taken 1
branch  3 taken 0
        1:  833-block  2
branch  4 taken 0
branch  5 taken 1
        1:  833-block  3
    $$$$$:  833-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  833-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  833-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  833-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  833-block  8
    $$$$$:  833-block  9
    $$$$$:  833-block 10
    $$$$$:  833-block 11
        1:  834:    Record x2;
        1:  835:    x2.reserve(limit_);
        1:  835-block  0
branch  0 taken 1
branch  1 taken 0
       30:  836:    for (const auto& record : res2)
        1:  836-block  0
       30:  836-block  1
branch  0 taken 29
branch  1 taken 1
       29:  836-block  2
       29:  836-block  3
        -:  837:    {
       29:  838:        auto f = record->extract(0);
       29:  838-block  0
branch  0 taken 29
branch  1 taken 0
       29:  839:        auto f1 = record->extract(1);
       29:  839-block  0
branch  0 taken 0
branch  1 taken 29
       29:  840:        auto f2 = record->extract(2);
       29:  840-block  0
branch  0 taken 0
branch  1 taken 29
       29:  841:        x2.push_back(std::make_unique<Field<std::string>>("id", f));
       29:  841-block  0
branch  0 taken 29
branch  1 taken 0
       29:  841-block  1
branch  2 taken 29
branch  3 taken 0
    $$$$$:  841-block  2
       29:  842:        x2.push_back(std::make_unique<Field<std::string>>("name", f1));
       29:  842-block  0
branch  0 taken 29
branch  1 taken 0
       29:  842-block  1
branch  2 taken 29
branch  3 taken 0
    $$$$$:  842-block  2
       29:  843:        x2.push_back(std::make_unique<Field<std::string>>("description", f2));
       29:  843-block  0
branch  0 taken 29
branch  1 taken 0
       29:  843-block  1
branch  2 taken 29
branch  3 taken 0
    $$$$$:  843-block  2
       29:  844:    }
    $$$$$:  844-block  0
    $$$$$:  844-block  1
    $$$$$:  844-block  2
        1:  845:    stopwatch.flag("View with conditions + transformed: " + std::to_string(b - a));
        1:  845-block  0
branch  0 taken 1
branch  1 taken 0
        1:  845-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  845-block  2
    $$$$$:  845-block  3
        -:  846:
        1:  847:    Conditions conditions_page;
        1:  848:    constexpr uint32_t page_sz = 1000;
        1:  849:    conditions_page.set_page_condition(PageCondition(page_sz));
        1:  849-block  0
branch  0 taken 1
branch  1 taken 0
        1:  849-block  1
branch  2 taken 1
branch  3 taken 0
        1:  850:    auto page_res = db_client->view(test_table, conditions_page);
        1:  850-block  0
branch  0 taken 1
branch  1 taken 0
        1:  851:    stopwatch.flag("View with paging");
        1:  851-block  0
branch  0 taken 1
branch  1 taken 0
        1:  852:    EXPECT_EQ(page_res.size(), page_sz);
        1:  852-block  0
branch  0 taken 1
branch  1 taken 0
        1:  852-block  1
branch  2 taken 1
branch  3 taken 0
        1:  852-block  2
branch  4 taken 0
branch  5 taken 1
        1:  852-block  3
    $$$$$:  852-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  852-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  852-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  852-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  852-block  8
    $$$$$:  852-block  9
    $$$$$:  852-block 10
    $$$$$:  852-block 11
        1:  853:    x2.clear();
        1:  853-block  0
branch  0 taken 1
branch  1 taken 0
        1:  854:    x2.reserve(limit_);
        1:  854-block  0
branch  0 taken 1
branch  1 taken 0
     1001:  855:    for (const auto& record : page_res)
        1:  855-block  0
     1001:  855-block  1
branch  0 taken 1
branch  1 taken 1000
     1000:  855-block  2
     1000:  855-block  3
        -:  856:    {
     1000:  857:        auto f = record->extract(0);
     1000:  857-block  0
branch  0 taken 1000
branch  1 taken 0
     1000:  858:        auto f1 = record->extract(1);
     1000:  858-block  0
branch  0 taken 0
branch  1 taken 1000
     1000:  859:        auto f2 = record->extract(2);
     1000:  859-block  0
branch  0 taken 0
branch  1 taken 1000
     1000:  860:        x2.push_back(std::make_unique<Field<std::string>>("id", f));
     1000:  860-block  0
branch  0 taken 1000
branch  1 taken 0
     1000:  860-block  1
branch  2 taken 1000
branch  3 taken 0
    $$$$$:  860-block  2
     1000:  861:        x2.push_back(std::make_unique<Field<std::string>>("name", f1));
     1000:  861-block  0
branch  0 taken 1000
branch  1 taken 0
     1000:  861-block  1
branch  2 taken 1000
branch  3 taken 0
    $$$$$:  861-block  2
     1000:  862:        x2.push_back(std::make_unique<Field<std::string>>("description", f2));
     1000:  862-block  0
branch  0 taken 1000
branch  1 taken 0
     1000:  862-block  1
branch  2 taken 0
branch  3 taken 1000
    $$$$$:  862-block  2
     1000:  863:    }
    $$$$$:  863-block  0
    $$$$$:  863-block  1
    $$$$$:  863-block  2
        1:  864:    stopwatch.flag("View with paging + transformed");
        1:  864-block  0
branch  0 taken 1
branch  1 taken 0
        1:  865:}
    $$$$$:  865-block  0
    $$$$$:  865-block  1
    $$$$$:  865-block  2
    $$$$$:  865-block  3
    $$$$$:  865-block  4
    $$$$$:  865-block  5
    $$$$$:  865-block  6
    $$$$$:  865-block  7
    $$$$$:  865-block  8
    $$$$$:  865-block  9
    $$$$$:  865-block 10
    $$$$$:  865-block 11
    $$$$$:  865-block 12
    $$$$$:  865-block 13
    $$$$$:  865-block 14
    $$$$$:  865-block 15
    $$$$$:  865-block 16
    $$$$$:  865-block 17
    $$$$$:  865-block 18
    $$$$$:  865-block 19
    $$$$$:  865-block 20
    $$$$$:  865-block 21
    $$$$$:  865-block 22
    $$$$$:  865-block 23
    $$$$$:  865-block 24
    $$$$$:  865-block 25
    $$$$$:  865-block 26
    $$$$$:  865-block 27
    $$$$$:  865-block 28
    $$$$$:  865-block 29
    $$$$$:  865-block 30
    $$$$$:  865-block 31
    $$$$$:  865-block 32
    $$$$$:  865-block 33
    $$$$$:  865-block 34
    $$$$$:  865-block 35
    $$$$$:  865-block 36
    $$$$$:  865-block 37
    $$$$$:  865-block 38
    $$$$$:  865-block 39
    $$$$$:  865-block 40
        1:  865-block 41
    $$$$$:  865-block 42
    $$$$$:  865-block 43
    $$$$$:  865-block 44
    $$$$$:  865-block 45
    $$$$$:  865-block 46
    $$$$$:  865-block 47
    $$$$$:  865-block 48
    $$$$$:  865-block 49
    $$$$$:  865-block 50
    $$$$$:  865-block 51
        -:  866:
function _ZN32PqxxClientTest_FtsSpeedTest_Test8TestBodyEv called 1 returned 100% blocks executed 34%
function _ZN32PqxxClientTest_FtsSpeedTest_TestD2Ev called 1 returned 100% blocks executed 100%
function _ZN32PqxxClientTest_FtsSpeedTest_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN32PqxxClientTest_FtsSpeedTest_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  867:TEST_F(PqxxClientTest, FtsSpeedTest)
        1:  867-block  0
branch  0 taken 1
branch  1 taken 0
        1:  867-block  1
branch  2 taken 1
branch  3 taken 0
        1:  867-block  2
branch  4 taken 1
branch  5 taken 0
        1:  867-block  3
branch  6 taken 1
branch  7 taken 0
        1:  867-block  4
branch  8 taken 1
branch  9 taken 0
        1:  867-block  5
branch 10 taken 1
branch 11 taken 0
        1:  867-block  6
branch 12 taken 1
branch 13 taken 0
        1:  867-block  7
branch 14 taken 1
branch 15 taken 0
        1:  867-block  8
branch 16 taken 1
branch 17 taken 0
        1:  867-block  9
    $$$$$:  867-block 10
    $$$$$:  867-block 11
    $$$$$:  867-block 12
    $$$$$:  867-block 13
    $$$$$:  867-block 14
    $$$$$:  867-block 15
    $$$$$:  867-block 16
    $$$$$:  867-block 17
    $$$$$:  867-block 18
    $$$$$:  867-block 19
        1:  867-block 20
        1:  867-block 21
        1:  867-block 22
        -:  868:{
        -:  869:    // Create sample data
        1:  870:    std::vector<Record> records;
        1:  871:    constexpr uint32_t flush = 1 << 14;
        1:  872:    constexpr uint32_t limit_ = flush * 8;
        1:  873:    records.reserve(flush);
        1:  873-block  0
branch  0 taken 1
branch  1 taken 0
        -:  874:
   131073:  875:    for (uint32_t i = 0; i < limit_; i++)
        1:  875-block  0
   131073:  875-block  1
branch  0 taken 131072
branch  1 taken 1
   131072:  875-block  2
        -:  876:    {
   131072:  877:        Record record1;
   131072:  878:        record1.push_back(std::make_unique<Field<int32_t>>("id", i));
   131072:  878-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  878-block  1
branch  2 taken 131072
branch  3 taken 0
    $$$$$:  878-block  2
   131072:  879:        record1.push_back(std::make_unique<Field<std::string>>("name", "Alice"));
   131072:  879-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  879-block  1
branch  2 taken 0
branch  3 taken 131072
    $$$$$:  879-block  2
   131072:  880:        record1.push_back(std::make_unique<Field<std::string>>("description", "Pers" + std::to_string(i % 3)));
   131072:  880-block  0
branch  0 taken 0
branch  1 taken 131072
   131072:  880-block  1
branch  2 taken 0
branch  3 taken 131072
   131072:  880-block  2
branch  4 taken 131072
branch  5 taken 0
    $$$$$:  880-block  3
    $$$$$:  880-block  4
    $$$$$:  880-block  5
   131072:  881:        records.push_back(std::move(record1));
   131072:  881-block  0
branch  0 taken 131072
branch  1 taken 0
   131072:  882:        if (records.size() >= flush)
   131072:  882-block  0
branch  0 taken 131064
branch  1 taken 8
        -:  883:        {
        8:  884:            EXPECT_NO_THROW(db_client->insert(test_table, std::move(records)));
        8:  884-block  0
branch  0 taken 8
branch  1 taken 0
        8:  884-block  1
branch  2 taken 8
branch  3 taken 0
        8:  884-block  2
branch  4 taken 8
branch  5 taken 0
        8:  884-block  3
branch  6 taken 8
branch  7 taken 0
        8:  884-block  4
branch  8 taken 8
branch  9 taken 0
        8:  884-block  5
    $$$$$:  884-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  884-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  884-block  8
branch 14 never executed
branch 15 never executed
    $$$$$:  884-block  9
branch 16 never executed
branch 17 never executed
    $$$$$:  884-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:  884-block 11
branch 20 never executed
branch 21 never executed
    $$$$$:  884-block 12
branch 22 never executed
branch 23 never executed
    $$$$$:  884-block 13
branch 24 never executed
branch 25 never executed
    $$$$$:  884-block 14
branch 26 never executed
branch 27 never executed
    $$$$$:  884-block 15
branch 28 never executed
branch 29 never executed
        8:  884-block 16
    $$$$$:  884-block 17
branch 30 never executed
branch 31 never executed
    $$$$$:  884-block 18
    $$$$$:  884-block 19
    $$$$$:  884-block 20
branch 32 never executed
branch 33 never executed
    $$$$$:  884-block 21
        8:  884-block 22
    $$$$$:  884-block 23
    $$$$$:  884-block 24
branch 34 never executed
branch 35 never executed
    $$$$$:  884-block 25
branch 36 never executed
branch 37 never executed
    $$$$$:  884-block 26
branch 38 never executed
branch 39 never executed
    $$$$$:  884-block 27
branch 40 never executed
branch 41 never executed
    $$$$$:  884-block 28
    $$$$$:  884-block 29
    $$$$$:  884-block 30
    $$$$$:  884-block 31
    $$$$$:  884-block 32
    $$$$$:  884-block 33
        8:  885:            records.clear();
        8:  886:        }
        8:  886-block  0
   131072:  887:    }
   131072:  887-block  0
    $$$$$:  887-block  1
        1:  888:    drug_lib::common::Stopwatch<> stopwatch;
        1:  888-block  0
branch  0 taken 1
branch  1 taken 0
        1:  888-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  888-block  2
    $$$$$:  888-block  3
    $$$$$:  888-block  4
        1:  889:    stopwatch.start();
        1:  889-block  0
branch  0 taken 1
branch  1 taken 0
    $$$$$:  889-block  1
        1:  890:    stopwatch.set_countdown_from_prev(true);
        1:  890-block  0
branch  0 taken 1
branch  1 taken 0
        1:  891:    const std::string search_query = "Pers2";
        1:  891-block  0
branch  0 taken 1
branch  1 taken 0
    $$$$$:  891-block  1
        1:  892:    Conditions conditions;
        1:  893:    conditions.add_pattern_condition(PatternCondition(search_query));
        1:  893-block  0
branch  0 taken 1
branch  1 taken 0
        1:  893-block  1
branch  2 taken 1
branch  3 taken 0
    $$$$$:  893-block  2
        1:  894:    const auto results = db_client->view(test_table, conditions);
        1:  894-block  0
branch  0 taken 1
branch  1 taken 0
        1:  895:    stopwatch.finish();
        1:  896:    EXPECT_EQ(results.size(), limit_/3);
        1:  896-block  0
branch  0 taken 1
branch  1 taken 0
        1:  896-block  1
branch  2 taken 1
branch  3 taken 0
        1:  896-block  2
branch  4 taken 0
branch  5 taken 1
        1:  896-block  3
    $$$$$:  896-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  896-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  896-block  6
branch 10 never executed
branch 11 never executed
    $$$$$:  896-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:  896-block  8
    $$$$$:  896-block  9
    $$$$$:  896-block 10
    $$$$$:  896-block 11
        1:  897:}
    $$$$$:  897-block  0
    $$$$$:  897-block  1
    $$$$$:  897-block  2
    $$$$$:  897-block  3
    $$$$$:  897-block  4
    $$$$$:  897-block  5
    $$$$$:  897-block  6
    $$$$$:  897-block  7
    $$$$$:  897-block  8
    $$$$$:  897-block  9
    $$$$$:  897-block 10
    $$$$$:  897-block 11
    $$$$$:  897-block 12
    $$$$$:  897-block 13
        1:  897-block 14
    $$$$$:  897-block 15
    $$$$$:  897-block 16
    $$$$$:  897-block 17
    $$$$$:  897-block 18
    $$$$$:  897-block 19
        -:  898:
        -:  899:
function main called 1 returned 100% blocks executed 100%
        1:  900:int main()
        -:  901:{
        1:  902:    testing::InitGoogleTest();
        1:  903:    return RUN_ALL_TESTS();
        1:  903-block  0
        -:  904:}
