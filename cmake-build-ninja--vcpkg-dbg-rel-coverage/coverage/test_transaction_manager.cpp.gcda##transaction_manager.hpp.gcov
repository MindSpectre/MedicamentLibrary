        -:    0:Source:/home/neo/MedicamentLibrary/common/db/behavioral/transaction_manager/include/transaction_manager.hpp
        -:    0:Graph:/home/neo/MedicamentLibrary/cmake-build-ninja--vcpkg-dbg-rel-coverage/tests/CMakeFiles/DrugLib_Tests_Unit_TransactionManager.dir/unit_tests/transaction_manager/test_transaction_manager.cpp.gcno
        -:    0:Data:/home/neo/MedicamentLibrary/cmake-build-ninja--vcpkg-dbg-rel-coverage/tests/CMakeFiles/DrugLib_Tests_Unit_TransactionManager.dir/unit_tests/transaction_manager/test_transaction_manager.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#pragma once
        -:    2:#include <functional>
        -:    3:#include <memory>
        -:    4:#include <mutex>
        -:    5:#include <utility>
        -:    6:#include <boost/algorithm/string.hpp>
        -:    7:#include <json/json.h>
        -:    8:
        -:    9:#include "db_interface.hpp"
        -:   10:
        -:   11:namespace drug_lib::common::db::interfaces
        -:   12:{
function _ZN8drug_lib6common2db10interfaces18TransactionManagerD2Ev called 6 returned 100% blocks executed 100%
        -:   13:    class TransactionManager
        -:   14:    {
        -:   15:    public:
        -:   16:        // Default Constructor
function _ZN8drug_lib6common2db10interfaces18TransactionManagerC2Ev called 6 returned 100% blocks executed 100%
        6:   17:        TransactionManager() = default;
        6:   17-block  0
        -:   18:
        -:   19:        // Move Constructor and Move Assignment Operator
        -:   20:        TransactionManager(TransactionManager&& other) noexcept
        -:   21:            : tables_(std::move(other.tables_))
        -:   22:        {
        -:   23:        }
        -:   24:
        -:   25:        TransactionManager& operator=(TransactionManager&& other) noexcept
        -:   26:        {
        -:   27:            if (this != &other)
        -:   28:            {
        -:   29:                std::lock_guard lock(internalMutex);
        -:   30:                tables_ = std::move(other.tables_);
        -:   31:            }
        -:   32:            return *this;
        -:   33:        }
        -:   34:
        -:   35:        // Adds a new table with its associated database connection and mutex
function _ZN8drug_lib6common2db10interfaces18TransactionManager9add_tableERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10shared_ptrINS0_8database10interfaces11DbInterfaceEESC_ISt15recursive_mutexE called 12 returned 100% blocks executed 42%
       12:   36:        void add_table(const std::string& tableName,
        -:   37:                       std::shared_ptr<database::interfaces::DbInterface> dbConnection,
        -:   38:                       std::shared_ptr<std::recursive_mutex> tableMutex)
        -:   39:        {
       12:   40:            std::lock_guard lock(internalMutex);
       12:   41:            TableStatus nw_table_status;
       12:   42:            nw_table_status.connection = std::move(dbConnection);
       12:   43:            nw_table_status.mutex = std::move(tableMutex);
       12:   44:            tables_.insert(std::make_pair(tableName, std::move(nw_table_status)));
       12:   44-block  0
branch  0 taken 12
branch  1 taken 0
       12:   44-block  1
branch  2 taken 12
branch  3 taken 0
    $$$$$:   44-block  2
       12:   45:        }
       12:   45-block  0
    $$$$$:   45-block  1
    $$$$$:   45-block  2
    $$$$$:   45-block  3
        -:   46:
        -:   47:        // Removes a table and its associated connection and mutex
function _ZN8drug_lib6common2db10interfaces18TransactionManager12remove_tableERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 50%
        1:   48:        void remove_table(const std::string& tableName)
        -:   49:        {
        1:   50:            std::lock_guard lock(internalMutex);
        1:   51:            tables_.erase(tableName);
        1:   51-block  0
branch  0 taken 1
branch  1 taken 0
        1:   52:        }
        1:   52-block  0
    $$$$$:   52-block  1
    $$$$$:   52-block  2
        -:   53:
        -:   54:        // Starts transactions on multiple tables
        -:   55:        template <typename... Args>
function _ZN8drug_lib6common2db10interfaces18TransactionManager17start_transactionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvDpT_ called 8 returned 100% blocks executed 100%
        8:   56:        void start_transaction(Args... tableNames)
        -:   57:        {
        8:   58:            std::lock_guard lock(internalMutex);
        8:   59:            (start_transaction_impl(tableNames), ...);
        8:   59-block  0
branch  0 taken 6
branch  1 taken 2
        8:   60:        }
        6:   60-block  0
        2:   60-block  1
        2:   60-block  2
        -:   61:
        -:   62:        // Commits transactions on multiple tables
        -:   63:        template <typename... Args>
function _ZN8drug_lib6common2db10interfaces18TransactionManager18commit_transactionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvDpT_ called 1 returned 100% blocks executed 50%
        1:   64:        void commit_transaction(Args... tableNames)
        -:   65:        {
        1:   66:            std::lock_guard lock(internalMutex);
        1:   67:            (commit_transaction_impl(tableNames), ...);
        1:   67-block  0
branch  0 taken 1
branch  1 taken 0
        1:   68:        }
        1:   68-block  0
    $$$$$:   68-block  1
    $$$$$:   68-block  2
        -:   69:
        -:   70:        // Rolls back transactions on multiple tables
        -:   71:        template <typename... Args>
function _ZN8drug_lib6common2db10interfaces18TransactionManager20rollback_transactionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvDpT_ called 1 returned 100% blocks executed 50%
        1:   72:        void rollback_transaction(Args... tableNames)
        -:   73:        {
        1:   74:            std::lock_guard lock(internalMutex);
        1:   75:            (rollback_transaction_impl(tableNames), ...);
        1:   75-block  0
branch  0 taken 1
branch  1 taken 0
        1:   76:        }
        1:   76-block  0
    $$$$$:   76-block  1
    $$$$$:   76-block  2
        -:   77:
        -:   78:    private:
function _ZN8drug_lib6common2db10interfaces18TransactionManager11TableStatusD2Ev called 36 returned 100% blocks executed 100%
function _ZN8drug_lib6common2db10interfaces18TransactionManager11TableStatusC2Ev called 12 returned 100% blocks executed 100%
function _ZN8drug_lib6common2db10interfaces18TransactionManager11TableStatusC2EOS4_ called 24 returned 100% blocks executed 100%
       12:   79:        struct TableStatus
       12:   79-block  0
        -:   80:        {
        -:   81:            std::shared_ptr<database::interfaces::DbInterface> connection;
        -:   82:            std::shared_ptr<std::recursive_mutex> mutex;
       12:   83:            bool transaction_started{};
        -:   84:        };
        -:   85:
        -:   86:        std::unordered_map<std::string, TableStatus> tables_;
        -:   87:        std::mutex internalMutex; // Protects the access to the maps
        -:   88:
        -:   89:        // Starts a transaction on a specific table
function _ZN8drug_lib6common2db10interfaces18TransactionManager22start_transaction_implERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 8 returned 100% blocks executed 100%
        8:   90:        void start_transaction_impl(const std::string& tableName)
        -:   91:        {
        8:   92:            check_and_start_table_transaction(tableName);
        8:   93:            lock_table(tableName);
        8:   94:        }
        8:   94-block  0
        -:   95:
        -:   96:        // Commits a transaction on a specific table
function _ZN8drug_lib6common2db10interfaces18TransactionManager23commit_transaction_implERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 100%
        1:   97:        void commit_transaction_impl(const std::string& tableName)
        -:   98:        {
        1:   99:            check_table_transaction_in_progress(tableName);
        1:  100:            unlock_table(tableName);
        2:  101:            auto& [connection, mutex, transaction_started] = tables_.at(tableName);
        1:  102:            connection->commit_transaction();
        1:  103:            transaction_started = false;
        1:  104:        }
        1:  104-block  0
        -:  105:
        -:  106:        // Rolls back a transaction on a specific table
function _ZN8drug_lib6common2db10interfaces18TransactionManager25rollback_transaction_implERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 100%
        1:  107:        void rollback_transaction_impl(const std::string& tableName)
        -:  108:        {
        1:  109:            check_table_transaction_in_progress(tableName);
        1:  110:            unlock_table(tableName);
        2:  111:            auto& [connection, mutex, transaction_started] = tables_.at(tableName);
        1:  112:            connection->rollback_transaction();
        1:  113:            transaction_started = false;
        1:  114:        }
        1:  114-block  0
        -:  115:
        -:  116:        // Locks the table-specific mutex
function _ZN8drug_lib6common2db10interfaces18TransactionManager10lock_tableERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 6 returned 100% blocks executed 66%
        6:  117:        void lock_table(const std::string& tableName)
        -:  118:        {
       12:  119:            if (const auto tableMutex = get_table_mutex(tableName))
        6:  119-block  0
branch  0 taken 0
branch  1 taken 6
    $$$$$:  119-block  1
    $$$$$:  119-block  2
        -:  120:            {
        6:  121:                tableMutex->lock();
        6:  121-block  0
branch  0 taken 6
branch  1 taken 0
        6:  122:            }
        6:  122-block  0
        6:  123:        }
        6:  123-block  0
        -:  124:
        -:  125:        // Unlocks the table-specific mutex
function _ZN8drug_lib6common2db10interfaces18TransactionManager12unlock_tableERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 2 returned 100% blocks executed 66%
        2:  126:        void unlock_table(const std::string& tableName)
        -:  127:        {
        4:  128:            if (const auto tableMutex = get_table_mutex(tableName))
        2:  128-block  0
branch  0 taken 0
branch  1 taken 2
    $$$$$:  128-block  1
    $$$$$:  128-block  2
        -:  129:            {
        2:  130:                tableMutex->unlock();
        2:  130-block  0
branch  0 taken 2
branch  1 taken 0
        2:  131:            }
        2:  131-block  0
        2:  132:        }
        2:  132-block  0
        -:  133:
        -:  134:        // Gets the mutex for a specific table
function _ZN8drug_lib6common2db10interfaces18TransactionManager15get_table_mutexERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 8 returned 100% blocks executed 75%
        8:  135:        std::shared_ptr<std::recursive_mutex> get_table_mutex(const std::string& tableName)
        -:  136:        {
        8:  137:            if (const auto it = tables_.find(tableName); it != tables_.end())
        8:  137-block  0
branch  0 taken 8
branch  1 taken 0
        -:  138:            {
        8:  139:                return it->second.mutex;
        8:  139-block  0
        -:  140:            }
    #####:  141:            return nullptr;
    $$$$$:  141-block  0
        8:  142:        }
        8:  142-block  0
        -:  143:
        -:  144:        // Starts a transaction for a specific table, checking if already in progress
function _ZN8drug_lib6common2db10interfaces18TransactionManager33check_and_start_table_transactionERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 8 returned 100% blocks executed 72%
        8:  145:        void check_and_start_table_transaction(const std::string& tableName)
        -:  146:        {
        -:  147:            try
        -:  148:            {
        8:  149:                auto& [connection, mutex, transaction_started] = tables_.at(tableName);
        8:  149-block  0
branch  0 taken 7
branch  1 taken 1
        7:  150:                if (transaction_started)
        7:  150-block  0
branch  0 taken 6
branch  1 taken 1
        -:  151:                {
        1:  152:                    throw std::runtime_error("Transaction is already in progress for table: " + tableName);
        1:  152-block  0
branch  0 taken 1
branch  1 taken 0
        1:  152-block  1
branch  2 taken 1
branch  3 taken 0
        1:  152-block  2
    $$$$$:  152-block  3
        1:  152-block  4
        1:  152-block  5
branch  4 taken 1
branch  5 taken 0
    $$$$$:  152-block  6
        1:  152-block  7
        -:  153:                }
        6:  154:                connection->start_transaction();
        6:  154-block  0
branch  0 taken 6
branch  1 taken 0
        6:  155:                transaction_started = true;
        9:  156:            }
        2:  156-block  0
branch  0 taken 1
branch  1 taken 1
        6:  156-block  1
        2:  156-block  2
        -:  157:            catch (const std::out_of_range&)
        -:  158:            {
        1:  159:                throw std::runtime_error("Table is not found: " + tableName);
        1:  159-block  0
branch  0 taken 1
branch  1 taken 0
        1:  159-block  1
branch  2 taken 1
branch  3 taken 0
        1:  159-block  2
    $$$$$:  159-block  3
        1:  159-block  4
        1:  159-block  5
branch  4 taken 1
branch  5 taken 0
    $$$$$:  159-block  6
        1:  160:            }
        1:  160-block  0
branch  0 taken 1
branch  1 taken 0
        1:  160-block  1
    $$$$$:  160-block  2
        9:  161:        }
        1:  161-block  0
    $$$$$:  161-block  1
    $$$$$:  161-block  2
        6:  161-block  3
        -:  162:
        -:  163:        // Checks if a transaction is in progress for a specific table
function _ZN8drug_lib6common2db10interfaces18TransactionManager35check_table_transaction_in_progressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 2 returned 100% blocks executed 14%
        2:  164:        void check_table_transaction_in_progress(const std::string& tableName)
        -:  165:        {
        -:  166:            try
        -:  167:            {
        2:  168:                if (auto& [connection, mutex, transaction_started] = tables_.at(tableName); !transaction_started)
        2:  168-block  0
branch  0 taken 2
branch  1 taken 0
        2:  168-block  1
branch  2 taken 2
branch  3 taken 0
        -:  169:                {
    #####:  170:                    throw std::runtime_error("No transaction in progress for table: " + tableName);
    $$$$$:  170-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  170-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  170-block  2
    $$$$$:  170-block  3
    $$$$$:  170-block  4
    $$$$$:  170-block  5
branch  4 never executed
branch  5 never executed
    $$$$$:  170-block  6
    $$$$$:  170-block  7
        -:  171:                }
        2:  172:            }
    $$$$$:  172-block  0
branch  0 never executed
branch  1 never executed
        2:  172-block  1
    $$$$$:  172-block  2
        -:  173:            catch (const std::out_of_range&)
        -:  174:            {
    #####:  175:                throw std::runtime_error("Table is not found: " + tableName);
    $$$$$:  175-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  175-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  175-block  2
    $$$$$:  175-block  3
    $$$$$:  175-block  4
    $$$$$:  175-block  5
branch  4 never executed
branch  5 never executed
    $$$$$:  175-block  6
    #####:  176:            }
    $$$$$:  176-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  176-block  1
    $$$$$:  176-block  2
        2:  177:        }
    $$$$$:  177-block  0
    $$$$$:  177-block  1
    $$$$$:  177-block  2
        2:  177-block  3
        -:  178:    };
        -:  179:}
