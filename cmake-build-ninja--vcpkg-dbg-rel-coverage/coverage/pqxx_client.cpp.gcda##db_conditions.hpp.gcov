        -:    0:Source:/home/neo/MedicamentLibrary/common/db/base/db_conditions.hpp
        -:    0:Graph:/home/neo/MedicamentLibrary/cmake-build-ninja--vcpkg-dbg-rel-coverage/common/db/postgres/pqxx_impl/CMakeFiles/DrugLib_Common_Database_PqxxClient.dir/source/pqxx_client.cpp.gcno
        -:    0:Data:/home/neo/MedicamentLibrary/cmake-build-ninja--vcpkg-dbg-rel-coverage/common/db/postgres/pqxx_impl/CMakeFiles/DrugLib_Common_Database_PqxxClient.dir/source/pqxx_client.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// db_conditions.hpp
        -:    2:
        -:    3:#pragma once
        -:    4:
        -:    5:#include <memory>
        -:    6:#include <optional>
        -:    7:#include <string>
        -:    8:#include <vector>
        -:    9:
        -:   10:#include "db_field.hpp"
        -:   11:
        -:   12:namespace drug_lib::common::database
        -:   13:{
        -:   14:    class FieldCondition
        -:   15:    {
        -:   16:    public:
        -:   17:        ~FieldCondition() = default;
        -:   18:        FieldCondition(FieldCondition&&) noexcept = default;
        -:   19:        FieldCondition& operator=(FieldCondition&&) noexcept = default;
        -:   20:        FieldCondition(const FieldCondition&) = delete;
        -:   21:        FieldCondition& operator=(const FieldCondition&) = delete;
        -:   22:
        -:   23:        FieldCondition(std::unique_ptr<FieldBase> field, std::string op, std::unique_ptr<FieldBase> value)
        -:   24:            : field_(std::move(field)), operator_(std::move(op)), value_(std::move(value))
        -:   25:        {
        -:   26:        }
        -:   27:
function _ZNKR8drug_lib6common8database14FieldCondition5fieldEv called 6 returned 100% blocks executed 100%
        6:   28:        [[nodiscard]] const std::unique_ptr<FieldBase>& field() const & { return field_; }
        6:   28-block  0
function _ZNKR8drug_lib6common8database14FieldCondition2opB5cxx11Ev called 6 returned 100% blocks executed 100%
        6:   29:        [[nodiscard]] const std::string& op() const & { return operator_; }
        6:   29-block  0
function _ZNKR8drug_lib6common8database14FieldCondition5valueEv called 6 returned 100% blocks executed 100%
        6:   30:        [[nodiscard]] const std::unique_ptr<FieldBase>& value() const & { return value_; }
        6:   30-block  0
        -:   31:
        -:   32:    private:
        -:   33:        std::unique_ptr<FieldBase> field_;
        -:   34:        std::string operator_;
        -:   35:        std::unique_ptr<FieldBase> value_;
        -:   36:    };
        -:   37:
        -:   38:    class PatternCondition final
        -:   39:    {
        -:   40:    public:
        -:   41:        explicit PatternCondition(std::string&& pattern) : pattern_(std::move(pattern))
        -:   42:        {
        -:   43:        }
        -:   44:
        -:   45:        explicit PatternCondition(const std::string& pattern) : pattern_(pattern)
        -:   46:        {
        -:   47:        }
        -:   48:
        -:   49:        ~PatternCondition() = default;
        -:   50:
function _ZNKR8drug_lib6common8database16PatternCondition11get_patternB5cxx11Ev called 6 returned 100% blocks executed 100%
        6:   51:        [[nodiscard]] const std::string& get_pattern() const &
        -:   52:        {
        6:   53:            return pattern_;
        6:   53-block  0
        -:   54:        }
        -:   55:
        -:   56:        void set_pattern(std::string&& pattern) &
        -:   57:        {
        -:   58:            pattern_ = std::move(pattern);
        -:   59:        }
        -:   60:
        -:   61:        void set_pattern(const std::string& pattern) &
        -:   62:        {
        -:   63:            pattern_ = pattern;
        -:   64:        }
        -:   65:
        -:   66:    protected:
        -:   67:        std::string pattern_;
        -:   68:    };
        -:   69:
        -:   70:    enum class order_type
        -:   71:    {
        -:   72:        ascending,
        -:   73:        descending
        -:   74:    };
        -:   75:
        -:   76:    class OrderCondition final
        -:   77:    {
        -:   78:    public:
        -:   79:        ~OrderCondition() = default;
        -:   80:        OrderCondition(OrderCondition&&) noexcept = default;
        -:   81:        OrderCondition& operator=(OrderCondition&&) noexcept = default;
        -:   82:        OrderCondition(const OrderCondition&) = delete;
        -:   83:        OrderCondition& operator=(const OrderCondition&) = delete;
        -:   84:
        -:   85:        explicit OrderCondition(std::unique_ptr<FieldBase>&& field,
        -:   86:                                const order_type order = order_type::ascending, std::string spec_ = {}) :
        -:   87:            column_(std::move(field)), order_(order), specifier_(std::move(spec_))
        -:   88:        {
        -:   89:        }
        -:   90:
        -:   91:        explicit OrderCondition(std::string column_name,
        -:   92:                                const order_type order = order_type::ascending, std::string spec_ = {}) :
        -:   93:            order_(order), specifier_(std::move(spec_))
        -:   94:        {
        -:   95:            column_ = std::make_unique<Field<int32_t>>(std::move(column_name), 0);
        -:   96:        }
        -:   97:
function _ZNK8drug_lib6common8database14OrderCondition10get_columnEv called 1 returned 100% blocks executed 100%
        1:   98:        [[nodiscard]] const std::unique_ptr<FieldBase>& get_column() const
        -:   99:        {
        1:  100:            return column_;
        1:  100-block  0
        -:  101:        }
        -:  102:
        -:  103:        void set_column(std::unique_ptr<FieldBase>&& column) &
        -:  104:        {
        -:  105:            column_ = std::move(column);
        -:  106:        }
        -:  107:
function _ZNK8drug_lib6common8database14OrderCondition9get_orderEv called 1 returned 100% blocks executed 100%
        1:  108:        [[nodiscard]] order_type get_order() const
        -:  109:        {
        1:  110:            return order_;
        1:  110-block  0
        -:  111:        }
        -:  112:
        -:  113:        void set_order(const order_type order) &
        -:  114:        {
        -:  115:            order_ = order;
        -:  116:        }
        -:  117:
        -:  118:        [[nodiscard]] const std::string& get_specifier() const
        -:  119:        {
        -:  120:            return specifier_;
        -:  121:        }
        -:  122:
        -:  123:        void set_specifier(const std::string& specifier) &
        -:  124:        {
        -:  125:            specifier_ = specifier;
        -:  126:        }
        -:  127:
        -:  128:        void set_specifier(std::string&& specifier) &
        -:  129:        {
        -:  130:            specifier_ = std::move(specifier);
        -:  131:        }
        -:  132:
        -:  133:    private:
        -:  134:        std::unique_ptr<FieldBase> column_;
        -:  135:        order_type order_ = order_type::ascending;
        -:  136:        std::string specifier_;
        -:  137:    };
        -:  138:
        -:  139:    class PageCondition final
        -:  140:    {
        -:  141:    public:
        -:  142:        ~PageCondition() = default;
        -:  143:        // Constructors
        -:  144:        explicit PageCondition(const int32_t limit, const int32_t offset = 0)
        -:  145:            : limit_(limit), offset_(offset)
        -:  146:        {
        -:  147:        }
        -:  148:
        -:  149:        // Accessors
function _ZNKR8drug_lib6common8database13PageCondition9get_limitEv called 4 returned 100% blocks executed 100%
        4:  150:        [[nodiscard]] uint32_t get_limit() const &
        -:  151:        {
        4:  152:            return limit_;
        4:  152-block  0
        -:  153:        }
        -:  154:
function _ZNKR8drug_lib6common8database13PageCondition10get_offsetEv called 4 returned 100% blocks executed 100%
        4:  155:        [[nodiscard]] uint32_t get_offset() const &
        -:  156:        {
        4:  157:            return offset_;
        4:  157-block  0
        -:  158:        }
        -:  159:
        -:  160:        // Modifiers
        -:  161:        void set_limit(const uint32_t limit) &
        -:  162:        {
        -:  163:            limit_ = limit;
        -:  164:        }
        -:  165:
        -:  166:        PageCondition& set_limit(const uint32_t limit) &&
        -:  167:        {
        -:  168:            limit_ = limit;
        -:  169:            return *this;
        -:  170:        }
        -:  171:
        -:  172:        /// @warning accept 1-indexing
        -:  173:        PageCondition& set_page_number(const uint32_t page_number) &&
        -:  174:        {
        -:  175:            offset_ = limit_ * (page_number - 1);
        -:  176:            return *this;
        -:  177:        }
        -:  178:
        -:  179:        void set_page_number(const int32_t page_number) &
        -:  180:        {
        -:  181:            offset_ = limit_ * (page_number - 1);
        -:  182:        }
        -:  183:
        -:  184:        void set_offset(const uint32_t offset)
        -:  185:        {
        -:  186:            offset_ = offset;
        -:  187:        }
        -:  188:
        -:  189:    private:
        -:  190:        uint32_t limit_; // Number of records per page
        -:  191:        uint32_t offset_; // Starting point in the dataset (calculated as page_number * limit)
        -:  192:    };
        -:  193:
        -:  194:    class Conditions final
        -:  195:    {
        -:  196:    public:
        -:  197:        ~Conditions() = default;
        -:  198:
        -:  199:        void add_field_condition(FieldCondition&& condition) &
        -:  200:        {
        -:  201:            conditions_.push_back(std::move(condition));
        -:  202:        }
        -:  203:
        -:  204:        template <typename... Args>
        -:  205:        void add_field_condition(Args&&... args) &
        -:  206:        {
        -:  207:            conditions_.emplace_back(std::forward<Args>(args)...);
        -:  208:        }
        -:  209:
        -:  210:        void add_pattern_condition(PatternCondition&& condition) &
        -:  211:        {
        -:  212:            patterns_.push_back(std::move(condition));
        -:  213:        }
        -:  214:
        -:  215:        template <typename... Args>
        -:  216:        void add_pattern_condition(Args&&... args) &
        -:  217:        {
        -:  218:            patterns_.emplace_back(std::forward<Args>(args)...);
        -:  219:        }
        -:  220:
        -:  221:        void add_order_by_condition(OrderCondition&& condition) &
        -:  222:        {
        -:  223:            orders_.push_back(std::move(condition));
        -:  224:        }
        -:  225:
        -:  226:        template <typename... Args>
        -:  227:        void add_order_by_condition(Args&&... args) &
        -:  228:        {
        -:  229:            orders_.emplace_back(std::forward<Args>(args)...);
        -:  230:        }
        -:  231:
        -:  232:
        -:  233:        template <typename... Args>
        -:  234:        void set_page_condition(Args&&... args) &
        -:  235:        {
        -:  236:            pages_ = PageCondition(std::forward<Args>(args)...);
        -:  237:        }
        -:  238:
        -:  239:
        -:  240:        void set_page_condition(PageCondition condition) &
        -:  241:        {
        -:  242:            pages_ = condition;
        -:  243:        }
        -:  244:
        -:  245:        void pop_field_condition() &
        -:  246:        {
        -:  247:            conditions_.pop_back();
        -:  248:        }
        -:  249:
        -:  250:        void pop_pattern_condition() &
        -:  251:        {
        -:  252:            patterns_.pop_back();
        -:  253:        }
        -:  254:
        -:  255:        void pop_order_by_condition() &
        -:  256:        {
        -:  257:            orders_.pop_back();
        -:  258:        }
        -:  259:
        -:  260:        void clear_field_conditions() &
        -:  261:        {
        -:  262:            conditions_.clear();
        -:  263:        }
        -:  264:
        -:  265:        void clear_pattern_conditions() &
        -:  266:        {
        -:  267:            patterns_.clear();
        -:  268:        }
        -:  269:
        -:  270:        void clear_order_by_conditions() &
        -:  271:        {
        -:  272:            orders_.clear();
        -:  273:        }
        -:  274:
        -:  275:        void clear_page_conditions() &
        -:  276:        {
        -:  277:            pages_.reset();
        -:  278:        }
        -:  279:
function _ZNKR8drug_lib6common8database10Conditions17fields_conditionsEv called 15 returned 100% blocks executed 100%
       15:  280:        [[nodiscard]] const std::vector<FieldCondition>& fields_conditions() const &
        -:  281:        {
       15:  282:            return conditions_;
       15:  282-block  0
        -:  283:        }
        -:  284:
function _ZNKR8drug_lib6common8database10Conditions18pattern_conditionsEv called 15 returned 100% blocks executed 100%
       15:  285:        [[nodiscard]] const std::vector<PatternCondition>& pattern_conditions() const &
        -:  286:        {
       15:  287:            return patterns_;
       15:  287-block  0
        -:  288:        }
        -:  289:
function _ZNKR8drug_lib6common8database10Conditions19order_by_conditionsEv called 15 returned 100% blocks executed 100%
       15:  290:        [[nodiscard]] const std::vector<OrderCondition>& order_by_conditions() const &
        -:  291:        {
       15:  292:            return orders_;
       15:  292-block  0
        -:  293:        }
        -:  294:
function _ZNKR8drug_lib6common8database10Conditions14page_conditionEv called 19 returned 100% blocks executed 100%
       19:  295:        [[nodiscard]] const std::optional<PageCondition>& page_condition() const &
        -:  296:        {
       19:  297:            return pages_;
       19:  297-block  0
        -:  298:        }
        -:  299:
function _ZNK8drug_lib6common8database10Conditions5emptyEv called 15 returned 100% blocks executed 100%
       15:  300:        [[nodiscard]] bool empty() const
        -:  301:        {
       15:  302:            return conditions_.empty() && patterns_.empty() && orders_.empty() && !pages_.has_value();
       15:  302-block  0
branch  0 taken 11
branch  1 taken 4
       11:  302-block  1
branch  2 taken 5
branch  3 taken 6
        5:  302-block  2
branch  4 taken 1
branch  5 taken 4
        4:  302-block  3
       15:  302-block  4
        -:  303:        }
        -:  304:
        -:  305:    private:
        -:  306:        std::vector<FieldCondition> conditions_;
        -:  307:        std::vector<PatternCondition> patterns_;
        -:  308:        std::vector<OrderCondition> orders_;
        -:  309:        std::optional<PageCondition> pages_;
        -:  310:    };
        -:  311:}
