        -:    0:Source:/home/neo/MedicamentLibrary/common/db/mock/basic_mock/include/mock_db_client.hpp
        -:    0:Graph:/home/neo/MedicamentLibrary/cmake-build-ninja--vcpkg-dbg-rel-coverage/tests/CMakeFiles/DrugLib_Tests_Unit_TransactionManager.dir/unit_tests/transaction_manager/test_transaction_manager.cpp.gcno
        -:    0:Data:/home/neo/MedicamentLibrary/cmake-build-ninja--vcpkg-dbg-rel-coverage/tests/CMakeFiles/DrugLib_Tests_Unit_TransactionManager.dir/unit_tests/transaction_manager/test_transaction_manager.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// pqxx_client.hpp
        -:    2:#pragma once
        -:    3:
        -:    4:#include <db_interface.hpp>
        -:    5:#include <iostream>
        -:    6:#include <memory>
        -:    7:#include <regex>
        -:    8:#include <string_view>
        -:    9:#include <valarray>
        -:   10:#include <vector>
        -:   11:
        -:   12:
        -:   13:namespace drug_lib::common::database
        -:   14:{
        -:   15:    class MockDbClient final : public interfaces::DbInterface
        -:   16:    {
        -:   17:    public:
        -:   18:        /// @brief Creating database with given params using template db
        -:   19:        static void create_database(const std::string_view host,
        -:   20:                                    const uint32_t port,
        -:   21:                                    const std::string_view db_name,
        -:   22:                                    const std::string_view login,
        -:   23:                                    [[maybe_unused]] std::string_view password)
        -:   24:        {
        -:   25:            std::cout << "Creating database " << host << ":" << port << "\nDatabase name: " << db_name <<
        -:   26:                "\nCredentials: " << login << " " << "***********" << std::endl;
        -:   27:        }
        -:   28:
        -:   29:        /// @brief Explicitly close the connection. Destructor do the same, but this function can throw exception
function _ZN8drug_lib6common8database12MockDbClient12drop_connectEv called 0 returned 0% blocks executed 0%
    #####:   30:        void drop_connect() override
        -:   31:        {
    #####:   32:            std::cout << "drop_connect " << std::endl;
    #####:   33:        }
    $$$$$:   33-block  0
        -:   34:
        -:   35:
        -:   36:        /// @brief Trying to connect to the database, if connection is not open will throw exception
        -:   37:        /// @throws drug_lib::common::database::exceptions::ConnectionException
function _ZN8drug_lib6common8database12MockDbClientC2ESt17basic_string_viewIcSt11char_traitsIcEEjS6_S6_S6_ called 6 returned 100% blocks executed 85%
        6:   38:        MockDbClient(const std::string_view host,
        -:   39:                     const uint32_t port,
        -:   40:                     const std::string_view db_name,
        -:   41:                     const std::string_view login,
        -:   42:                     [[maybe_unused]] std::string_view password)
        6:   43:        {
        6:   44:            std::cout << "Connected to the database " << host << ":" << port << "\nDatabase name: " << db_name <<
        6:   44-block  0
branch  0 taken 6
branch  1 taken 0
        6:   44-block  1
branch  2 taken 6
branch  3 taken 0
        6:   44-block  2
branch  4 taken 6
branch  5 taken 0
        6:   44-block  3
branch  6 taken 6
branch  7 taken 0
        6:   44-block  4
branch  8 taken 6
branch  9 taken 0
        6:   44-block  5
branch 10 taken 6
branch 11 taken 0
        6:   44-block  6
branch 12 taken 6
branch 13 taken 0
        6:   45:                "\nCredentials: " << login << " " << "***********" << std::endl;
        6:   45-block  0
branch  0 taken 6
branch  1 taken 0
        6:   45-block  1
branch  2 taken 6
branch  3 taken 0
        6:   45-block  2
branch  4 taken 6
branch  5 taken 0
        6:   45-block  3
branch  6 taken 6
branch  7 taken 0
        6:   46:        }
        6:   46-block  0
    $$$$$:   46-block  1
    $$$$$:   46-block  2
        -:   47:
function _ZN8drug_lib6common8database12MockDbClientC2Ev called 6 returned 100% blocks executed 100%
        6:   48:        MockDbClient() = default;
        6:   48-block  0
function _ZN8drug_lib6common8database12MockDbClientD2Ev called 12 returned 100% blocks executed 100%
function _ZN8drug_lib6common8database12MockDbClientD0Ev called 0 returned 0% blocks executed 0%
       12:   49:        ~MockDbClient() override = default;
       12:   49-block  0
    $$$$$:   49-block  1
        -:   50:
        -:   51:        // Transaction Methods
        -:   52:        /// @brief Start a transaction. All queries before commiting/roll backing a transaction will use common transaction
        -:   53:        /// @throws  drug_lib::common::database::exceptions::TransactionException
function _ZN8drug_lib6common8database12MockDbClient17start_transactionEv called 6 returned 100% blocks executed 100%
        6:   54:        void start_transaction() override
        -:   55:        {
        6:   56:            std::cout << "start_transaction " << std::endl;
        6:   57:        }
        6:   57-block  0
        -:   58:
        -:   59:        /// @brief Commit a transaction. If throws an exception, all transaction will be reverted
        -:   60:        /// @throws  drug_lib::common::database::exceptions::TransactionException
function _ZN8drug_lib6common8database12MockDbClient18commit_transactionEv called 1 returned 100% blocks executed 100%
        1:   61:        void commit_transaction() override
        -:   62:        {
        1:   63:            std::cout << "commit_transaction " << std::endl;
        1:   64:        }
        1:   64-block  0
        -:   65:
        -:   66:        /// @brief Instantly cancel a transaction
        -:   67:        /// @throws  drug_lib::common::database::exceptions::TransactionException
function _ZN8drug_lib6common8database12MockDbClient20rollback_transactionEv called 1 returned 100% blocks executed 100%
        1:   68:        void rollback_transaction() override
        -:   69:        {
        1:   70:            std::cout << "rollback_transaction " << std::endl;
        1:   71:        }
        1:   71-block  0
        -:   72:
        -:   73:        /// @brief Create unique index for the table
        -:   74:        /// @param table_name For which table created index.
        -:   75:        /// @param conflict_fields Fields which will be unique for each record
function _ZN8drug_lib6common8database12MockDbClient22make_unique_constraintESt17basic_string_viewIcSt11char_traitsIcEESt6vectorISt10shared_ptrINS1_9FieldBaseEESaISA_EE called 0 returned 0% blocks executed 0%
    #####:   76:        void make_unique_constraint(std::string_view table_name,
        -:   77:                                    std::vector<std::shared_ptr<FieldBase>> conflict_fields) override
        -:   78:        {
    #####:   79:            std::cout << "make_unique_constraint " << std::endl;
    #####:   80:        }
    $$$$$:   80-block  0
        -:   81:
        -:   82:        /// @brief Create full test search index for given fields
        -:   83:        /// @param table_name For which table created index.
        -:   84:        /// @param fields Fts fields
function _ZN8drug_lib6common8database12MockDbClient15setup_fts_indexESt17basic_string_viewIcSt11char_traitsIcEESt6vectorISt10shared_ptrINS1_9FieldBaseEESaISA_EE called 0 returned 0% blocks executed 0%
    #####:   85:        void setup_fts_index(
        -:   86:            std::string_view table_name,
        -:   87:            std::vector<std::shared_ptr<FieldBase>> fields) override
        -:   88:        {
    #####:   89:            std::cout << "setup_full_text_search " << std::endl;
    #####:   90:        }
    $$$$$:   90-block  0
        -:   91:
        -:   92:        /// @brief Drop index, but doesn't remove fts fields from this client. Allows to restore it(reindex) using restore_full_text_search method
function _ZNK8drug_lib6common8database12MockDbClient14drop_fts_indexESt17basic_string_viewIcSt11char_traitsIcEE called 0 returned 0% blocks executed 0%
    #####:   93:        void drop_fts_index(std::string_view table_name) const override
        -:   94:        {
    #####:   95:            std::cout << "drop_full_text_search " << std::endl;
    #####:   96:        }
    $$$$$:   96-block  0
        -:   97:
        -:   98:        /// @brief Drop index + remove fields from this client. For using fts further setup_fulltext_search should be called again
function _ZN8drug_lib6common8database12MockDbClient16remove_fts_indexESt17basic_string_viewIcSt11char_traitsIcEE called 0 returned 0% blocks executed 0%
    #####:   99:        void remove_fts_index(std::string_view table_name) override
        -:  100:        {
    #####:  101:            std::cout << "remove_full_text_search " << std::endl;
    #####:  102:        }
    $$$$$:  102-block  0
        -:  103:
        -:  104:        /// @brief Restore index + reindex. Use previous declared fts fields
function _ZNK8drug_lib6common8database12MockDbClient17restore_fts_indexESt17basic_string_viewIcSt11char_traitsIcEE called 0 returned 0% blocks executed 0%
    #####:  105:        void restore_fts_index(std::string_view table_name) const override
        -:  106:        {
    #####:  107:            std::cout << "restore_full_text_search " << std::endl;
    #####:  108:        }
    $$$$$:  108-block  0
        -:  109:
        -:  110:        // Table Management
        -:  111:
        -:  112:        /// @param table_name new table name
        -:  113:        /// @param field_list properties of fields of new table
function _ZN8drug_lib6common8database12MockDbClient12create_tableESt17basic_string_viewIcSt11char_traitsIcEERKNS1_6RecordE called 0 returned 0% blocks executed 0%
    #####:  114:        void create_table(std::string_view table_name, const Record& field_list) override
        -:  115:        {
    #####:  116:            std::cout << "create_table " << std::endl;
    #####:  117:        }
    $$$$$:  117-block  0
        -:  118:
function _ZN8drug_lib6common8database12MockDbClient12remove_tableESt17basic_string_viewIcSt11char_traitsIcEE called 0 returned 0% blocks executed 0%
    #####:  119:        void remove_table(std::string_view table_name) override
        -:  120:        {
    #####:  121:            std::cout << "remove_table " << std::endl;
    #####:  122:        }
    $$$$$:  122-block  0
        -:  123:
function _ZN8drug_lib6common8database12MockDbClient14truncate_tableESt17basic_string_viewIcSt11char_traitsIcEE called 0 returned 0% blocks executed 0%
    #####:  124:        void truncate_table(std::string_view table_name) override
        -:  125:        {
    #####:  126:            std::cout << "truncate_table " << std::endl;
    #####:  127:        }
    $$$$$:  127-block  0
        -:  128:
        -:  129:        /// @return Existence status of table
function _ZN8drug_lib6common8database12MockDbClient11check_tableESt17basic_string_viewIcSt11char_traitsIcEE called 0 returned 0% blocks executed 0%
    #####:  130:        [[nodiscard]] bool check_table(std::string_view table_name) override
        -:  131:        {
    #####:  132:            std::cout << "check_table " << std::endl;
    #####:  133:            return true;
    $$$$$:  133-block  0
        -:  134:        }
        -:  135:
        -:  136:        // Data Retrieval
        -:  137:
        -:  138:        /// @brief Select records follow conditions. Copy all data to own it
        -:  139:        /// @return Vector of records. Each element of vector - one row in a table
function _ZNK8drug_lib6common8database12MockDbClient6selectESt17basic_string_viewIcSt11char_traitsIcEERKNS1_10ConditionsE called 0 returned 0% blocks executed 0%
    #####:  140:        [[nodiscard]] std::vector<Record> select(
        -:  141:            std::string_view table_name,
        -:  142:            const Conditions& conditions) const override
        -:  143:        {
    #####:  144:            std::cout << "select" << std::endl;
    #####:  145:            return {};
    $$$$$:  145-block  0
        -:  146:        }
        -:  147:
        -:  148:        /// @brief Select all table records.
        -:  149:        /// @warning Slow, because of copying all fields
function _ZNK8drug_lib6common8database12MockDbClient6selectESt17basic_string_viewIcSt11char_traitsIcEE called 0 returned 0% blocks executed 0%
    #####:  150:        [[nodiscard]] std::vector<Record> select(
        -:  151:            std::string_view table_name) const override
        -:  152:        {
    #####:  153:            std::cout << "select" << std::endl;
    #####:  154:            return {};
    $$$$$:  154-block  0
        -:  155:        }
        -:  156:
        -:  157:        /// @brief Faster than select, but doesn't transform and allows only one operation view field
        -:  158:        /// @return Vector of view records. Each element of vector - one row in a table
        -:  159:        /// @warning If u need not only view data, use select.
function _ZNK8drug_lib6common8database12MockDbClient4viewESt17basic_string_viewIcSt11char_traitsIcEERKNS1_10ConditionsE called 0 returned 0% blocks executed 0%
    #####:  160:        [[nodiscard]] std::vector<std::unique_ptr<ViewRecord>> view(
        -:  161:            std::string_view table_name,
        -:  162:            const Conditions& conditions) const override
        -:  163:        {
    #####:  164:            std::cout << "view" << std::endl;
    #####:  165:            return {};
    $$$$$:  165-block  0
        -:  166:        }
        -:  167:
        -:  168:        /// @brief Faster than select, but doesn't transform and allows only one operation view field
        -:  169:        /// @return Vector of view records. Each element of vector - one row in a table
        -:  170:        /// @warning If u need not only view data, use select.
function _ZNK8drug_lib6common8database12MockDbClient4viewESt17basic_string_viewIcSt11char_traitsIcEE called 0 returned 0% blocks executed 0%
    #####:  171:        [[nodiscard]] std::vector<std::unique_ptr<ViewRecord>> view(std::string_view table_name) const override
        -:  172:        {
    #####:  173:            std::cout << "view" << std::endl;
    #####:  174:            return {};
    $$$$$:  174-block  0
        -:  175:        }
        -:  176:
        -:  177:        // Remove Data
        -:  178:        ///@brief remove data following conditions
function _ZN8drug_lib6common8database12MockDbClient6removeESt17basic_string_viewIcSt11char_traitsIcEERKNS1_10ConditionsE called 0 returned 0% blocks executed 0%
    #####:  179:        void remove(std::string_view table_name,
        -:  180:                    const Conditions& conditions) override
        -:  181:        {
    #####:  182:            std::cout << "remove " << std::endl;
    #####:  183:        }
    $$$$$:  183-block  0
        -:  184:
        -:  185:        // Get Record Count
        -:  186:        /// @return Count of records
function _ZNK8drug_lib6common8database12MockDbClient5countESt17basic_string_viewIcSt11char_traitsIcEERKNS1_10ConditionsE called 0 returned 0% blocks executed 0%
    #####:  187:        [[nodiscard]] uint32_t count(std::string_view table_name,
        -:  188:                                     const Conditions& conditions) const override
        -:  189:        {
    #####:  190:            std::cout << "count" << std::endl;
    #####:  191:            return 0;
    $$$$$:  191-block  0
        -:  192:        }
        -:  193:
        -:  194:        /// @return Count of all records in table
function _ZNK8drug_lib6common8database12MockDbClient5countESt17basic_string_viewIcSt11char_traitsIcEE called 0 returned 0% blocks executed 0%
    #####:  195:        [[nodiscard]] uint32_t count(std::string_view table_name) const override
        -:  196:        {
    #####:  197:            std::cout << "count" << std::endl;
    #####:  198:            return 0;
    $$$$$:  198-block  0
        -:  199:        }
        -:  200:
        -:  201:    protected:
        -:  202:        // Implementation Methods for Data Manipulation
function _ZN8drug_lib6common8database12MockDbClient21insert_implementationESt17basic_string_viewIcSt11char_traitsIcEERKSt6vectorINS1_6RecordESaIS8_EE called 0 returned 0% blocks executed 0%
    #####:  203:        void insert_implementation(std::string_view table_name, const std::vector<Record>& rows) override
        -:  204:        {
    #####:  205:            std::cout << "insert_implementation " << std::endl;
    #####:  206:        }
    $$$$$:  206-block  0
        -:  207:
function _ZN8drug_lib6common8database12MockDbClient21insert_implementationESt17basic_string_viewIcSt11char_traitsIcEEOSt6vectorINS1_6RecordESaIS8_EE called 0 returned 0% blocks executed 0%
    #####:  208:        void insert_implementation(std::string_view table_name, std::vector<Record>&& rows) override
        -:  209:        {
    #####:  210:            std::cout << "insert_implementation " << std::endl;
    #####:  211:        }
    $$$$$:  211-block  0
        -:  212:
function _ZN8drug_lib6common8database12MockDbClient21upsert_implementationESt17basic_string_viewIcSt11char_traitsIcEERKSt6vectorINS1_6RecordESaIS8_EERKS7_ISt10shared_ptrINS1_9FieldBaseEESaISF_EE called 0 returned 0% blocks executed 0%
    #####:  213:        void upsert_implementation(std::string_view table_name,
        -:  214:                                   const std::vector<Record>& rows,
        -:  215:                                   const std::vector<std::shared_ptr<FieldBase>>& replace_fields) override
        -:  216:        {
    #####:  217:            std::cout << "upsert_implementation " << std::endl;
    #####:  218:        }
    $$$$$:  218-block  0
        -:  219:
function _ZN8drug_lib6common8database12MockDbClient21upsert_implementationESt17basic_string_viewIcSt11char_traitsIcEEOSt6vectorINS1_6RecordESaIS8_EERKS7_ISt10shared_ptrINS1_9FieldBaseEESaISE_EE called 0 returned 0% blocks executed 0%
    #####:  220:        void upsert_implementation(std::string_view table_name,
        -:  221:                                   std::vector<Record>&& rows,
        -:  222:                                   const std::vector<std::shared_ptr<FieldBase>>& replace_fields) override
        -:  223:        {
    #####:  224:            std::cout << "upsert_implementation " << std::endl;
    #####:  225:        }
    $$$$$:  225-block  0
        -:  226:    };
        -:  227:}
