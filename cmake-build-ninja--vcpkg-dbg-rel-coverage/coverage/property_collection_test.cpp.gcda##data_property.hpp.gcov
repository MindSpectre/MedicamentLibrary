        -:    0:Source:/home/neo/MedicamentLibrary/data/objects/properties/data_property.hpp
        -:    0:Graph:/home/neo/MedicamentLibrary/cmake-build-ninja--vcpkg-dbg-rel-coverage/tests/unit_tests/objects/CMakeFiles/DrugLib_Tests_Unit_Objects_PropertyCollection.dir/support_objects/property_collection_test.cpp.gcno
        -:    0:Data:/home/neo/MedicamentLibrary/cmake-build-ninja--vcpkg-dbg-rel-coverage/tests/unit_tests/objects/CMakeFiles/DrugLib_Tests_Unit_Objects_PropertyCollection.dir/support_objects/property_collection_test.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#pragma once
        -:    2:
        -:    3:#include <boost/container/flat_map.hpp>
        -:    4:
        -:    5:#include "db_field.hpp"
        -:    6:
        -:    7:namespace drug_lib::data
        -:    8:{
function _ZN8drug_lib4data12DataPropertyC2Ev called 7 returned 100% blocks executed 100%
function _ZN8drug_lib4data12DataPropertyC2ERKS1_ called 4 returned 100% blocks executed 100%
        -:    9:    class DataProperty
        -:   10:    {
        -:   11:    public:
function _ZN8drug_lib4data12DataPropertyD2Ev called 11 returned 100% blocks executed 100%
function _ZN8drug_lib4data12DataPropertyD0Ev called 0 returned 0% blocks executed 0%
       11:   12:        virtual ~DataProperty() = default;
       11:   12-block  0
    $$$$$:   12-block  1
        -:   13:
        -:   14:        [[nodiscard]] virtual Json::Value get_info() const = 0;
        -:   15:
        -:   16:        virtual void set_info(const Json::Value& property) = 0;
        -:   17:
        -:   18:        [[nodiscard]] virtual std::string get_name() const = 0;
        -:   19:
        -:   20:
        -:   21:        struct _common_properties
        -:   22:        {
        -:   23:        };
        -:   24:    };
        -:   25:
function _ZN8drug_lib4data18PropertyCollectionC2Ev called 5 returned 100% blocks executed 100%
function _ZN8drug_lib4data18PropertyCollectionD2Ev called 5 returned 100% blocks executed 100%
        -:   26:    class PropertyCollection final
        -:   27:    {
        -:   28:    public:
function _ZN8drug_lib4data18PropertyCollection12add_propertyERKSt10shared_ptrINS0_12DataPropertyEE called 7 returned 100% blocks executed 50%
        7:   29:        void add_property(const std::shared_ptr<DataProperty>& property)
        -:   30:        {
        7:   31:            m_data[property->get_name()] = property;
        7:   31-block  0
branch  0 taken 7
branch  1 taken 0
    $$$$$:   31-block  1
    $$$$$:   31-block  2
        7:   32:        }
        7:   32-block  0
        -:   33:
function _ZN8drug_lib4data18PropertyCollection15remove_propertyERKSt10shared_ptrINS0_12DataPropertyEE called 1 returned 100% blocks executed 50%
        1:   34:        void remove_property(const std::shared_ptr<DataProperty>& property)
        -:   35:        {
        1:   36:            m_data.erase(property->get_name());
        1:   36-block  0
branch  0 taken 1
branch  1 taken 0
    $$$$$:   36-block  1
    $$$$$:   36-block  2
        1:   37:        }
        1:   37-block  0
        -:   38:
function _ZN8drug_lib4data18PropertyCollection15remove_propertyERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 100%
        1:   39:        void remove_property(const std::string& property_name)
        -:   40:        {
        1:   41:            m_data.erase(property_name);
        1:   42:        }
        1:   42-block  0
        -:   43:
function _ZNK8drug_lib4data18PropertyCollection12get_propertyERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 5 returned 100% blocks executed 100%
        5:   44:        [[nodiscard]] std::shared_ptr<DataProperty> get_property(const std::string& property_name) const
        -:   45:        {
        5:   46:            return m_data.at(property_name);
        5:   46-block  0
        -:   47:        }
        -:   48:
        -:   49:        std::shared_ptr<DataProperty> operator[](const std::string& property_name) const
        -:   50:        {
        -:   51:            return m_data.at(property_name);
        -:   52:        }
        -:   53:
function _ZNK8drug_lib4data18PropertyCollection19get_collection_infoEv called 1 returned 100% blocks executed 81%
        1:   54:        [[nodiscard]] Json::Value get_collection_info() const noexcept
        -:   55:        {
        1:   56:            Json::Value result;
        1:   56-block  0
branch  0 taken 1
branch  1 taken 0
    $$$$$:   56-block  1
        2:   57:            for (const auto& [name, property] : m_data)
        1:   57-block  0
        2:   57-block  1
branch  0 taken 1
branch  1 taken 1
        1:   57-block  2
        1:   57-block  3
        -:   58:            {
        1:   59:                result[name] = property->get_info();
        1:   59-block  0
branch  0 taken 1
branch  1 taken 0
        1:   59-block  1
branch  2 taken 1
branch  3 taken 0
        -:   60:            }
        1:   61:            return result;
        1:   62:        }
        1:   62-block  0
branch  0 taken 1
branch  1 taken 0
    $$$$$:   62-block  1
        1:   62-block  2
        -:   63:
        -:   64:        [[nodiscard]] std::unique_ptr<common::database::Field<Json::Value>> make_properties_field() const noexcept;
        -:   65:
        -:   66:    private:
        -:   67:        boost::container::flat_map<std::string, std::shared_ptr<DataProperty>> m_data;
        -:   68:    };
        -:   69:}
