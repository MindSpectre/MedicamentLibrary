        -:    0:Source:/home/neo/.vcpkg-clion/vcpkg/installed/x64-linux/include/boost/container/detail/std_fwd.hpp
        -:    0:Graph:/home/neo/MedicamentLibrary/cmake-build-ninja--vcpkg-dbg-rel-coverage/common/db/postgres/pqxx_impl/CMakeFiles/DrugLib_Common_Database_PqxxClient.dir/source/pqxx_client.cpp.gcno
        -:    0:Data:/home/neo/MedicamentLibrary/cmake-build-ninja--vcpkg-dbg-rel-coverage/common/db/postgres/pqxx_impl/CMakeFiles/DrugLib_Common_Database_PqxxClient.dir/source/pqxx_client.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://////////////////////////////////////////////////////////////////////////////
        -:    2://
        -:    3:// (C) Copyright Ion Gaztanaga 2014-2014. Distributed under the Boost
        -:    4:// Software License, Version 1.0. (See accompanying file
        -:    5:// LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
        -:    6://
        -:    7:// See http://www.boost.org/libs/container for documentation.
        -:    8://
        -:    9://////////////////////////////////////////////////////////////////////////////
        -:   10:
        -:   11:#ifndef BOOST_CONTAINER_DETAIL_STD_FWD_HPP
        -:   12:#define BOOST_CONTAINER_DETAIL_STD_FWD_HPP
        -:   13:
        -:   14:#ifndef BOOST_CONFIG_HPP
        -:   15:#  include <boost/config.hpp>
        -:   16:#endif
        -:   17:
        -:   18:#if defined(BOOST_HAS_PRAGMA_ONCE)
        -:   19:#  pragma once
        -:   20:#endif
        -:   21:
        -:   22://////////////////////////////////////////////////////////////////////////////
        -:   23://                        Standard predeclarations
        -:   24://////////////////////////////////////////////////////////////////////////////
        -:   25:
        -:   26:#include <boost/move/detail/std_ns_begin.hpp>
        -:   27:BOOST_MOVE_STD_NS_BEG
        -:   28:
        -:   29:template<class T>
        -:   30:class allocator;
        -:   31:
        -:   32:template<class T>
        -:   33:struct less;
        -:   34:
        -:   35:template<class T>
        -:   36:struct equal_to;
        -:   37:
        -:   38:template<class T1, class T2>
        -:   39:struct pair;
        -:   40:
        -:   41:template<class T>
        -:   42:struct char_traits;
        -:   43:
        -:   44:struct input_iterator_tag;
        -:   45:struct forward_iterator_tag;
        -:   46:struct bidirectional_iterator_tag;
        -:   47:struct random_access_iterator_tag;
        -:   48:
        -:   49:template<class Container>
        -:   50:class insert_iterator;
        -:   51:
        -:   52:struct allocator_arg_t;
        -:   53:
        -:   54:struct piecewise_construct_t;
        -:   55:
        -:   56:template <class Ptr>
        -:   57:struct pointer_traits;
        -:   58:
        -:   59:BOOST_MOVE_STD_NS_END
        -:   60:#include <boost/move/detail/std_ns_end.hpp>
        -:   61:
        -:   62:#endif //#ifndef BOOST_CONTAINER_DETAIL_STD_FWD_HPP
