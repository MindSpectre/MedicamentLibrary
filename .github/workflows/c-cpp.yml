name: C++ CI with CTest and vcpkg

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
# Reusable YAML Anchors
anchors:
  setup_environment: &setup_environment
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Cache vcpkg
      uses: actions/cache@v3
      with:
        path: /opt/vcpkg
        key: vcpkg-${{ runner.os }}-${{ hashFiles('tools/installer/install_vcpkg.sh') }}
        restore-keys: |
          vcpkg-${{ runner.os }}-

    - name: Install dependencies
      run: |
        if [ ! -d /opt/vcpkg ]; then
          chmod +x tools/installer/install.sh
          tools/installer/install.sh
        fi

    - name: Clean vcpkg cache
      if: success()
      run: |
        rm -rf /opt/vcpkg/buildtrees /opt/vcpkg/downloads /opt/vcpkg/packages

    - name: Create build directory
      run: mkdir -p build

    - name: Configure with CMake
      run: |
        cd build
        cmake .. \
          -DCMAKE_C_COMPILER=clang \
          -DCMAKE_CXX_COMPILER=clang++ \
          -DCMAKE_TOOLCHAIN_FILE=/opt/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build with CMake
      run: |
        cd build
        cmake --build .

  run_ctest: &run_ctest
    - name: Run tests with CTest
      run: |
        cd build
        ctest --output-on-failure -L ${{ inputs.label }}
jobs:
  integration_testing:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
    steps:
      - <<: *setup_environment
      - <<: *run_ctest
        with:
          label: integration

  unit_testing:
    runs-on: ubuntu-latest
    steps:
      - <<: *setup_environment
      - <<: *run_ctest
        with:
          label: unit


