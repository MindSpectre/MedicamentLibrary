name: C++ CI with CTest and vcpkg

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
    steps:
      # 1. Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Install system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update || true
          sudo apt-get install -y \
            build-essential \
            pkg-config \
            curl \
            libicu-dev \
            uuid-dev \
            mesa-common-dev \
            libglu1-mesa-dev \
            libxkbcommon-x11-0 \
            libssl-dev \
            openssl \
            zlib1g-dev \
            zip \
            unzip \
            ninja-build
      - name: Setup Clang
        uses: llvm/llvm-project@gha
        with:
          install-flavor: apt
          llvm-version: 14  # Replace with your desired version

      # 3. Setup vcpkg with required packages
      - name: Setup vcpkg
        uses: lukka/setup-vcpkg@v1
        with:
          vcpkgTriplet: x64-linux
          # List your required vcpkg packages here
          vcpkgArguments: |
            install boost-system boost-filesystem boost-log boost-program-options
            install grpc
            install jsoncpp
            install valijson
            install libpq
            install libuuid
            install gtest
            install libpqxx
            install drogon
          cleanAfterBuild: true  # Cleans up to reduce cache size

      # 4. Create build directory
      - name: Create build directory
        run: mkdir -p build

      # 5. Configure the project with CMake using vcpkg toolchain
      - name: Configure with CMake
        working-directory: build
        run: |
          cmake .. -G Ninja \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake

      # 6. Build the project
      - name: Build with CMake
        working-directory: build
        run: cmake --build .

      # 7. Run tests with CTest
      - name: Run tests with CTest
        working-directory: build
        run: ctest --output-on-failure
